{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["1.","2.","3.","《大话数据结构》","《数据结构、算法与应用（c++语言描述）》","《数据结构》","《数据结构与算法分析：c语言描述》","《算法》","《算法导论》","一.","二.","写作目的","分类方法","前言","参考书籍","只包含每一种数据结构的引入和介绍，然后按照自己的理解写出结构代码，最后将每种数据结构的基础操作集中比较困难的操作进行总结。在初学时，将对每一种数据结构从结构代码到操作实现进行完整的代码编写。","在前人们解决问题的过程中，我想算法是比数据结构更早出现的，而数据结构则是为了支撑该算法而出现的数据组织和存储的方式。而到了现在，数据结构已然成为了算法的基础，每一种数据结构都有其完整的操作集，某些操作则需要应用到一些算法。","在新的分类中，我不想再纠结于每种数据结构有哪些算法，所有这些属于某个数据结构的基础操作集的算法，都将被我归类于数据结构的操作，某些不太典型但需要注意的操作将在对应的数据结构部分进行介绍，而那些比较典型的操作则将被我同时归类到数据结构与算法的部分。","对于数据结构与算法，其实从开始学习以来就一直想进行一个知识框架的梳理与总结，但苦于不知道该如何进行分类，所以久久都没有开始行动，直到现在也都还搞不清楚真正的界限在哪里，毕竟数据结构与算法总是交织在一起，但一直停在这里也不是办法，于是就按暂定的分类进行总结，到后面发现可以完善时再进行完善。暂时的具体思路是，所有的数据结构都归类在数据结构中，建立在数据结构上的算法也归类在数据结构中，然后其余的算法就归类在算法中。","对于数据结构的总结，将只包括基本介绍、代码实现和需要注意的操作的部分，新的分类将按照以下方法进行：","思维导图","数据结构","每一种算法都将由一个或多个实例引入，然后介绍该算法需要的基本条件（如数据结构等），最后介绍该算法的完整思想并给出核心部分的代码实现，而一些实际的题目将作为额外的部分添加到相应的算法后面。","简介","算法","终于，在读过《算法》之后，我对数据结构与算法又有了一个新的了解。"],"数据结构/数据结构.html":["数据结构"],"数据结构/数组/数组.html":["*e):","a2","a_1","a_2","a_n","adt","arraydelete(*l,","arrayempty(l):","arrayinsert(*l,","arraylength(l):","a​1​​,","a​1​​外,","a​2​​,","a​n​​),","a​n​​外,","cleararray(*l):","data","e):","endadt","getelem(l,","i,","initarray(*l):","locateelem(l,","oper","···,","一.","一维数组","二.","其中,","分类","初始化操作,","删除线性表l中第i个位置元素,","否则,","否则返回fals","在线性表l中查找与给定值e相等的元素,","在线性表l中的第i个位置插入新元素","如果查找成功,","字符串","将线性表l中的第i个位置元素值返回给","将线性表清空","并用e返回其值","建立一个空的线性表l","抽象数据类型","数据元素之间的关系是一对一的关系","数组","数组(array)","每一个元素有且只有一个直接前驱元素,","每一个元素有且只有一个直接后继元素.","每个元素的类型均为datatype.","线性表的数据对象集合为(a1","若线性表为空,","返回0表示失败","返回true,","返回线性表l的元素个数","返回该元素在表中序号表示成功;","除了最后一个元素an","除第一个元素a1"],"数据结构/数组/一维数组/一维数组.html":["(a1","1}","a_1","a_i","a_n","a_{i","a_{i+1}","ai","ai+1","ai−1","a​1​​,","a​i+1​​,","a​i+1​​是ai","a​i​​,","a​i​​在线性表中的位序","a​i​​是第i","a​i​​的直接前驱元素","a​i​​的直接后继元素","a​i−1​​,","a​i−1​​是ai","a​n​​)","i个数据元素，称i","i为数据元素ai","n(n\\geqslant0)","n(n⩾0)","n=0","n=0时，称为空表","···,","一.","一维数组","三.","二.","优点","位序：ai","关键概念","可以快速地存取表中任一位置的元素","定义","当线性表长度变化较大时,","指用一段地址连续的存储单元依次存储线性表的数据元素","插入和删除操作需要移动大量元素","无须为表示表中元素之间的逻辑关系而增加额外的存储空间","特点","直接前驱元素：如ai−1","直接后继元素：如ai+1","空表：当n=0","线性表的长度：所有线性表元素的个数n(n⩾0)","缺点","若将数组记为","造成存储空间的\"碎片\"","难以确定存储空间的容量"],"数据结构/数组/一维数组/代码实现/代码实现.html":["#defin","//","1.","20","data[maxsize];","elemtyp","elemtype;","elemtype类型根据实际情况而定,","int","length;","maxsiz","seqlist;","struct","typedef","{","}","代码实现","存储数据元素","存储空间初始分配量","数组,","线性表当前长度","这里为int"],"数据结构/数组/一维数组/难点操作/难点操作.html":["2.","一.","二.","从删除元素位置开始遍历到最后一个元素位置,","从最后一个元素开始向前遍历到第i个位置,","分别将他们都向后移动一个位置","分别将它们都向前移动一个位置","则抛出异常或动态增加容量","删除","取出删除元素","如果删除位置不合理,","如果插入位置不合理,","如果线性表长度大于等于数组长度,","将要插入元素填入位置i处","抛出异常","插入","表长减1","表长加1","难点操作"],"数据结构/串/串.html":["\"a1a2a_1a_2a​1​​a​2​​···ana_na​n​​\"，t=t=t=","\"b1b2b_1b_2b​1​​b​2​​···bmb_mb​m​​\"，当满足以下条件之一时，stsst。","(i=1i=1i=1,222,···,k−1k","(i=1i=1i=1,222,···,nnn)。","(n⩾0)(n\\geqslant","*chars)：生成一个其值等于字符串常量chars的串t。","0)(n⩾0).","1.","1k−1)，akbka_ka​k​​b​k​​。","2.","3.","adt","clearstring(s)：串s存在，将串清空。","concat(t,","data","endadt","index(s,","len)：串s存在，1⩽pos⩽strlength(s)1\\leqsl","len)：串s存在，1⩽pos⩽strlength(s)−len+11\\leqsl","len+11⩽pos⩽strlength(s)−len+1。从串s中删除第pos个字符起长度为len的子串。","len\\leqsl","min(m,","n)k⩽min(m,n)，使得ai=bia_i=b_ia​i​​=b​i​​","nmnnm，且ai=bia_i=b_ia​i​​=b​i​​","oper","pos)：串s和t存在，t是非空串，1⩽pos⩽strlength(s)1\\leqsl","pos+10⩽len⩽strlength(s)−pos+1，用sub返回串s的第pos个字符起长度为len的子串。","pos,","pos\\leqsl","replace(s,","s)：串s存在，由串s复制得串t。","s,","s1,","s2)：用t返回由s1和s2联接而成的新串。","strassign(t,","strcompare(s,","strcopy(t,","strdelete(s,","stringempty(s)：若串s为空，返回true，否则返回false。","strinsert(s,","strlength(s)","strlength(s)+11⩽pos⩽strlength(s)+1。在串s的第pos个字符之前插入串t。","strlength(s)1⩽pos⩽strlength(s)。若主串s中存在和串t值相同的子串，则返回它在主串s中第pos个字符之后第一次出现的位置，否则返回0。","strlength(s)1⩽pos⩽strlength(s)，且0⩽len⩽strlength(s)−pos+10\\leqsl","strlength(s)：返回串s的元素个数，即串的长度。","substring(sub,","t)：串s和t存在，1⩽pos⩽strlength(s)+11\\leqsl","t)：若s>t，返回值>0；若s=t，返回值=0；若s，返回值。","t,","v)：串s、t和v存在，t是非空串。用v替换主串s中出现的所有与t相等的不重叠的子串。","一.","三.","两串相等","串","串(string)","串中元素仅由一个字符组成，相邻元素具有前驱和后继关系。","串的抽象数据类型","串的比较","串的长度：串中的字符数目nnn。","串（string）是由零个或多个字符组成的有限序列，又叫字符串。一般记为s=s=s=\"a1a2a_1a_2a​1​​a​2​​···ana_na​n​​\"","二.","五.","关键概念","四.","大小比较","子串在主串中的位置：子串的第一个字符在主串中的序号","子串：串中任意个数的连续字符组成的子序列","存在某个k⩽min(m,n)k\\leqsl","定义","对于两个串不相等时，判定字符串大小的数学定义如下：","当两个字符串的字符不完全相同时，按照位序依次递增，直到遇到第一个不同的字符为止，字符小的那个字符串较小。","当两个字符串的长度不相同，但是较短的字符串和较长的字符串在都有字符的每个位序上字符都相同，则较短的字符串较小。","当两个字符串的长度以及每个位序上的字符都相等时，两个字符串才相等。","数学定义","空串：零个字符的串","给定两个串：s=s=s=","而从二者实际上能完成的工作来看，顺序串或许在拼接两个字符串以及在字符串中插入另一个字符串等类似操作上有一定的缺陷，但总体的优越性比链式串要好。字符串的特点是一个位置只放一个字符，如果使用链式串一个结点只放一个字符，则会造成很大的空间浪费，这一点可以通过一个结点多放几个字符来解决。","顺序串即用顺序存储的方式实现的字符串，通常是数组。该实现方式的特点是长度固定，但易于访问。链式串即使用链表实现的字符串，该实现方式的特点与顺序串相反。","顺序串和链式串","顺序串的大小固定的缺点可以通过动态分配内存来解决，但使用这种方法就需要添加更多完善的api函数来支撑。"],"数据结构/串/顺序串/顺序串.html":["一.","定义","顺序串","顺序串即用数组实现的字符串."],"数据结构/串/顺序串/代码实现/代码实现.html":["#defin","*string;","1.","20","char","inits","typedef","代码实现"],"数据结构/串/顺序串/难点操作/难点操作.html":["&","(i","*next)","*nextval)","0","0;","1.","1;","1}p​1​​...p​k−1​​和pj−k+1...pj−1p_{j","1}p​j−k+1​​...p​j−1​​是两个字符串，p1...pjp_1...p_jp​1​​...p​j​​是这个需要匹配的子串","2.","3.","5个字符是不同的，所以在朴素的模式匹配算法中会存在很多的多余操作。在此可以得到一个结论，就是每一次循环j可以不一定从1开始，主串指针i也不一定需要回退。","=","\\varnothing{k}≠∅表示前面的k集合不是空集。","c代码","get_next(str","get_next(t,","get_nextval(str","i,","index(str","index_kmp(str","int","j","j=1\\\\","j的值可以通过下面这个数学模型进行推导：","k","k+1}...p_{j","k;","k\\}\\neq","kmp模式匹配算法","kmp模式匹配算法的改进","k|(1next[j]=​⎩​⎪​⎨​⎪​⎧​​​0​max{k∣(1kj)&&(p​1​​...p​k−1​​=p​j−k+1​​...p​j−1​​)}​1​​​j=1​{k}≠∅​others​​","max\\{","next);","next[1]","next[255];","next[j]=\\begin{cases}","next[j]={0j=1max{k∣(1kj)&&(p1...pk−1=pj−k+1...pj−1)}{k}≠∅1oth","nextval[1]","p1...pk−1p_1...p_{k","pos)","pos;","return","s,","string","t,","t[0])","t[0];","void","{","{k}≠∅\\{","}","一.","三.","上述的kmp算法仍然存在一定缺陷。比如有以下两个字符串：aaaabcde和aaaaax，在子串和主串的指针都移动到5时，二者产生差异，此时按照上述的kmp模式匹配算法，i依旧指向5，j移动到4，然后开始匹配，结果依旧不匹配，j又移动到3。然而由于子串中前5个字符都是a，所以第五个字符与主串的第五个字符不匹配，那么说明子串的前面四个字符也都和主串的第五个字符不匹配，所以按照之前的kmp算法，依然会有一些多余操作存在。","二.","以下是改进之后的写入next数组的函数：","伪码描述","但实际情况是，在朴素的模式匹配算法中，包含了许多无用的操作。如abcdefgab和abcdex这个例子，前面五个字符都匹配，直到第六个字符时不匹配。按照朴素的模式匹配算法，主串将从b开始，子串将从a开始，而主串中第一个字符a和后面的字符都不相同，而刚刚前五个字符都已经和主串比较过是相同的，也就是说，子串的第一个字符肯定和主串的第2","假设主串s和要匹配的子串t的长度存在s[0]与t[0]中：","其中，next[j]是一个数组，下标代表子串的字符位序，其中保存的元素表示当此次匹配在某个位序处失败后，下一次匹配从数组中此位序元素值所显示的位序开始匹配。","分析","匹配部分","在初步的推导中，主串指针i是不需要回退的，所以我们直接考虑每一次模式匹配，j需要怎么进行回溯。","在朴素的模式匹配算法中，每一次开始匹配，都会将i退回到上一次循环的后一个位置，j被退回到第一个字符的位置。","当某个字符串遍历完成之后，退出循环","数学模型","朴素的模式匹配算法","根据子串内容写入next数组","用循环逐个对比两个位置上的字符是否相等，若相等则将两个变量加1，若不相等则将第二个变量退回到第一个字符的位置，第二个变量退回到之前的开始位置的后一个位置，然后继续开始查找","若第一个字符串遍历完成，说明无匹配子串，返回0","若第二个字符串遍历完成，返回此次循环主串开始的位置","难点操作","首先创建两个变量，一个变量指向指定的主串开始查找的位置，另一个变量指向子串的起始位置"],"数据结构/链表/链表.html":["(a1","*e):","1}","a2","a_1","a_2","a_i","a_n","a_{i","a_{i+1}","adt","ai","ai+1","ai−1","a​1​​,","a​1​​外,","a​2​​,","a​i+1​​,","a​i+1​​是ai","a​i​​,","a​i​​`在链表中的位序","a​i​​是第i","a​i​​的直接前驱元素","a​i​​的直接后继元素","a​i−1​​,","a​i−1​​是ai","a​n​​)","a​n​​),","a​n​​外,","clearlist(*l):","data","e):","endadt","getelem(l,","i,","initlist(*l):","i个数据元素，称i","i为数据元素ai","listdelete(*l,","listempty(l):","listinsert(*l,","listlength(l):","locateelem(l,","n(n\\geqslant0)","n(n⩾0)","n=0","n=0时，称为空表","oper","···,","一.","三.","二.","位序：ai","关键概念","其中,","分类","初始化操作,","删除链表l中第i个位置元素,","单链表","双向循环链表","双向链表","否则,","否则返回fals","在链表l中查找与给定值e相等的元素,","在链表l中的第i个位置插入新元素","在链表的第一个结点前附设的一个结点","头指针:","头结点:","如果查找成功,","将链表l中的第i个位置元素值返回给","将链表清空","并用e返回其值","建立一个空的链表l","循环链表","抽象数据类型","数据元素之间的关系是一对一的关系","每一个元素有且只有一个直接前驱元素,","每一个元素有且只有一个直接后继元素.","每个元素的类型均为datatype.","直接前驱元素：如ai−1","直接后继元素：如ai+1","空表：当n=0","线性表的数据对象集合为(a1","线性表的长度：所有链表元素的个数n(n⩾0)","若将链表记为","若链表为空,","返回0表示失败","返回true,","返回该元素在表中序号表示成功;","返回链表l的元素个数","链表","链表(linklist)","链表中的第一个结点的存储位置","除了最后一个元素an","除第一个元素a1","静态链表"],"数据结构/链表/单链表/单链表.html":["...,","a2","a_1","a_2","a_i","a_n","a​1​​,","a​2​​,","a​i​​的存储映像)链结成一个链表,","a​n​​)的链式存储结构","n个结点(ai","一.","不需要分配存储空间,","也不会浪费多余的空间","二.","优点","元素个数不受限制,","单链表","即为线性表(a1","定义","插入和删除操作时间复杂度小","查找操作的时间复杂度高","特点","缺点"],"数据结构/链表/单链表/代码实现/代码实现.html":["*linklist;","*next;","*pnode;","//","1.","data;","elemtyp","elemtype;","int","node","node;","struct","typedef","{","}","一个指向结点的指针","一个数据元素","一个结点","代码实现","头指针兼链表"],"数据结构/链表/单链表/难点操作/难点操作.html":["1.","2.",">data",">next;",">next=p",">next=q",">next=s;",">next赋值给q","p","一.","三.","二.","五.","作为返回","则说明第i个结点不存在","初始化j从1开始","初始化一空链表l","删除","单链表的删除标准语句p","单链表的插入标准语句","即建立一个带头结点的单链表","否则查找成功,","四.","在系统中生成一个空结点","声明一个指针p指向链表头结点,","声明一个指针p指向链表第一个结点,","声明一指针p和q","声明一指针p和计数器变量i","声明一指针p指向链表头结点,","头插法","将p插入到头结点与前一新结点之间","将q结点中的数据赋值给e,","将q赋值给p","将下一结点赋值给q","将数据元素e赋值给","将欲删除的结点p","将第一个结点赋值给p","当j","循环","插入","整表创建","整表删除","生成一新结点赋值给p","若到链表末尾p为空,","让l的头结点的指针指向null,","读取","返回成功","返回结点p的数据","释放p","释放q结点","随机生成一数字赋值给p的数据域p","难点操作"],"数据结构/链表/静态链表/静态链表.html":["一.","一种用数组描述的链表","二.","优点：在插入和删除操作时，只需要修改游标，不需要移动元素，从而改进了在顺序存储结构中插入和删除操作需要移动大量元素的缺点","定义","特点","缺点：没有解决连续存储分配带来的表长难以确定的问题；失去了顺序存储结随机存储的特性","静态链表"],"数据结构/链表/静态链表/代码实现/代码实现.html":["#defin","*/","...","/*","0","1","1.","1000","2","3","4","5","6","7","8","9","999","compon","component;","cur","cur;","data","data;","elemtyp","elemtype;","int","maxsiz","staticlist[maxsize];","struct","typedef","{","};","下标","为了方便插入数据，通常会把数组建立得大一些，以便有一些空闲空间可以便于插入时不至于溢出","代码实现","初始化后的数组元素如下：","另外对数组的第一个和最后一个元素作为特殊元素处理，不存数据。通常把未被使用的数组元素称为备用链表。而数组第一个元素，即下标为0的元素的cur就存放备用链表的第一个结点的下标，并充当null指针，让已使用的数组元素的最后一个元素的cur设置为0。而数组的最后一个元素的cur则存放第一个有数值的元素的下标，相当于单链表中的头节点的作用，当整个链表为空时，则为0。","存储空间初始分配量","数据元素类型","相当于链表的结点","相当于链表的链","结点类型","静态链表类型"],"数据结构/链表/静态链表/难点操作/难点操作.html":["(i","(i=0;","(j","(j)","+","1)","1;","2.","=","e)","e;","elemtyp","error;","for(l","free_ssl(staticlinklist","i)","i,","i;","if(i","if(space[0].cur)","initlist(staticlinklist","int","j","j,","k","k)","k,","k;","l","l(j).data","l,","l;","listdelete(staticlinklist","listinsert(staticlinklist","listlength(l)","listlength(l))","malloc_ssl(l);","malloc_ssl(staticlinklist","maxsiz","return","space)","space,","space[0].cur","space[0].cur;","space[i].cur;","space[k].cur","statu","void","{","}","一.","三.","二.","五.","初始化","删除元素","四.","将space[0]的cur设置为新的备用链表的第一个元素的下标","将数组每一个元素的cur设置为下一个数组元素的下标，最后一个数组元素的cur设置为0","将新申请的内存的cur指向原来的待插入元素位序上的值","将被释放的内存的cur设置为原来的备用链表的第一个元素的下标","插入操作","模拟free函数","模拟malloc函数","然后将待插入位序的前一个元素的cur指向现在申请的元素的下标","然后释放内存。","给新申请的内存的data赋值","让待删除的元素的前一个元素的cur指向待删除元素的后一个元素的下标","返回被申请的内存(数组元素的下标)，同时让space[0]的cur指向现在的备用链表的第一个元素的下标","难点操作","静态链表已满的标志是space[0]的cur是最后一个数组元素的下标，应该在申请内存之前进行检验","首先申请一个内存，l[0]的cur被指向备用链表的第一个元素的下标。","首先遍历静态链表找到位序待删除位序的元素下标"],"数据结构/链表/循环链表/循环链表.html":["可以通过再设立一个尾指针来指向链表的尾端，以此来简化一些操作。","在单链表的基础上将链表的终端结点的指针由空指针改为指向头节点。","当链表为空时，头节点的指针指向其本身。","循环链表"],"数据结构/链表/循环链表/代码实现/代码实现.html":["*next;","*pnode;","//","1.","cyclelist;","data;","elemtyp","elemtype;","head;","int","item","last;","length;","list","node","node;","pnode","struct","typedef","x;","y;","{","};","代码实现","循环链表类型","数据元素类型","数据对象类型","数据项1类型","数据项2类型"],"数据结构/链表/双向链表/双向链表.html":["双向链表","双向链表即在每个结点多增设一个结点，用于指向前一个结点。","可以让第一个结点的前指针和终端结点的后指针指向null。"],"数据结构/链表/双向链表/代码实现/代码实现.html":["*next;","*pnode;","*pre;","//","1.","data;","doublelist;","elemtyp","elemtype;","int","item","length;","list","node","node;","pnode","start;","struct","typedef","x;","y;","{","};","代码实现","双向链表类型","数据元素类型","数据对象类型","数据项1类型","数据项2类型"],"数据结构/链表/双向循环链表/双向循环链表.html":["即在双向链表的基础上，让第一个结点（可能是头结点）的前指针指向最后一个结点，让最后一个结点的后指针指向第一个结点即可。","双向循环链表"],"数据结构/链表/双向循环链表/代码实现/代码实现.html":["*next;","*pnode;","*pre;","//","1.","data;","dulcyclelist;","elemtyp","elemtype;","int","item","length;","list","node","node;","pnode","start;","struct","typedef","x;","y;","{","};","代码实现","双向循环链表类型","数据元素类型","数据对象类型","数据项1类型","数据项2类型"],"数据结构/跳表/跳表.html":["跳表"],"数据结构/散列表/散列表.html":["table)是采用散列技术将记录存储在一块连续的存储空间中，这块连续存储空间成为散列表或哈希表。","一.","二.","定义","所以通过关键字直接找到其位置的方法不单单只使用哈希函数，而是哈希函数+散列冲突的解决方法。这样我们每拿到一个关键字，就可以直接得到它的位置，对其的查找就快多了。","散列函数(hash)，也叫哈希函数，即散列技术定义中所说的那个对应关系。","散列技术是在记录的存储位置和它的关键字之间建立一个确定的对应关系fff，使得每个关键字keykeykey对应一个存储位置f(key)f(key)f(key)。","散列表","散列表(hash","散列表中关键字地址的特点是与关键字内容直接相关，只要关键字不同，则其通过哈希函数求得的哈希值一般也不同，而只要有这个哈希函数，那么我们就可以根据给定的关键字直接找到它在表中的记录，这就是哈希表的用法。","特点","而哈希表的建立过程不一定那么顺利，很有可能两个不同的关键字通过同一个哈希函数得到的哈希值是相同的，怎么办，当然不可能将两个值保存到同一个位置，所以我们就通过一些方法需要处理这个叫做散列冲突的问题。"],"数据结构/散列表/构造方法/构造方法.html":["%","(p\\leqslant","(p⩽m)","1.","1980=01980−1980=0的位置，1982的人数就保存在下标为2的位置，以此类推。即f(key)=key−1980f(key)=key","1980f(key)=key−1980","2.","3.","4.","5.","6.","\\","\\%","f(key)=a\\tim","f(key)=a×key+b","f(key)=key","f(key)=key\\","key+b","m)","p","一.","三.","事实上，这方法不仅可以对关键字直接取模，也可在折叠、平方取中后再取模。","二.","优点：简单、均匀，且不会产生冲突","关键字的分布情况","关键字的长度","决策","即直接用关键字来作为地址，先来看两个例子吧：","原则","可以直接将后四位作为地址，也可以将这四位数字进行一些处理，如反转数字、右环位移、左环位移甚至前两数与后两数叠加等方法，无论什么方法，只要能够合理地将关键字分配到散列表的各位置。","如何选择哪种散列函数可以通过以下因素来判断：","如果关键字是出生年份，假定所有统计的人的出生年份都在1980年之后的话，那么1980年的人数就保存在下标为1980−1980=01980","如果关键字是年龄，假定所有人的年龄都低于150岁的话，那么就用一个容量为150的数组，0岁人数的保存在下标为0的位置，10岁的人数保存在下标为10的人数，以此类推。即f(key)=keyf(key)=keyf(key)=key","对于一个好的散列函数，那么应该有下面两个原则：","平方取中法","当关键字是位数较多的数字，如手机号码时，一般前7位数字是重复概率较高的，所以我们可以选择后4位来得到一个哈希值。","总结以上两个例子，我们可以取关键字的某个线性函数值为散列地址，即：","折叠法","折叠法是将关键字先分成几部分，然后将这几部分的数字求和所得的数字再进行抽取，最终所得的数字就作为地址。","散列函数构造方法","散列地址分布均匀：尽可能让散列地址均匀分布也可以降低冲突的概率，并且可以保证存储空间的有效利用。","散列表的大小","数字分析法","本方法的关键在于选择合适的ppp，ppp如果选得不好，就可能产生同义词。","构造方法","根据经验：若散列表表长为mmm，通常ppp为小于或等于表长（最好接近mmm）的最小质数或不包含小于20质因子的合数","直接定址法","缺点：需要事先直到关键字的分布情况","计算散列地址所需的时间","计算简单：如果设计一个算法可以保证所有的关键字都不会产生冲突，但是这个算法需要很复杂的计算，会耗费很多时间，这对于频繁地查找来说，就会大大降低查找的效率了。因此散列函数的计算时间不应该超过其他查找技术与关键字比较的时间。","记录查找的频率","该方法为最常用的构造散列函数的方法，对于散列表长为mmm的散列函数公式为：","这个方法很简单，就是对关键字先取平方，然后抽取中间的几位数字即可。","这种方法的核心在于前面首先对关键字进行了处理，抽取了一部分数字，实际上不仅可以抽取连续的数字，也可以抽取不连续的数字。","适用：不知道关键字的分布，而位数又不是很多的情况。","适用：处理关键字位数比较多的情况，如果实现直到关键字的分布且关键字的若干位分布较均匀，就可以考虑用这个方法","适用：折叠法事先不需要知道关键字的分布，适合关键字位数较多的情况。","适用：查找表较小且连续的情况","通过一个随机函数来得到关键字的随机值，然后将该随机值作为散列值即可。即f(key)=random(key)f(key)=random(key)f(key)=random(key)。这里randomrandomrandom是随机函数。当关键字的长度不等时，采用这个方法构造散列函数是比较合适的","除留余数法","随机数法"],"数据结构/散列表/处理冲突/处理冲突.html":["%","1.","1^2−1​2​​，222^22​2​​，−22","1m−1","2.","2^2−2​2​​，...，q2q^2q​2​​，−q2","3.","4.","\\","\\%","f_i(key)=(f(key)+d_i)\\","fi(key)=(f(key)+di)","f​i​​(key)=(f(key)+d​i​​)","key_2key​1​​≠key​2​​，但是却有f(key1)=f(key2)f(key_1)=f(key_2)f(key​1​​)=f(key​2​​)，这种现象我们称为冲突（collision），并把key1key_1key​1​​和key2key_2key​2​​称为这个散列函数的同义词（synonym）。","m","m/2)(q⩽m/2)，这种方法称为二次探测法，这种方法的目的是为了不让关键字都聚集在某一块区域。","mf_i(key)=(f(key)+d_i)\\","mf_i(key)=(f(key)+random(i))\\","mf​i​​(key)=(f(key)+d​i​​)","mf​i​​(key)=(f(key)+random(i))","m，其中di=12d_i=1^2d​i​​=1​2​​，−12","m，这种方法称之为随机探测法。","q^2−q​2​​(q⩽m/2)(q\\leqslant","一.","二.","公共溢出区法","其中di=1d_i=1d​i​​=1，222，333，...，m−1m","再散列函数法","即一旦发生了冲突，就去寻找下一个空的散列地址，只要散列表足够大，空的散列地址总能找到，并将记录存入。","即在原来的哈希表结点中添加一个指向哈希值等于该地址的链表头指针，不管是否发生冲突，总之哈希值为多少，就将对应的关键字放到对应地址后的链表中。","即在哈希表之外，再建立一个溢出表，当关键字产生冲突时，就将关键字保存到溢出表，查找时，先通过散列函数计算出散列值在散列表中进行查找，如果没找到，再到溢出表中进行顺序查找。","在有冲突的数据很少的情况下，公共溢出区的结构对查找性能来说还是非常高的。","在通过哈希函数求关键字的哈希值的时候，经常会遇到两个关键字key1≠key2key_1\\neq","处理冲突","处理散列冲突的方法","它的公式是：","对于我们的散列表来说，我们可以事先准备多个散列函数，按照顺序使用，若第一个散列函数发生了冲突，则对该关键字使用第二个散列函数，当不再冲突时，就将数据存储即可。","将每次的位移量变成平方：fi(key)=(f(key)+di)","开放定址法","改善这种堆积现象有一些方法：","此方法的好处是，对于可能会造成很多冲突的散列函数来说，提供了绝不会出现找不到地址的保障，但是也带来了查找时需要遍历单链表的性能损耗。","用随机函数得到每次的位移量：fi(key)=(f(key)+random(i))","简介","解决散列冲突有以下几种方法。","这种方法能够使得关键字不产生聚集，但是也相应地增加了计算的时间。","这种解决冲突的开放定址法称为线性探测法，其问题是有些本来都不是同义词却需要争夺一个地址的情况，这种现象称为堆积，由于堆积现象的出现，使得我们需要不断处理冲突，无论是存入还是查找效率都会大大降低。","链地址法"],"数据结构/栈/栈.html":["\",","&","(",")","*e)：删除栈s中栈顶元素，并用e返回其值","*e)：若栈存在且非空，用e返回s的栈顶元素","+++","0","0;","1","1)+f(n","1)\\time","1.","10","101010","11","111","12","13","144","1;","1）","2","2)","2.","21","222","29+(3−1)×3+10÷2转换为后缀表达式","2;","2）","3","3+10\\div","333","34","3）","4","5","55","6","7","8","89","9","=","\\\\","\\end{cases}","a[0]","a[0]);","a[1]","a[1]);","a[40];","adt","clearstack(*s)：将栈清空","data","destroystack(*s)：若栈存在，则销毁它","e)：若栈s存在，插入新元素e到栈s中并成为栈顶元素","endadt","f(n","f(n)=\\begin{cases}","f(n)={0n=01n=1f(n−1)+f(n−2)n>1","f(n)=​⎩​⎪​⎨​⎪​⎧​​​0​1​f(n−1)+f(n−2)​​​n=0​n=1​n>1​​","fbi(int","first","for(i","gettop(s,","i)","i;","if(i","initstack(*s)：初始化操作，建立一个空栈","int","lifo结构：即后进先出的结构（last","main()","n=0","n=1","n>1","oper","out）","pop(*s,","printf(\"%d","push(*s,","stack","stackempty(s)：若栈为空，返回true，否则返回fals","stacklength(s)：返回栈s的元素个数","{","×\\times×","÷\\div÷","−","−、333","−、333、×\\times×、+++","−、333、×\\times×、+++、101010","−、333、×\\times×、+++、101010、222","−、333、×\\times×、+++、101010、222、÷\\div÷、+++","−，入栈。","−，取出111、333进行运算，结果222入栈。栈：999、222","一.","一个直接调用自己或通过一系列的调用语句间接地调用自己的函数，称作递归函数。","三.","两栈共享空间","二.","五.","从左到右遍历中缀表达式的每个数字和符号","从左到右遍历后缀表达式的每个数字和符号","代码：","例：将表达式9+(3−1)×3+10÷29+(3","例：计算后缀表达式：999","先出栈的数字作为运算符的右侧运算对象","兔子对数","关键概念","出栈、弹栈：即栈的删除操作","分析：经过的月数和兔子的总数可以列出下表：","分类","同线性表。元素具有相同的类型，相邻元素具有前驱和后继关系","后出栈的数字作为运算符的左侧运算对象","后缀表示法是一种不需要括号的运算表达式的书写方法，也叫作逆波兰表示。表达式中所有的符号都是在要运算数字的后面出现。","后缀表达式为：999","后缀表达式的计算","四.","四则运算表达式求值——后缀表示法","定义","常规迭代方法","建模：根据上表我们可以写出以下数学模型","引例：如果兔子在出生两个月后，就有繁殖能力，一对兔子每个月能生出一对小兔子来。假设所有兔子都不死，那么一年以后可以繁殖多少对兔子呢？","当中缀表达式遍历完后，将栈顶元素依次出栈并输出","数字101010、222入栈。栈：151515、101010、222","数字101010，输出。","数字111，输出。","数字2，输出。","数字333，入栈。栈：999、222、333","数字333，输出","数字333，输出。","数字999、333、111先入栈。栈(从栈底开始)：999、333、111","数字999，输出。","斐波那契数列","是限定仅在表尾进行插入和删除操作的线性表","条件","栈","栈(stack)","栈(从栈底开始)：空","栈底：与栈顶相对的另一端称为栈底（bottom）","栈的应用","栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题核心。","栈的抽象数据类型","栈顶：允许插入和删除的一端称为栈顶（top）","栈：+++","栈：+++、(((","栈：+++、(((、−","栈：+++、×\\times×","栈：+++、÷\\div÷","栈：空","每个递归定义必须至少有一个条件，满足时递归不再进行，即不再引用自身而是返回值退出。","空栈：不含任何数据元素的栈称为空栈","符号(((，入栈。","符号)))，栈顶元素依次出栈并输出，直到遇到(((","符号+++，优先级低于×\\times×，输出×\\times×；优先级不高于+++，输出+++；入栈","符号+++，入栈。","符号+++，取出555、151515进行运算，结果202020入栈。栈：202020","符号+++，取出666、999进行运算，结果151515入栈。栈：151515","符号×\\times×，入栈","符号×\\times×，取出333、222进行运算，结果6入栈。栈：999、666","符号÷\\div÷，入栈。","符号÷\\div÷，取出222、101010进行运算，结果555入栈。栈：151515、555","符号−","经过的月数","若是优先级不高于栈顶符号的符号，则将栈顶符号出栈并输出，然后与下一个栈顶符号比较","若是优先级高于栈顶符号，将该符号入栈","若是右括号，将栈顶元素依次出栈，直到遇到左括号（左括号需要出栈，两个括号不用写到后缀表达式中）","若是左括号，则进栈","若是数字就输出到后缀表达式中","若是数字，则进栈","若是符号，则判断其与栈顶符号的优先级","若是符号，则将栈顶两个数字出栈进行运算，然后将运算结果进栈","表达式遍历完成后，将最后的结果数字出栈","表达式：999","表达式：999、333","表达式：999、333、111","表达式：999、333、111、−","规则：","转换为后缀表达式","进栈、压栈、入栈：即栈的插入操作","递归","递归方法","遍历完成，取出结果202020。栈：空","遍历完成，输出栈顶元素","链栈","顺序栈"],"数据结构/栈/顺序栈/顺序栈.html":["1时为空；若top指示的是元素相对位置，则为0时为空","1时栈满；若top指示的是元素相对位置，则为maxsize时栈满","一.","二.","元素个数：若top指示的是下标，则为top+1；若top指示的是元素相对位置，则为top","定义","栈底：数组下标为0的一端","栈满：若top指示的是下标，则为maxs","栈顶：栈顶元素所在的一端","概念实现","空栈：若top指示的是下标，则为","顺序栈","顺序栈即顺序线性表的简化，将下标为0的一端作为栈底，另外一端作为栈顶。用一个top变量保存栈顶元素在数组中的位置"],"数据结构/栈/顺序栈/代码实现/代码实现.html":["#defin","//","1.","20","data[maxsize];","elemtyp","elemtype;","int","item","maxsiz","sqstack;","stack","struct","top;","typedef","x;","y;","{","};","代码实现","数据元素类型定义","数据项结构","顺序栈定义"],"数据结构/栈/顺序栈/难点操作/难点操作.html":["*e","*e)","*s,","1)","2.",";","=","==",">data[",">top",">top++;",">top]",">top];","e)","e;","error;","if(","maxsiz","ok;","pop(sqstack","push(sqstack","return","s","selemtyp","statu","{","}","一.","二.","出栈操作","进栈操作","难点操作"],"数据结构/栈/两栈共享空间/两栈共享空间.html":["1时栈1为空栈；栈2的top为maxsize时栈2为空栈","1的位置。","top2","一.","三.","且该数据结构只使用于两个栈数据类型相同的情况","两栈共享空间","两栈共享空间一般通过数组的方式实现，即通过两个栈顶指针将一个数组划分为两个顺序栈，其栈底分别在下标为0和下标为maxsiz","二.","使用注意","使用该数据结构时，通常都是当两个栈的空间需求有相反关系时，即一个栈增长时另一个栈在缩短的情况。","元素个数：栈1的元素个数即top1+1，栈2的元素个数为maxs","定义","栈满：当top1+1=top2时，栈满","概念实现","空栈：栈1的top为"],"数据结构/栈/两栈共享空间/代码实现/代码实现.html":["#defin","1.","40","data[maxsize];","elemtyp","elemtype;","int","item","maxsiz","sqdulstack;","stack","struct","top1;","top2;","typedef","x;","y;","{","};","代码实现"],"数据结构/栈/两栈共享空间/难点操作/难点操作.html":["*e,","*e=","*s,","1)","2.",">data[",">data[++",">top1",">top1+1==",">top1==",">top1]=e;",">top2)",">top2++];",">top2==maxsize)",">top2]=e;","];","e,","error;","if(","if(stacknumber==1)","if(stacknumber==1){","if(stacknumber==2)","if(stacknumber==2){","int","ok;","pop(sqdoublestack","push(sqdoublestack","return","s","selemtyp","stacknumber)","statu","{","}","一.","二.","删除","插入","难点操作"],"数据结构/栈/链栈/链栈.html":["一.","二.","使用注意","均为o(1)o(1)o(1)。对于空间性能，顺序栈需要事先确定一个固定的长度，可能会存在空间浪费的问题，但它的优势是存取时定位很方便，而链栈则要求每个元素都有指针域，这同时也增加了一些内存的开销，但对于栈的长度无限制。","如果栈的使用过程中元素变化不可预料，有时很小，有时非常大，那么最好是用链栈，反之，如果它的变化在可控范围内，建议使用顺序栈会更好一点。","定义","链栈","链栈即栈的链式存储结构","顺序栈与链栈它们在时间复杂度上是一样的,"],"数据结构/栈/链栈/代码实现/代码实现.html":["*next;","//","1.","data;","elemtyp","elemtype;","int","item","length;","linkstack;","node","node*","node;","pnode","pnode;","stack","struct","top;","typedef","x;","y;","{","};","代码实现","头指针,","指向栈顶结点","指针域","数据元素类型","数据域","数据项结构","栈的长度","由于对栈的操作总是对栈顶元素的操作，所以为了方便起见，我们需要在栈顶设置一个栈顶指针，而更好的办法是：把头指针作为栈顶指针，具体结构定义如下：","结点指针","结点类型","链栈类型"],"数据结构/栈/链栈/难点操作/难点操作.html":["(linkstackptr)malloc(sizeof(stacknode));","*e)","*e=","*s,","2.",";","=",">count",">count++;",">data;",">data=e;",">next;",">next=",">top",">top;",">top=",">top=s;","e)","error;","free(p);","if(stackempty(*s))","linkstackptr","ok;","p;","p=","pop(linkstack","push(linkstack","return","s","selemtyp","statu","{","}","一.","二.","出栈操作","进栈操作","难点操作"],"数据结构/队列/队列.html":["*e)：删除队列q中队头元素，并用e返回其值。","*e)：若队列q存在且非空，用e返回队列q的队头元素。","adt","clearqueue(*q)：将队列q清空。","data","dequeue(*q,","destroyqueue(*q)：若队列q存在，则销毁它。","e)：若队列q存在，插入新元素e到队列q中并成为队尾元素。","endadt","enqueue(*q,","fifo：first","first","gethead(q,","initqueue(*q)：初始化操作，建立一个空队列q。","oper","out，先进先出","queueempty(q)：若队列q为空，返回true，否则返回false。","queuelength(q)：返回队列q的元素个数。","一.","三.","二.","入队列：插入元素到队尾","关键概念","出队列：删除队头元素","分类","同线性表。元素具有相同的类型，相邻元素具有前驱和后继关系。","四.","定义","循环队列","链队列","队列","队列(queue)","队列(queue)是只允许在一端进行插入操作,而在另一端进行删除操作的线性表.","队列的抽象数据类型","队头：允许删除的一端","队尾：允许插入的一端","顺序队列"],"数据结构/队列/循环队列/循环队列.html":["%","&&","+","0时，队列为空；当front","1","1)","1.","1时队列为满。","2)","2.","==","flag","front","front+maxsize。","front；当rear时，队列的长度为rear","maxsiz","maxsize)","maxsize。","rear","rear（此处的+1指一个逻辑循环数组的下一个元素，若front为数组最后一个元素，则front+1为数组第一个元素）。","rear，队列满时front","一.","二.","从上述可以推导出求队列长度的通用公式：(rear","保留一个空位","关键概念","即队列为空时front","可以知道的是：当rear>front和rear时，二者的具体情况是不同的。当rear>front时，队列的长度为rear","完全存满数组","当情况是移动front使得两个指针相等时，flag设置为0；若是移动rear使得两个指针相等时，flag设置为1。","循环队列","循环队列的定义","循环队列：即队列的头尾相接的顺序存储结构。当队尾已经存到数组最后一个元素后，下一个元素从数组头部开始存储","所以我们需要优化顺序队列的逻辑，于是有了循环队列。","第一种情况是完全将数组存满的情况，那么不论是队列为空还是队列已满，二者的状态都是相同的，即都是两个指针指向同一个元素。","第二种办法是将队列空和队列满区别开。","若队列的最大尺寸为maxsize，那么队列满的条件是：(rear","解决办法是：设置一个标志变量flag，当front","队列空或队列满的判断","队列长度","首先介绍顺序队列，即使用顺序存储实现的队列，有一个固定的空间，顺序队列相比于顺序栈更多了一个缺点，顺序队列保存的元素不断在数组后面堆积，前面的元素一个个减少，到最后数组在逻辑上无法存放更多的元素，但实际上数组在前面部分还留有之前的队头元素出队列剩下的空位，而这显然有一个浪费，这也就是为什么顺序栈可行而顺序队列不可行的原因，因为顺序栈栈底部分一直在数组的最前端不会改变。","首先需要一个队头指针(front)和一个指向队尾元素后一个位置的指针(rear)"],"数据结构/队列/循环队列/代码实现/代码实现.html":["#defin","//","1.","20","data[maxsize];","elemtyp","elemtype;","front;","int","item","maxsiz","queue","queue;","rear;","struct","typedef","x;","y;","{","};","代码实现","数据元素类型","数据类型定义","数据项定义","队列类型"],"数据结构/队列/循环队列/难点操作/难点操作.html":["*e)","*e=q","*q,","2.",">data[q",">front)",">front+1)%maxsize;",">front=(q",">front==q",">front];",">rear)",">rear+1)%maxsize;",">rear+1)%maxsize==q",">rear=(q",">rear]=e;","dequeue(sqqueu","e)","enqueue(sqqueu","error;","if((q","if(q","ok;","q","qelemtyp","return","statu","{","}","一.","二.","入队列","出队列","难点操作"],"数据结构/队列/链队列/链队列.html":["1.","一.","二.","关键概念","可以设置一个头结点，当两个指针都指向头结点时，即为空队列。","定义","或不设置头结点，当两个指针都为null时，即为空队列。","空队列","链队列","队列的链式存储结构，即线性表的单链表，只不过只能尾进头出，简称为链队列。"],"数据结构/队列/链队列/代码实现/代码实现.html":["*next;","*pnode;","//","1.","data;","elemtyp","elemtype;","front;","int","item","linkqueue;","node","node;","pnode","queue","rear;","struct","typedef","x;","y;","{","};","代码实现","指针域","数据元素类型","数据域","数据项定义","结点定义","结点指针类型","结点类型","链队列类型","链队列结构定义"],"数据结构/队列/链队列/难点操作/难点操作.html":["*e)","*e=p","*q,","2.",">data;",">data=e;",">front",">front;",">front==q",">next;",">next=null;",">next=p",">next=s;",">rear",">rear)",">rear==p)",">rear=q",">rear=s;","dequeue(linkqueu","e)","elemtyp","enqueue(linkqueu","error;","exit(overflow);","free(p);","if(!s)","if(q","ok;","p;","p=q","q","queueptr","return","s","s=(queueptr)malloc(sizeof(qnode));","statu","{","}","一.","二.","入队操作","出队操作","难点操作"],"数据结构/树/树.html":["*p,","0)m(m⩾0)棵互不相交的树的集合","0)n(n⩾0)个结点的有限集。","1.","1）先根遍历","1）前序遍历","1）定义","2.","2）分类","2）后序遍历","2）后根遍历","3.","3）关系","4.","4）其他概念","5.","adt","assign(t,","c)：其中p指向树t的某个结点，i为所指结点p的度加上1，非空树c与t不相交，操作结果为插入c为树t中p所指结点的第i棵子树。","cleartree(*t)：若树t存在，则将树t清为空树。","createtree(*t,","cur_e)：cur_e是树t中的一个结点，返回此结点的值。","cur_e)：若cur_e是树t的非叶结点，则返回它的最左孩子，否则返回空。","cur_e)：若cur_e是树t的非根结点，则返回它的双亲结点，否则返回空。","cur_e)：若cur_e有右兄弟，则返回它的右兄弟，否则返回空。","cur_e,","data","definition)：按definition给出的定义来构造树。","deletechile(*t,","destroytree(*t)：销毁树t。","endadt","i)：其中p指向树t的某个结点，i为所指结点p的度，操作结果为删除t中p所指结点的第i棵子树。","i,","inittree(*t)：构造空树t。","insertchild(*t,","leftchild(t,","n=0n=0n=0时称为空树。在任意一棵非空树中：","oper","parent(t,","rightsibling(t,","root(t)：返回t的根节点。","treedepth(t)：返回树t的深度。","treeempty(t)：若t为空树，返回true，否则返回false。","value(t,","value)：给树t的结点cur_e赋值为value。","一.","三.","不包含任何结点或只包含头结点的树","二.","二叉树中每个结点的右孩子结点都是原树该结点的右兄弟结点","二叉树中每个结点的左孩子结点都是原树的长子结点","二叉树转化为树","二叉树转化为森林","五.","以此类推","以第一个树为根，将第二棵树的根结点接在第一棵二叉树的右孩子结点处","先依次后根遍历每棵子树，再访问根节点。","先将每一个树转化为二叉树","先访问树的根结点，然后依次先根遍历根的每棵子树","先访问森林中第一棵树的根结点，然后再依次先根遍历根的每棵子树，再依次用同样方式遍历剩余树","先访问森林中第一棵树，后根遍历该树的每棵子树，然后再访问根结点，再依次用同样方式遍历剩余树。","关键概念","分支结点/非终端结点：度不为0的结点。除根节点外的分支结点也称作内部节点","判断二叉树是否能分成森林：看其根结点有无右孩子，有就是森林，没有就是一棵树","加线：若某结点的左孩子结点存在，则将这个左孩子结点的右孩子结点，右孩子结点的右孩子结点，右孩子结点的右孩子结点的右孩子结点……，将所有这些结点与该结点连接起来","原则：","去线：删除原二叉树中所有结点与其右孩子结点的连线","叶结点/终端结点：度为0的结点","四.","堂兄弟：两个结点的双亲结点在同一层则该两个结点互为堂兄弟","定义","将每一层的所有兄弟相连","将每个结点的长子之外的其他孩子结点全部断开","当n>1n>1n>1时，其余结点可分为m(m>0)m(m>0)m(m>0)个互不相交的有限集：t1t_1t​1​​、t2t_2t​2​​、...、tmt_mt​m​​，其中每一个集合本身又是一棵树，并且称为根的子树(subtree)。","抽象数据类型","接着查看分离后的右子树，按照上述的方法将其右子树断开","方法：","无序树：与有序树相反","有且仅有一个特定的称为根(root)的结点；","有序树：如果能将树中结点的各子树看成从左至右是有次序的，不能互换的，则称该树为有序树","树","树(tree)","树(tree)是n(n⩾0)n(n\\geqsl","树、森林和二叉树的转化","树与森林的遍历","树内各结点的度的最大值","树是由一个根节点和若干棵子树构成的。树中结点具有相同数据类型及层次关系。","树最顶端的结点","树的度","树的深度/高度：树中结点的最大层次","树的结点包含一个数据元素及若干指向其子树的分支。","树的遍历","树转化为二叉树","根节点","森林的遍历","森林转化为二叉树","森林：是m(m⩾0)m(m\\geqslant","然后将第三棵树的根结点接在第二棵二叉树的右孩子结点处","空树","结点","结点拥有的子树个数称为结点的度","结点的兄弟：同一个双亲的孩子","结点的双亲：结点的根","结点的子孙：以该结点为根的子树中的任一结点","结点的孩子：结点的子树的根","结点的层次：从根开始定义起，根为第一层，根的孩子为第二层，以此类推。","结点的度","结点的祖先：从该结点的根到该结点所经分支上的所有结点","若能转化为森林，则从根结点开始，若右孩子存在，则断开与右孩子结点的连线。"],"数据结构/树/普通树/普通树.html":["主要讨论树的存储方式。","双亲表示法：讨论用数组这种数据结构怎样表示一个树的数据结构。","孩子兄弟表示法：引入二叉树的表示方法。","孩子表示法：讨论用单链表如何实现树的数据结构。","普通树"],"数据结构/树/普通树/代码实现/代码实现.html":["#defin","*firstchild;","*next;","*pnode;","*rightsib;","//","1.","100","1。","2.","box","box;","child;","data;","elemtyp","elemtype;","firstchild;","int","item","lchild;","length;","maxsiz","node","node;","nodes[maxsize];","parent;","pnode","rbrother;","root;","struct","tree","tree;","typedef","x;","y;","{","}","};","一.","三.","下一个孩子链表的孩子结点","二.","代码实现","保存孩子的位置","再然后，如果只有上述两个指针，查找兄弟依然是一个困难的事情。我们可以再给每个结点添加一个右兄弟指针，特殊的，如果没有右兄弟，那么将右兄弟指针设置为","分析","双亲指针","双亲表示法","双亲表示法的树类型","双亲表示法的树类型定义","因此，我们可以将每个结点的孩子结点排列起来，以单链表作存储结构。然后将n个头指针组成一个线性表，采用顺序存储结构，放进一个一维数组中。","如果我们有一个根节点的指针，那么我们只要知道每一个结点的所有子树的根节点就可以遍历整个树。","如果用数组来存储树这种结构，按照树的定义，一般需要能够找到双亲，孩子，以及兄弟。","孩子兄弟表示法","孩子指针","孩子表示法","对于任何一棵树，它的结点的第一个孩子如果存在那么其孩子结点一定是唯一的，如果它的右兄弟存在，那么其右兄弟结点也一定是唯一的。","当然，和前两种表示方法类似，要查找结点的双亲依旧需要设置一个双亲指针。","当然，如果只有每个结点的孩子结点，那么当查询双亲结点时就比较复杂，所以可以在每个头结点中添加一个双亲指针，特殊的，将根节点的双亲指针设置为","我们可以暂时使用链表来存储，每个结点包括数据域和多个指针域用于指向所有的子树的根结点。该方法的问题是，指针域的个数如何确定？有两种方法，一是将所有结点的指针域的个数设置为树的度，即所有结点的度的最大值。该方法在树中各结点度相差不大时很好用，但是在各结点度相差很大时，就会明显地浪费空间；第二种方法就是在每一个结点设置一个度域，用以保存该结点的度，然后将结点的子域个数设置为度的值，该方法可以有效的减少空间浪费，但是由于每个结点都是不相同的结构，并且还要维护结点的度的数值，在运算上会带来时间上的损耗。","所以我们可以给每一个结点添加两个指针，一个指向孩子结点，一个指向右兄弟结点。每一个结点只包含两个指针，这也就是二叉树。","接下来讨论如何找到孩子。如果只有双亲指针那么查找孩子结点就得需要遍历整个结构，所以我们可以再添加一个指向其长子（最左边的孩子）的指针，特殊的，我们将没有孩子的结点的长子域设置为","数据","数据元素","数据元素类型","数据域","数据项","数据项定义","数组元素类型","树类型","树类型定义","根结点的位置","结点定义","结点指针","结点数组","结点的个数","结点的数量","结点类型","那么如何找到双亲呢？只需要在数组的每个结点添加一个指向双亲的指针域就可以了，特殊的，我们可以将根节点的双亲指针设置为"],"数据结构/树/二叉树/二叉树.html":["(",")","0)n(n⩾0)个结点的有限集合，该集合或者为空集（称为空二叉树），或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右子树的二叉树组成。一般用链式存储结构实现。","1.","12​k​​−1个结点（k⩾1k\\geqslant","1i⩾1）","1k⩾1）","1}2​i−1​​个结点（i⩾1i\\geqsl","2.","3.","[x][x][x]表示不大于xxx的最大整数","\\leqslant","i\\leqsl","n)i(1⩽i⩽n)有：","n)i(1⩽i⩽n)的结点与同样深度的满二叉树中编号为iii的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。","n]+1[log​2​​n]+1","n]+1[log​2​​n]+1层，每层从左到右），对任意节点i(1⩽i⩽n)i(1\\leqsl","n]+1[log​2​​n]+1）的结点按层序编号（从第1层到第[log2n]+1[log_2","tree）是n(n⩾0)n(n\\geqsl","一.","三.","二.","二叉树","二叉树的性质","二叉树（binari","倒数第二层，若有叶子结点，一定都在右部连续位置","具有nnn个结点的完全二叉树的深度为[log2n]+1[log_2","即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。","只有一个根节点","叶子只能出现在最下一层","叶子结点只能出现在最下两层","同样结点的二叉树，完全二叉树的深度最小。","四.","在一棵二叉树中，除了叶结点之外，所有结点都存在左子树和右子树，并且所有的叶结点都在同一层上，这样的二叉树称为满二叉树。","在二叉树的第iii层至多有2i−12^{i","在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多","如果2i+1>n2i+1>n2i+1>n，则结点iii，无右孩子；否则其右孩子是结点2i+12i+12i+1","如果2i>n2i>n2i>n，则结点iii无左孩子（结点iii为叶子结点）；否则其左孩子是结点2i2i2i","如果i=1i=1i=1，则结点iii是二叉树的根，无双亲；如果i>1i>1i>1，则其双亲是结点[i/2][i/2][i/2]","如果对一棵有nnn个结点的完全二叉树（其深度为[log2n]+1[log_2","如果结点度为1，则该结点只有左孩子，即不存在只有右子树的情况。","完全二叉树","定义","对一棵具有nnn个结点的二叉树按层序编号，如果编号为i(1⩽i⩽n)i(1\\leqsl","对任何一棵二叉树t，如果其终端结点数为n0n_0n​0​​，度为2的结点数为n2n_2n​2​​，则n0=n2+1n_0=n_2+1n​0​​=n​2​​+1","左子树和右子树是有顺序的，次序不能任意颠倒。","所有结点都只有左子树或右子树的二叉树称为斜树。所有结点都只有左子树的二叉树叫做左斜树；所有结点都只有右子树的二叉树叫做右斜树。","斜树","最下层的叶子一定集中在左部连续位置","根据上述特点，可以总结出以下五种二叉树的形态：","根结点只有右子树","根结点只有左子树","根结点既有左子树又有右子树","每个结点最多有两棵子树，所以二叉树中不存在度大于2的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。","深度为kkk的二叉树至多有2k−12^k","满二叉树","特殊二叉树","特点","特点：","空二叉树","非叶子节点的度一定是2"],"数据结构/树/二叉树/代码实现/代码实现.html":["*leftchild;","*parent;","*pnode;","*rightbrother;","*rightchild;","//","1.","bitre","bitree;","data;","elem;","elemtyp","elemtype;","int","item","length;","level;","node","node;","order;","pnode","po","pos;","posit","position;","ptrbitree;","root;","statu","status;","struct","tree","typedef","x;","y;","{","};","代码实现","保存当前结点所有信息","包含状态的数据域","双亲","右兄弟","右孩子","头指针","定位类型","左孩子","当前树的结点个数","当前深度的位序","深度","状态元素类型","用于定位","结点指针","结点类型","链式二叉树","链式二叉树指针"],"数据结构/树/二叉树/难点操作/难点操作.html":["1)","1.","2)","2.","3)","3.","4)",">data);",">lchild);",">rchild);","if(t==null)","inordertraverse(bitre","inordertraverse(t","postordertraverse(bitre","postordertraverse(t","preordertraverse(bitre","preordertraverse(t","printf(\"%c\",t","return;","t)","void","{","}","一.","中序遍历","二叉树的遍历是指从根结点出发，按照某种次序依次访问二叉树中的所有结点，使得每个结点被访问一次且仅被访问一次。","前序遍历","即根据某一棵树，通过其按照某两种遍历方法得到的遍历顺序推断其原本的结构或推断用另外一种方法对其进行推导的结果。","原则：","后序遍历","定义","层序遍历","已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。","已知后续遍历序列和中序遍历序列，可以唯一确定一棵二叉树。","注意：已知前序和后序遍历，是不能确定一棵二叉树的。","算法","算法：同样使用递归的方法解决，同时改变部分调用顺序","算法：同样用递归的方法解决，其于前序遍历的区别在于递归函数调用的顺序不同","算法：通过递归的方法进行前序遍历","规则：若二叉树为空，则空操作返回，否则先访问根节点，然后前序遍历左子树，再前序遍历右子树。","规则：若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。","规则：若树为空，则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。","规则：若树为空，则空操作返回，否则从根结点开始（注意并不是先访问根结点），中序遍历根结点的左子树，然后是访问根结点，最后中序遍历右子树。","遍历","遍历结果的推导","难点操作"],"数据结构/树/堆/堆.html":["12​k​​−1个。","一.","三.","二.","关键概念","其具有以下某种性质：","即用数组存储的二叉树结构。同时数组的下标要能够体现结点之间的逻辑关系，比如双亲与孩子的关系，左右兄弟的关系等。","双亲：若有结点iii，则其双亲结点为i/2i/2i/2","右兄弟：若有结点iii，且i+1i+1i+1结点存在，则i+1i+1i+1结点即为该结点的右兄弟结点","右孩子：即实际树的右兄弟结点，当二叉树对应的完全二叉树的结点数为nnn时，对于任一结点iii，其右孩子为结点2i+12i+12i+1。当2i+1>n2i+1>n2i+1>n时，则结点iii无右孩子。","堆","如果有这样一种极端情况，一棵深度为kkk的右斜树，它只有kkk个结点，但是所需要分配的存储单元空间却有2k−12^k","定义","左孩子：即实际树的长子结点，当二叉树对应的完全二叉树的结点数为nnn时，对于任一结点iii，其左孩子为结点2i2i2i。当2i>n2i>n2i>n时，则结点iii无左孩子。","序号：即数组下标，按照完全二叉树的顺序进行编号，如果中间某个序号的元素不存在，则该下标不保存值。","此时会造成大量的空间浪费。","每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆","每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆","缺陷"],"数据结构/树/堆/代码实现/代码实现.html":["*pnode;","//","1.","data;","elemtyp","elemtype;","flag;","int","item","length;","level;","node","node;","order;","pnode","pos;","posit","sqbitree;","struct","tree","tree;","typedef","x;","y;","{","};","代码实现","位置类型定义，按满二叉树编号","位置类型，用于指定插入、删除或查询的位置","保存树的数组","元素指针","当前结点的状态，1为有值，0为无值","所在层的序号","数据元素类型","数组元素的类型","树的总结点个数，包括未被使用的结点","结点所在层号","顺序二叉树类型"],"数据结构/树/线索二叉树/线索二叉树.html":["(n","1)=n+12n−(n−1)=n+1个空指针，如果这个n值很大，那么其将会浪费大量的内存。","1.","2.","一.","三.","二.","二叉链表不一定按照中序遍历，按照其他方法进行遍历也可以，只要将遍历所得的序列作为标准定义前驱和后继即可。","前言","四.","如果将二叉链表进行中序遍历，将会得到一个序列，对序列中某个元素而言，紧靠在该元素前的元素称为这个元素的前驱，而紧靠在该元素后的元素称为这个元素的后继。","如果将所有空指针域中指向左孩子的指针指向其前驱；所有空指针域中指向右孩子的指针指向其后继；既是空指针，也没有前驱或者后继的，将该指针设为空。","如果所用的二叉树需要经常遍历或查找结点时需要某种遍历序列中的前驱和后继，那么采用线索二叉链表的存储结构就是非常不错的选择。","如果按照以上的方法构建了一个线索二叉树，存在一个问题是：树中的指针域可能指向它的孩子，也可能指向它的前驱后继，如果只凭借两个指针，是无法对其属性进行判断的。","定义","对于普通的二叉树而言，每创建一个结点都会有一个指针域，在这个指针域中，并非所有指针都能用上。如果一个结点的指针域只包含左孩子指针和右孩子指针，那么对于一个有n个结点的二叉链表而言，将会存在2n−(n−1)=n+12n","扩展","按照上述规则构成的二叉链表就是一个线索二叉树。","方法是再建立两个标志，分别指示两个指针的状态。一般设置为当标志为0时，该指针指向该结点的孩子，为1时指向该结点的前驱或后继。","用途","线索二叉树","遍历方法","问题"],"数据结构/树/线索二叉树/代码实现/代码实现.html":["*lchild;","*pnode;","*ptrbithrnode;","*rchild;","1.","bithrnod","bithrnode;","data","data;","elem;","elemtyp","elemtype;","int","item","length;","level;","lflag;","node","node;","order;","pnode","po","pos;","position;","rflag;","root;","struct","tree","typedef","x;","y;","{","};","代码实现"],"数据结构/树/线索二叉树/难点操作/难点操作.html":["2.","一.","二.","构造线索二叉树","线索二叉树的遍历","难点操作"],"数据结构/树/哈夫曼树/哈夫曼树.html":["00","000","001","01","010","011","0~59","1.","10%","100","1000","1001","101","11","15","15%","2.","27","3.","30","30%","4.","40%","5","5%","60~69","70~79","8","80~89","90~100","b","c","d","e","f","t1t_1t​1​​，","t2t_2t​2​​，","tnt_nt​n​​","w1w_1w​1​​，","w2w_2w​2​​，","wnw_nw​n​​","{","}构成nnn棵二叉树的集合f=f=f=","}，其中每棵二叉树tit_it​i​​中只有一个带权为wiw_iw​i​​的根结点，其左右子树均为空。","}，构造一棵有nnn个叶子结点的二叉树，每个叶子结点带权wkw_kw​k​​，每个叶子结点的路径长度为lkl_kl​k​​，则其中带权路径长度wpl最小的二叉树称为哈夫曼树。","···，","一.","一共25个字符。","一共30个字符","三.","二.","从该树中，可以得到新的字符编码：","以此类推，直到获得叶子结点上的等级然后退出","假设有nnn个权值{","假设现在有一个分数a，这个场景可以转换为一个二叉树：","先说结论，可以按照以下结构构造这个树结构：","关键概念","其形式如下:","再从中取两个最小权值的结点作为一个新结点n2n_2n​2​​的两个子结点，如下图：","分数","占比","原理","取两个最小权值的结点作为一个新结点n1n_1n​1​​的两个子结点，较小的是左孩子，如下图：","哈夫曼树","哈夫曼编码","哈夫曼编码即将原有的字符按照出现频率对其进行重排，此时出现越频繁的字符，其编码就越短，成功达到了压缩的目的。","四.","在fff中删除这两棵树，同时将新得到的二叉树加入fff中。","在fff中选取两棵根结点的权值最小的树作为左右子树构造一棵新的二叉树，且置新的二叉树的根结点的权值为其左右子树上根结点的权值之和。","在上述的图结构中，要判断70分以上的等级都需要经过3次以上的判断才可以得到结果，这显然不合理。","在实际的学习过程中，学生的成绩一般如下分布：","如果按照完整数据传输的方式，即按照对应的二进制字符进行传输，假设对应的二进制编码为：","如果要将一串文字\"badcadfeed\"通过网络传输给别人，假设英文字符总共只有以下六个，并且有以下频率关系：","定义","对于哈夫曼编码，发送方和接收方必须使用同样的哈夫曼编码规则进行编解码才行","将这六个字符按照权重先构造出相应的哈夫曼树：","带权路径长度：从该结点到根结点之间的路径长度与结点上权的乘积。","应用：哈夫曼编码","引例","引入","总结","想象一个场景，如果把学生考试的分数转换成对应的等级，加入满分为100分，等级按照十分一个档次，90分以上为a，80分以上为b，70分以上为c，60分以上为d，60分以下为e。","树的带权路径长度：树中所有叶子结点的带权路径长度之和","树的路径长度：从树根到每一结点的路径长度之和","根据给定的nnn个权值{","根结点判断：a","此时需要传输的数据为：","注意","然后将n1n_1n​1​​看成一个整体，其权值为两个子结点权值之和，此时序列为：n115n_115n​1​​15，b15b15b15，d30d30d30，c40c40c40","然后将每个结点到其左子树的分支设置为0，结点到其右子树的分支设置为1，如下图所示：","若成立，则进入其左孩子，即e等级；若不成立，则进入其右孩子，即判断a","若成立，进入其左孩子，即d等级；若不成立，则进入其右孩子，即判断a","若要设计长短不等的编码，则必须是任一自负的编码都不是另一个字符的编码的前缀，这种编码称为前缀编码。","规则","路径长度：路径上的分支数目即为路径长度","路径：从树中一个结点到另一个结点之间的分支构成两个结点之间的路径","那么需要传输的数据为：","重复操作，最终可以得到下面这个树结构：","重复步骤2和3，直到fff只含一棵树为止。这就是哈夫曼树","首先将二叉树简化成叶子结点带权的二叉树，如下图所示：","首先把有权值的叶子结点按照从小到大的顺序排列成一个有序序列，即a5a5a5，e10e10e10，b15b15b15，d30d30d30，c40c40c40"],"数据结构/图/图.html":["(n","*v)：返回顶点v的一个邻接顶点，若顶点在g中无邻接顶点返回空","*w)：返回顶点v相对于顶点w的下一个邻接顶点，若w是v的最后一个邻接点则返回空","1)/20⩽e⩽n(n−1)/2","1)0⩽e⩽n(n−1)","1)n×(n−1)条边","1)}\\over","1.","1n−1条边","2.","2}\\sum_{i=1}^ntd(v_i)e=​2​​1​​∑​i=1​n​​td(v​i​​)","2​2​​n×(n−1)​​条边。","3.","4.","5.","6.","7.","adt","creategraph(*g,","data","deletearc(*g,","deletevex(*g,","destroygraph(*g)：若图g存在则销毁","dfstraverse(g)：对图g中进行深度优先遍历，在遍历过程中对每个顶点调用","e\\leqsl","endadt","firstadjvex(g,","getvex(g,","graphs)。","graphs）","graph）","hfstraverse(g)：对图g中进行广度优先遍历，在遍历过程中对每个顶点调用","insertarc(*g,","insertvex(*g,","locatevex(g,","n(n","nextadjvex(g,","oper","putvex(g,","u)：若图g中存在顶点u，则返回图中的位置","v)：删除图g中顶点v及其相关的弧","v)：在图g中增添新顶点v","v)：返回图g中顶点v的值","v,","v_jv​i​​≠v​j​​，从viv_iv​i​​到vjv_jv​j​​和从vjv_jv​j​​到viv_iv​i​​都存在路径，则称ggg是强连通图","value)：将图g中顶点v赋值valu","vi1v_{i_1}v​i​1​​​​,","vim=v′v_{i_m}=v'v​i​m​​​​=v​′​​)，其中任意相邻的两个顶点构成的边都属于无向图ggg的边集。该序列的整体前后顺序可以颠倒。","viv_iv​i​​)与其相同","viv_iv​i​​>与其不相同。","vjv_jv​j​​)与顶点viv_iv​i​​和vjv_jv​j​​相关联。","vjv_jv​j​​)之间的边没有方向，则称这条边为无向边（edge），用无序偶对(viv_iv​i​​,","vjv_jv​j​​)表示，(vjv_jv​j​​,","vjv_jv​j​​)，其依附（incident）于顶点viv_iv​i​​和vjv_jv​j​​，或者说：(viv_iv​i​​,","vjv_jv​j​​>表示。有序偶有方向，\\vjv_jv​j​​,","vr)：按照顶点集v和边弧集vr的定义构造图","vv​j​​∈v、vi≠vjv_i\\neq","v′v'v​′​​>和顶点vvv，v′v'v​′​​相关联。","v′v'v​′​​>属于该图的边集，则称顶点vvv邻接到顶点v′v'v​′​​，顶点v′v'v​′​​邻接自顶点vvv。","v′v'v​′​​>，可以说弧\\vvv,","w)：在图g中删除弧\\，若g是无向图，还需要删除对称弧\\","w)：在图g中增添弧\\，若g是无向图，还需要增添对称弧\\","{1\\over","···,","一.","三.","二.","入度：以顶点vvv为头的弧的数目称为vvv的入度（indegree），记为id(v)id(v)id(v)。","关键概念","出度：以顶点vvv为尾的弧的数目称为vvv的出度（outdegree），记为od(v)od(v)od(v)。","分类","回路（环）：第一个顶点和最后一个顶点相同的路径称为回路或环（cycle）。","图","图(graph)","图(graph)是由顶点的有穷非空集合和顶点之间边的集合组成的，通常表示为g（v，e），其中，g表示一个图，v是图g中顶点的集合，e是图g中边的集合。","图的抽象数据类型","基础概念","子图：假设有两个图，其中一个图的顶点集和边集都完全包含于另一个图，则称该图是另一个图的子图（subgraph）。","定义","弧头：在上例中，vjv_jv​j​​称为弧头（head）","弧尾：在上例中，viv_iv​i​​称为弧尾（tail）","强连通分量：有向图中的极大强连通子图称做有向图的强连通分量","强连通图：在有向图ggg中，如果对于每一对viv_iv​i​​、vj∈vv_j\\in","性质：含有nnn个顶点的无向完全图有n×(n−1)2{n\\time","性质：含有nnn个顶点的有向完全图有n×(n−1)n\\time","无向图","无向图：0⩽e⩽n(n−1)/20\\leqsl","无向图：与某个顶点相关联的边的数目称为度（degree），记为td(v)td(v)td(v)。","无向图：图中任意两个顶点之间的边都是无向边，则称该图为无向图（undirect","无向图：对于无向图g=(v,{e})g=(v,\\{e\\})g=(v,{e})中从顶点vvv到顶点v′v'v​′​​的路径（path）是一个顶点序列：(v=vi0v=v_{i_0}v=v​i​0​​​​,","无向图：对于无向图，如果两个顶点可以构成的无向边属于该图的边集中，则称这两个顶点互为邻接点（adjacent）。","无向图：对于某边(viv_iv​i​​,","无向图：无向图其值为各顶点度数和的一半，简记为：e=12∑i=1ntd(vi)e=","无向完全图：在无向图中，如果任意两个顶点之间都存在边，则称该图为无向完全图。","无向边：图中两个顶点（viv_iv​i​​，","有向图","有向图：0⩽e⩽n(n−1)0\\leqsl","有向图：e=∑i=1nid(vi)=∑i=1nod(vi)e=\\sum_{i=1}^nid(v_i)=\\sum_{i=1}^nod(v_i)e=∑​i=1​n​​id(v​i​​)=∑​i=1​n​​od(v​i​​)","有向图：如果ggg是有向图，那么顶点vvv到v′v'v​′​​的路径仍然类似于上述的顶点序列，但是该序列的整体前后顺序不能颠倒，且任意前后相邻的两个顶点构成的弧都属于有向图ggg的边集，注意这两个顶点在序列中排在前的作为弧尾，排在后的作为弧头。","有向图：如果图中任意两个顶点之间的边都是有向边，则称该图为有向图（direct","有向图：对于弧\\vvv,","有向图：对于有向图，如果两个顶点vvv和v′v'v​′​​构成的一条弧\\vvv,","有向图：顶点vvv的度为：td(v)=id(v)+od(v)td(v)=id(v)+od(v)td(v)=id(v)+od(v)。","有向完全图：在有向图中，如果任意两个顶点之间都存在方向相反的两条弧，则称该图为有向完全图。","有向树：如果一个有向图恰有一个顶点的入度为0，其余顶点的入度均为1，则是一个有向树","有向边：若从顶点viv_iv​i​​到vjv_jv​j​​的边有方向，则称这条边为有向边，也称为弧（arc），用有序偶\\viv_iv​i​​,","权：有些图的边或弧具有与它相关的数字，这种与图的边或弧相关的数叫做权（weight）","注意1：要是子图","注意2：子图要是连通的","注意3：连通子图含有极大顶点数","注意4：具有极大顶点数的连通子图包含依附于这些顶点的所有边","注意：强连通图不一定每两个顶点之间都有两条方向相反的弧，因为在定义中强调是存在两个点之间的路径即可，如果图中所有顶点之间可以构成单向闭环，那么此时也是强连通图。","生成树：一个连通图的生成树是一个极小的连通子图，它含有图中全部的nnn个顶点，但只有足以构成一棵树的n−1n","生成森林：一个有向图的生成森林由若干棵有向树组成，含有图中全部顶点，但只有足以构成若干棵不相交的有向树的弧","相关联","稀疏图：有很少条边或弧的图称为稀疏图","稠密图：与稀疏图相反的称为稠密图","简单回路（环）：除了第一个顶点和最后一个顶点之外，其余顶点不重复出现的回路，称为简单回路或简单环","简单图：在图中，若不存在顶点到其自身的边，且同一条边不重复出现，则称这样的图为简单图。","简单路径：序列中顶点不重复出现的路径称为简单路径","网","网：带权的图通常称为网（network）","路径","路径的长度：即路径上的边或弧的数目。","边数","边数：对于具有nnn个顶点和eee条边的图","边：在图中，任意两个顶点之间的关系用边来表示，边集可为空。在线性表中，相邻数据元素之间具有线性关系，在树结构中，相邻两层的结点具有层次关系。","连通分量：无向图中的极大连通子图称为连通分量。","连通图","连通图：对于图中顶点集中存在的任意两个顶点都是连通的，则称ggg是连通图（connect","连通：在无向图ggg中，如果从顶点vvv到顶点v′v'v​′​​有路径，则称vvv和v′v'v​′​​是连通的。","邻接点","顶点与边的关系","顶点的度","顶点的有穷非空集合和边的集合","顶点：即数据元素。线性表中数据元素叫元素，树中数据元素叫结点，在图中数据元素称为顶点（vertex）"],"数据结构/图/邻接矩阵/邻接矩阵.html":["&1\\\\","&3&\\infti","&5&\\infti","&6\\\\","&\\infti","(v3v_3v​3​​,","0&0&0&0","0&0&0&1\\\\","0&1&1&1\\\\","1&0&1&0","1&0&1&0\\\\","1&1&0&0\\\\","1&1&0&1\\\\","1.","2&\\infti","2.","3.","9&\\infti","[0001101011000000]","[0111101011011010]","[∞∞∞∞69∞3∞∞2∞∞5∞∞∞∞∞1∞∞∞∞∞]","\\\\","\\begin{matrix}","\\end{matrix}","\\infti","\\left[","\\right]","matrix）存储方式是用两个数组来表示图。一个一维数组存储图中顶点信息，一个二维数组（称为邻接矩阵）存储图中的边或弧的信息。","nn×n的方阵，当任意两个顶点之间的边或弧属于图的边集，则将该阵点设置为1，否则设置为0，即形成一个由0和1组成的矩阵。","v0v_0v​0​​)，(v1v_1v​1​​,","v1v_1v​1​​)，(v2v_2v​2​​,","v2v_2v​2​​),","v3v_3v​3​​)这四个阵点形成的线","​⎣​⎢​⎢​⎡​​​0​1​1​0​​​0​0​1​0​​​0​1​0​0​​​1​0​0​0​​​⎦​⎥​⎥​⎤​​","​⎣​⎢​⎢​⎡​​​0​1​1​1​​​1​0​1​0​​​1​1​0​1​​​1​0​1​0​​​⎦​⎥​⎥​⎤​​","​⎣​⎢​⎢​⎢​⎢​⎡​​​∞​9​2​∞​∞​​​∞​∞​∞​∞​∞​​​∞​3​∞​∞​∞​​​∞​∞​5​∞​∞​​​6​∞​∞​1​∞​​​⎦​⎥​⎥​⎥​⎥​⎤​​","一.","三.","与无向图的主要区别是，有向图的阵点值将不再对称。","二.","判断从某个顶点到另外一个顶点是否有弧，则按照对应的行和列查找值，若为1，则有弧，为0则无弧。","可以表示成以下的矩阵：","可以表示成如下的矩阵：","图的邻接矩阵（adjac","定义","对于下图：","对于下面的图：","对于不存在的边或弧，将其权值设置为无穷大。之所以是无穷大，是因为权值既可能取正，也可以取负，也可以取0，所以需要一个相对不可能的数值来代表不存在。","对于如下的图：","对于存在的边或弧，将该阵点的值设置为对应的权值","对于无向图形成的邻接矩阵，是一个对称矩阵，对称线为左上到右下的斜线，即(v0v_0v​0​​,","对于网这种图，由于它的边或弧上带有权值，所以需要将这些权值保存下来。其方法就是将原本的邻接矩阵的0,1值用权值代替，具体规则如下：","引入","性质","无向图","有向图","有向图某顶点的入度即为该顶点对应的列的数值之和","有向图某顶点的出度即为该顶点对应的行的数值之和","根据邻接矩阵中的阵点值即可知道任意两顶点之间是否有边","求顶点viv_iv​i​​的所有邻接点，即在第iii行中，值为1的元素对应的列就是邻接点","由于图是由顶点和边或弧两部分组成。合在一起比较困难，很容易想到使用两个结构来分别存储。","由于有向图的弧是有方向的，所以定义邻接矩阵的行数为弧尾，列数为弧头。","网","而边或弧由于是顶点和顶点之间的关系，一维搞不定，所以考虑用一个二维数组来存储。","要求顶点viv_iv​i​​的度，其值为这个顶点在邻接矩阵中第iii行（或第iii列）的元素之和。比如顶点v1v_1v​1​​的度就是2","设图ggg有nnn个顶点，则邻接矩阵是一个n×nn\\time","邻接矩阵","顶点不分大小、主次，用一个一维数组来存储是很不错的选择。","（0,0）元素表示v0v_0v​0​​与v0v_0v​0​​的关系，以此类推。"],"数据结构/图/邻接矩阵/代码实现/代码实现.html":["#defin","//","1.","100;","65535;","adjmatrix;","arc[maxvex][maxvex];","arclength;","edgetyp","edgetype;","elemtyp","elemtype;","graph","infti","int","item","maxvex","struct","typedef","vexlength;","vexs[maxvex];","x;","y;","{","};","代码实现","充当无穷大","最大顶点数","边","边集","邻接矩阵","顶点","顶点集"],"数据结构/图/邻接矩阵/难点操作/难点操作.html":["%d\",","%d,","&g","&i,","&j,","&w);","*g)","//","0;","2.","=",">arc[i][j]",">arc[i][j];",">arc[j][i]",">numedges);",">numnodes,",">vexs[i]);","creatmgraph(mgraph","for(i","for(j","for(k","g","i++)","i,","infty;","int","j","j++)","j,","k","k++)","k,","numedges;","numnodes;","printf(\"输入边(vi,","printf(\"输入顶点数和边数：\\n\");","scanf(\"%d,","scanf(&g","vj)上的下标i，","void","w;","{","}","一.","下标j和权w:\\n\");","先将所有边设置为无穷","无向网图的建立","给存在的边设置权值，并进行对称操作","读入对应个数的顶点","难点操作"],"数据结构/图/邻接表/邻接表.html":["list）。","一.","三.","二.","几乎所有的顺序存储结构都有这样的特点，此时我们可以考虑使用链式存储结构来解决。","可以使用树中孩子表示法的方法进行存储，即使用数组存储所有的顶点，用多个链表表示与顶点相关的边。","图中每个顶点viv_iv​i​​的所有邻接点构成一个线性表，由于邻接点的个数不定，所以用单链表存储，无向图称为顶点viv_iv​i​​的边表，有向图则称为顶点viv_iv​i​​作为弧尾的出边表。","图中顶点用一个一维数组存储，当然，顶点也可以用单链表来存储，不过数组可以较容易地读取顶点信息，更加方便。另外，对于顶点数组中，每个元素还需要存储指向第一个邻接点的指针，以便于查找该顶点的边信息。","基本方法","如果想知道某个顶点的度，就等于这个顶点的边表中结点的个数。对于有向图来说，需要分入度和出度。","定义","对于有向图来说，如果重点想要知道以顶点为弧头的弧集，可以建立一个以顶点为弧头的逆邻接表。如果二者都很重要，那么可以让数组中每个元素都连接两个链表。","引入","当图中顶点之间的边或弧足够多的时候，使用邻接链表可以充分的利用分配的空间，但是如果是这种情况呢：顶点集内元素足够多，但边弧集却只有一两个元素，可以明显地看出这将造成大量的空间浪费。","若求顶点的所有邻接点，就对此顶点的边表进行遍历，遍历出的所有下标对应的顶点即为该顶点的所有邻接点；对于有向图来说，需要分弧的方向。","若要判断顶点viv_iv​i​​和vjv_jv​j​​之间是否存在边，只需要去搜索这两个顶点任意一个顶点的边表中是否存在另一个顶点的下标。对于有向图来说，需要分弧头和弧尾。","这种数组与链表相结合的存储方法称为邻接表（adjac","邻接表"],"数据结构/图/邻接表/代码实现/代码实现.html":["#defin","*next;","*parc;","*ptralgraph;","//","1.","100","algraph","algraph;","arc","arc;","arclen;","data;","elemtyp","elemtype;","head;","int","item","maxvex","parc","struct","tail;","typedef","verlen;","vertex","vertex;","vertex[maxvex];","weight;","x;","y;","{","};","与顶点构成弧的另一个顶点下标","代码实现","以该顶点为弧头的入边表","以该顶点为弧尾的出边表","弧的数量","弧结点","当前顶点个数","指针域","数据元素","数据域","最大顶点数","该弧的权重","邻接表指针","邻接表类型","顶点数组","顶点结点"],"数据结构/图/邻接表/难点操作/难点操作.html":["2.","一.","邻接表的创建","难点操作"],"数据结构/图/十字链表/十字链表.html":["一.","三.","主要操作","二.","其他的操作都与邻接表差不多，主要需要注意的一点是：在添加一条弧时，不仅需要添加为一个结点的出边，也需要添加为一个结点的入边。","其操作过程大概如下：","出边表链表中每个结点有两个元素，一个数据域用于保存以表头为弧尾的弧的弧头的下标，然后一个指针域作为链连接下一个以表头为弧尾的弧的弧头的结点。","刚刚说过了，在出边表中，一条弧对于其表头是出边，对于结点中保存的下标对应的顶点来说是入边，所以每一个顶点的入边表的表头只需要将所有出边是该顶点的所有结点连接起来就行了。","十字链表","在邻接表中可以很好地实现无向图，但是对于有向图，就只能特化地实现存储出边表或入边表，想要根据一个邻接表同时方便的查找一个顶点的出边和入边也可以实现，即按照我实现的邻接表一样，在每个顶点结点中设置两条链表，一条出边表，一条入边表。但是其缺陷也是明显的，因为在出边表中，存储了所有以该表头为顶点的出边，每一条边涉及到两个对象，一个弧头，一个弧尾，很明显，对于某个结点的出边也是其对应的另一个结点的入边，可是在邻接表的实现中，每个顶点都设立了两个链表来分别存储，很显然这是很浪费空间的。","定义","引入","所以如下来实现：首先在顶点元素中再添加一个指针域作为入边表的头，然后同样连接一个链表，每个结点保存以表头为弧头的所有弧的弧尾的顶点对应的下标。那么怎么将这个入边表链起来呢？可以跟邻接表的实现一样，添加一条新的入边表，但上面说过了浪费空间。","有了这样一个邻接表，再思考这样一个问题，一条弧对于其所关联的两个顶点而言，对弧尾来说是出边，对弧头来说则是入边，刚刚实现的邻接表是一个出边表，其后续跟的每一个结点对于当前链来说是出边，对于出边表中所保存的下标来说都是一条入边，其弧尾即为链表头的顶点。","然后找到弧头下标的元素，同样以头插法将该结点插入该入边表。","然后找到弧尾下标的元素，以头插法将该结点插入该出边表。","还有一个问题，如何根据这个入边表找到所有的弧尾？每一个结点都只保存了以表头为顶点的所有出边的弧头，却不知道弧的弧尾，除非做一个双向链表逆遍历。当然更简单的方式是在每一个结点中添加一个数据域，保存弧的弧尾的下标即可。可以想象，对于每一个结点的出边表来说，每一个结点的弧尾都应该是当前表头的下标。","首先新建一个结点，设置好它的两个数据域，即弧尾和弧头的下标。","首先还是先考虑一个邻接表：首先是一个顶点数组，用以保存所有的顶点，在顶点中有一个出边表头，用于连接一个出边表。"],"数据结构/图/十字链表/代码实现/代码实现.html":["#defin","*next_in;","*next_out;","*ptrarc;","*ptrorthlist;","//","1.","100","arc","arc;","arcnums;","data;","elemtyp","elemtype;","firstin;","firstout;","head;","int","item","maxvex","orthlist","orthlist;","ptrarc","struct","tail;","typedef","vernums;","vertex","vertex;","vertex[maxvex];","x;","y;","{","};","代码实现","保存弧的弧头","保存弧的弧尾","入边表的链","出边表的链","十字链表指针","十字链表类型","弧或边指针类型","弧或边类型","弧边数","数据元素","数据域","顶点数","顶点类型","顶点集"],"数据结构/图/邻接多重表/邻接多重表.html":["1.","一.","三.","主要操作","二.","使用头插法将该结点插入与之相关的另一个顶点的边表中","使用头插法将该结点插入与之相关的某个顶点的边表中","其优化方法与十字链表类似，不过有一点点区别。","创建边结点，并初始化其两个数据域","十字链表是对于有向图而言在邻接表的基础上所做的优化，那么无向图需不需要优化呢？","在邻接表中，无向图的每一条边都保存在两个结点的边表中，浪费空间是其一，其二是添加时需要新建两个结点，删除时需要在两个顶点的链表中进行查找。","定义","引入","添加边","然后是指针域：其中一个指针指向依附于某个顶点的下一条边，另一个指针指向依附于另一个顶点的下一条边","而现在我们需要两个数据域和两个指针域。","邻接多重表","需要修改的是边结点，原本的边结点只有一个数据域和一个指针域，数据域用于保存和顶点关联的边的另一个顶点的下标，指针域用来连接下一个边。","首先说数据域：两个数据域分别保存与边相关的两个顶点的下标","首先顶点数组的内容不用修改，仍然是一个顶点数据和一个边表指针。"],"数据结构/图/邻接多重表/代码实现/代码实现.html":["#defin","*ilink;","*jlink;","*ptredge;","*ptrmultialgraph;","//","1.","100","data;","edg","edge;","edgenums;","elemtyp","elemtype;","firstedge;","graph;","int","item","ivex;","jvex;","maxvex","multialgraph","multialgraph;","ptredg","struct","typedef","vernums;","vertex","vertex;","vertex[maxvex]","x;","y;","{","};","与第一个顶点相关的下一条边的指针","与第二个顶点相关的下一条边的指针","代码实现","改变的另一个顶点下标","数据元素","该边的某一个顶点下标","边指针","边结点类型","边表指针","邻接多重表指针","邻接多重表类型","顶点数据元素","顶点类型"],"数据结构/图/边集数组/边集数组.html":["一.","二.","定义","用途","边集数组","边集数组关注的是边的集合，在边集数组中要查找一个顶点的度需要扫描整个边数组，效率并不高。因此它更适合对边依次进行处理的操作，而不适合对顶点相关的操作。","边集数组是由两个一维数组构成的。一个是存储顶点的信息；另一个是存储边的信息，这个边数组每个数据元素由一条边的起点下标、终点下标和权组成。"],"数据结构/图/边集数组/代码实现/代码实现.html":["#defin","*ptrgraph;","//","1.","100","200","arc","arc;","begin;","edg","edge[maxarc];","edgenums;","edges;","elemtyp","elemtype;","end;","graph","graph;","int","item","maxarc","maxvex","struct","typedef","vertex","vertex[maxvex];","vertnums;","verts;","weight;","x;","y;","{","};","代码实现","数据元素","权","终点下标","起点下标","边类型","边集","顶点集"],"算法/算法.html":["算法"],"算法/查找/查找.html":["1.","2.","key)：可以识别多个数据元素（或记录）的关键字，称为次关键字","key)：若一个关键字可以唯一地标志一个记录，则称此关键字为主关键字","search","table)：只作查找操作的查找表，它的主要操作有：","table)：在查找过程中同时插入查找表中不存在的数据元素，或者从查找表中删除已经存在的某个数据元素，它的主要操作有：","table)：由同一类型的数据元素（或记录）构成的集合。","一.","三.","主关键字(primari","二.","关键字(key)：数据元素中某个数据项的值","关键码：用于标志一个记录的某个数据项（字段）的关键字","分类","动态查找","动态查找表","动态查找表(dynam","四.","基本概念","定义","对于动态查找来说，可以考虑二叉排序树来进行查找，对于二叉排序树还可以进行一系列优化。","对于静态查找来说，一般用线性表来进行查找，如果是无序表，一般就只能用遍历的方法来实现，如果是有序表，就可以使用二分查找等方法来进行高效的查找。","查找","查找就是根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。","查找时删除数据元素","查找时插入数据元素","查找表(search","查询某个“特定的”数据元素是否在查找表中。","检索某个“特定的”数据元素和各种属性。","次关键字(secondari","特点","静态查找","静态查找表","静态查找表(static"],"算法/查找/顺序表查找/顺序表查找.html":["search)又叫线性查找，是最基本的查找技术，它的查找过程是：从表中第一个（或最后一个）记录开始，逐个进行记录的关键字和给定值比较，若某个记录的关键字和给定值相等，则查找成功，找到所查的记录；如果直到最后一个（或第一个）记录，其关键字和给定值比较都不等时，则表中没有所查的记录，查找不成功。","一.","定义","顺序查找(sequenti","顺序查找首先是对于静态查找表进行查找，因为主要只针对线性表进行查找操作，其次顺序查找一般用于无序表，在有序表中，有比顺序查找更优秀的算法。","顺序表查找"],"算法/查找/顺序表查找/顺序表查找算法/顺序表查找算法.html":["顺序表查找算法","顺序表查找算法主要思路就是：从表的一端开始，逐个往后遍历，如果找到指定值，则返回值的位置，否则返回未找到的信息。"],"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":["*a,","//","0;","1.","=","for(i","i;","int","key)","n,","sequential_search(int","{","代码实现","顺序查找，a为数组，n为要查找的数组的元素个数，key为要查找的关键字"],"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":["具体的做法一般是将数组第一个元素的值设置为要查找的值，然后从数组尾部开始遍历，然后开始循环，如果数组值与查找值相等时，就返回当前下标。这样做返回的下标有两种可能，一是在遍历中途，查找到了待查值，然后返回下标；二是遍历到数组第一个元素，因为提前设置为了待查值，所以返回下标0。","在较小的顺序表中，该方法对效率没有太大影响，但如果n值以万记时，该方法就能省下上万次操作。","在顺序表查找算法中，每一次迭代都会进行判断当前循环控制变量是否越界，这个操作看似是必要的，然而实际上完全可以消除这一步操作。","这个方法叫做设置哨兵，利用哨兵，完美地消除了在每一次迭代中都要判断循环控制变量是否越界的操作。","需要注意的是：如果要使用该方法，顺序表的第一个元素不能用来保存值。","顺序表查找优化"],"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":["!=","*a,","1.",";","=","a[0]","i;","int","key)","key;","n,","n;","return","sequential_search2(int","while(a[i]","{","}","代码实现"],"算法/查找/有序表查找/有序表查找.html":["有序表查找","有序表查找是针对有序表进行的查找操作，对于有序表，与无序表不同，它有很多优秀的算法可以进行查找操作，如二分查找，插值查找和斐波那契查找等等。"],"算法/查找/有序表查找/二分查找/二分查找.html":["search)也叫折半查找，它的前提是线性表中需要用于查找的关键码有序（通常从小到大有序），线性表必须采用顺序存储。折半查找的基本思想是：在有序表中，取中间记录作为比较对象，若给定值与中间记录的关键字相等，则查找成功；若给定值小于中间记录的关键字，则在中间记录的左半区继续查找；若给定值大于中间记录的关键字，则在中间记录的右半区继续查找。不断重复上述过程，直到查找成功，或所有查找区域无记录，查找失败为止。","一.","二.","二分查找","二分查找(binari","二分查找的原理应该还是很好理解的，唯一需要注意的是整数除法的问题。","定义","注意"],"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":["*a,","+","0;","1.","1;","=","a[mid])","binary_search(int","high","high,","int","key)","low","low,","mid","mid;","n,","n;","return","while(low","{","}","代码实现"],"算法/查找/有序表查找/插值查找/插值查找.html":["2}(high","2}=low+{1\\ov","2​2​​1​​更接近待查值，具体原理暂时不清楚，但通过例证确实如此。","2​2​​1​​替换为了key−a[low]a[high]−a[low]key","a[low]\\ov","a[low]}","a[low]}\\ov","a[low]}}(high","a[low]}​a[high]−a[low]​​key−a[low]​​。","key−a[low]a[high]−a[low]","low)","mid=","mid=low+high2=low+12(high−low)","mid=low+key−a[low]a[high]−a[low](high−low)","mid=low+{key","mid=low+​a[high]−a[low]​​key−a[low]​​(high−low)","mid=​2​​low+high​​=low+​2​​1​​(high−low)","search)是根据要查找的关键字key与查找表中最大最小记录的关键字比较后的查找方法，其核心就在于插值的计算公式：","{a[high]","{key","{low+high\\ov","​a[high]−a[low]​​key−a[low]​​","一.","三.","之所以这样替换是因为后者计算出的位置比直接的121\\over","二.","刚才的极端情况是当数据量巨大时，需要查找的值还在表的某一端，仔细思考这个情况就会发现，由于我们现在是在一个有序表里进行查找，那么如果待查值在表的某一端只意味着一件事，那就是这个待查值特别大或特别小，那我们何不直接从这个表的后半部分或者前半部分开始查找呢？再推广到一般情况，我们能否根据待查值的大小来确定我们开始查找的位置呢？这个答案就是插值查找。","即将121\\over","原本的中间位置更新方法如下：","原理","四.","定义","对于表长较大，且关键字分布比较均匀的查找表来说，插值查找算法的平均性能比二分查找要好得多。但是对于数据极端不均匀的数据，用插值查找未必是很合适的选择。","引入","当需要查找的数据量不大时，二分查找完全是够用的，但如果需要查找的数据量巨大呢，特别是当需要查找的值还在表的两端时，甚至还不如顺序查找算法，当然这只是极端情况，平均时间复杂度还是比顺序查找低的。","插值查找","插值查找(interpol","插值查找的基本方法还是二分查找，只是改变了查找的起始位置以及每次更新中间位置的方法。","既然发现了这个问题，那么有没有解决方法呢？答案是肯定的。","特点","而修改之后的位置更新方法如下：","首先先来分析一下二分查找的缺陷吧。"],"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":["*a,","+","0;","1.","1;","=","a[mid])","high","high,","int","interpolation_search(int","key)","low","low,","mid","mid;","n,","n;","return","while(low","{","}","代码实现"],"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":["+","...]","1,","13,","1]","1f[k−1]−1个。","1f[k−2]−1个。","1m+1个到底highhighhigh个，此时范围个数为f[k−2]−1f[k","1mid=low+f[k−1]−1的公式来每次更新mid的位置，且每次迭代如果不匹配，还需要修改k的值。具体实现见斐波那契查找的代码实现。","1mid−1个，此时范围个数为f[k−1]−1f[k","2,","21,","2]","3,","34,","5,","8,","[0,","search)，是利用黄金分割原理来实现的一种类似于二分查找的查找方式","一.","三.","二.","原理","定义","对于二分查找，一种优化方法是插值查找，而另一种优化方法则是斐波那契查找，与插值查找相同，斐波那契查找也是改变查找开始的位置以及每次更新的位置。","引入","当key=a[mid]key=a[mid]key=a[mid]时，查找成功。","当key>a[mid]key>a[mid]key>a[mid]时，新范围是第m+1m","当keya[mid]keykeya[mid]时，新范围是第lowlowlow个到第mid−1mid","斐波那契查找","斐波那契查找(fibonacci","斐波那契查找算法的核心在于：","然后使用mid=low+f[k−1]−1mid=low+f[k","要实现斐波那契查找，首先需要创建一个斐波那契数列的数组，斐波那契数列就不再多介绍了，其数组大致如下：","首先以要查找的表的元素个数为下标找到斐波那契数列中改下标对应的元素值，如果该元素值大于待查表的元素个数时，将待查表扩展到斐波那契数列的查出值的个数，后续元素的值都用待查表的最后一个元素值来填充。"],"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":["*a,","+","//","0;","1)","1.","1;","2;","=",">","a[mid])","f[k]","fibonacci_search(int","for(i","high","high,","i,","if(mid","int","k","k++;","k;","key)","low","low,","mid","mid,","n,","n;","while(n","{","}","代码实现","斐波那契数列的创建不进行表示"],"算法/查找/线性索引查找/线性索引查找.html":["一.","二.","定义","对于无序表来说，对它进行查找只有顺序表查找一种方法，当表长很大时毫无疑问会花费大量的时间。反观有序表，有二分查找、插值查找和斐波那契查找等能够大大减少时间消耗的算法可以优化查找效率。那么，有没有方法可以让无序表也能像有序表那样使用这些好用的算法呢？答案就是索引查找。","引入","索引就是把一个关键字与它对应的记录相关联的过程，一个索引由若干个索引项构成，每个索引项至少应包含关键字和其对应的记录在存储器中的位置等信息。","索引按照结构可以分为线性索引、树形索引和多级索引，此总结就只介绍线性索引技术。","线性索引就是将索引项集合组织为线性结构，也称为索引表。主要包括三种线性索引：稠密索引、分块索引和倒排索引。","线性索引查找"],"算法/查找/线性索引查找/稠密索引/稠密索引.html":["一.","三.","二.","但对于数据集非常大，如上亿的数据集，那也就是意味着索引也得有同样的数据集长度规模，对于内存有限的计算机来说，可能就需要反复去访问磁盘，查找性能反而大大下降了。","加入我们要建立索引的是一个无序表，每个数据元素包含任意项，其中有一个主关键字，假设是一串数字编号。","原理","定义","特点","稠密索引","稠密索引是指在线性索引中，将数据集中的每个记录对应一个索引项，其中索引项一定是按照关键码有序排列的。","索引表的建立过程一般是先遍历需要建立索引的无序表，每遇到一条记录，就将该记录的主关键字按顺序保存到索引表中，并将对应的指针指向该记录。","索引项有序意味着，我们要查找关键字时，可以用到二分、插值、斐波那契等有序查找算法，大大提高了效率。","那么我们需要建立的索引表的每一个数据元素就应该包括与该无序表相同的主关键字以及一个指向无序表中数据元素的指针用于指向与主关键字对应的数据元素的地址。"],"算法/查找/线性索引查找/分块索引/分块索引.html":["一.","三.","二.","分块索引","分块索引需要满足两个条件：","分块索引，即先对数据集进行分块，每一块保存当前块的最大值和块中的数据长度，以及一个指向该块的块首指针。","原理","在分块索引表中查找要查关键字所在的块。由于分块索引表是块间有序的，因此很容易利用二分、插值等算法得到结果。","在分块索引表中查找，就是分以下两步进行：","块中的记录个数：以便于循环时利用","块内无序：即每一块内的记录不要求有序。如果对块内的记录也要求有序那就需要付出大量时间和空间的代价。","块间有序：即每一块索引的最大值记录要按顺序排列。","定义","对于分块索引的每一个索引项而言，包含三个数据项：","指向块首数据元素的指针：便于开始对这一块中的记录进行遍历。","最大关键码：它存储每一块中的最大关键字，这样的好处就是可以使得在它之后的下一块中的最小关键字也能比这一块的最大的关键字要大","根据块首指针找到相应的块，并在块中顺序查找关键码。","注意","针对与稠密索引的缺点，一种补足方式就是使用分块索引。","需要注意的是：块内无序虽然是说块内值按序排列，但是要求整个块的所有数据都要比上一个块中最大数据大。"],"算法/查找/线性索引查找/倒排索引/倒排索引.html":["一.","二.","倒排索引","倒排索引与其他索引表不同的地方是：其他索引表还是通过主关键字来查找记录的位置，而倒排索引是通过次关键字来查找所有有这个次关键字属性的记录。","倒排索引的通用结构是：","原理","定义","次关键码","记录号表：存储具有相同次关键字的所有记录的记录号（可以是指向记录的指针或者是该记录的主关键字）。","这也是基础的搜索引擎的搜索方法，每个网页都是独一无二的，其网址就是主关键码，而不同的文章中都会包含一些关键词，这些关键词都是有可能重复的，所以是次关键码。而用户搜索一般是通过关键词去找到想要的网页，也就是通过次关键码搜索出所有相关的记录。"],"算法/查找/二叉排序树/二叉排序树.html":["sort","tree)，又称为二叉查找树。它或者是一棵空树，或者是具有下列性质的二叉树：","一.","三.","二.","二叉排序树","二叉排序树(binari","又因为二叉排序树采用链式结构，所以在插入删除操作上也是很快的。","可以看到，针对与静态查找表的所有实现几乎都是以线性表的形式实现的。由于线性表无法完美地实现动态查找表的算法，那自然可以想到还有树和图的实现方法。","四.","它的左、右子树也分别为二叉排序树。","定义","引入","很明显可以看出，这就是一个递归的过程，而对这个构造好的二叉排序树进行中序遍历将会得到一个从小到大有序排列的序列。","构造一棵二叉排序树的目的并非为了排序，而是为了提高查找和插入删除关键字的速度。","构造方法","特点","由于它们几乎都是由线性表来实现的，如果是顺序表，由于它不要求顺序，所以它的插入删除操作都还好，但是它的查找性能一般；而对于有序表和索引表，由于其有序的特点，所以在插入时就涉及到大块数据的移动，如果是链表还好，但链表又会影响查找算法的实现。","而我们要使用的就是一种树的实现方法。","若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值。","若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值。","那对于动态查找表来说，有没有一种兼顾查找、插入、删除的方法呢？答案是肯定的。","顺序表查找、有序表查找（二分、插值、斐波那契）以及线性索引查找（稠密、分块、倒排）都是对于静态查找表而言的算法，可以很好地解决查找操作的需求，但是对于动态查找表来说，其性能就不见得有那么好了。","首先二叉排序树的排列方式与二分查找很像（但不同），当比结点小时就进入左子树，比结点大就进入右子树，如果树的构建均匀的话（平衡二叉树），那么每次判断都会筛选掉一半的内容，直到最后找到待查的内容。可以看出这个查找速率还是很好的。","首先提供一个任意顺序的序列，然后依次添加到二叉排序树中，第一个存在根结点，然后从第二个开始就进行判断，若比根结点小，则进入左子树，反之进入右子树。若进入的子树根结点为空，则在该位置上保存值，否则继续判断与该根结点的大小关系。"],"算法/查找/二叉排序树/查找操作/查找操作.html":["*bitree;","*lchild,","*rchild;","bitnod","bitnode,","data;","int","struct","typedef","{","}","一.","二.","准备","原理","当当前结点的值与待查值相同时就返回true或者返回查找到的位置","我们首先进入二叉树的根结点开始查找","查找操作","若待查值小于当前结点值就进入左子树继续查找，若大于当前结点值就进入右子树继续查找","若查找到最后，当前指针指向空时都未找到待查值就返回false或者返回空指针","首先当然需要一个二叉树的结构，假设这个结构如下："],"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":["(!t)","(key","*p","*p)","1.","=","==",">data)",">lchild,",">rchild,","bitre","data)","f,","f;","false;","int","key,","p);","return","searchbst(bitre","searchbst(t","statu","t","t,","t;","true;","{","}","代码实现"],"算法/查找/二叉排序树/插入操作/插入操作.html":["一.","二叉排序树的插入操作也是构建二叉排序树的基础，其主要方法如下：","以根结点为起始点，首先进行查找，看待插值是否已存在，若已存在则跳过插入该值并返回false，若不存在则进行下一步","原理","插入操作","若待插值小于根结点的值，则进入左子树重复操作2，否则进入右子树重复操作2","若根结点为空则在此处插入一个值，否则进行比较"],"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":["&p))","(!p)","(!searchbst(*t,","(bitree)malloc(sizeof(bitnode));","(i","(key","*t","*t,","0;","1.","35,","37,","47,","51,","58,","62,","73,","88,","93","99,","=",">data",">lchild",">rchild","a[10]","bitre","data)","fals","i;","insertbst(bitre","int","key)","key,","key;","null,","null;","p","p,","return","s","s;","statu","t","true;","{","}","};","一.","二.","代码实现","插入","构造"],"算法/查找/二叉排序树/删除操作/删除操作.html":["1.","2.","3.","一.","二.","其中前两种删除情况都很简单，但是第三种情况则是导致问题的主要因素。","删除操作","删除结点为叶子结点","删除结点仅有左子树或右子树","删除结点既有左子树也有右子树。","原理","对于要删除的结点为叶子结点的情况来说，直接简单的将该结点内存释放随后修改其双亲的孩子指针即可。","对于要删除的结点只有左子树或只有右子树的情况来说，若该结点为其双亲结点的左孩子，则将该结点删除之后，将其子树直接接到该结点的双亲的左孩子链上（不管该结点的子树是左子树还是右子树）；若该结点为其双亲节点的右孩子，则将该结点删除之后，将其子树直接接到该结点的双亲的右孩子链上即可。","对于要删除的结点既有左子树又有右子树的情况来说，情况就比较复杂了。","引入","情况一","情况三","情况二","第一种方法如下：由于对于单子树的情况很好解决，所以可以先用单子树的方法来思考这种情况：当删除结点后，将该结点的某个子树按照情况二的方法进行连接，唯一的问题是剩下一棵子树应该怎么接上去，最简单的方法是将这棵子树的所有结点重新插入到二叉排序树中，可是当子树的结点数量过大时，很明显这种方法的效率是很低的。","第二种方法如下：为了不大幅度移动这两棵子树的相对位置，我们可以找出这两棵子树中删除结点的直接前驱或直接后继，让这个结点来替代被删除的结点，然后将两棵子树接在这个结点上。用于替换的结点如果不是叶子结点和单子树结点，那么就需要按照相同的方法来对这个用于替换的结点进行删除。","说到二叉排序树的删除操作，说到底是一个断链然后重接的过程，看上去并不复杂，但有一个问题，那就是在删除了某个结点后，有可能会导致删除后的二叉树不再是二叉排序树。","针对这个问题，可以将删除结点分为三种情况："],"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":["!=","(!*t)","((*p)","(*p)","(*t)","(key","(q","*p","*p)","*p;","*t,","1.","=","==",">data",">data)",">data;",">lchild",">lchild,",">lchild;",">rchild",">rchild)",">rchild,",">rchild;","bitre","data)","delete(bitre","delete(t);","deletebst(&(*t)","false;","free(q);","free(s);","if((*p)","int","key)","key);","null)","q","q,","return","s","s;","statu","true;","while(","{","}","一.","二.","代码实现","删除","查找并删除"],"算法/查找/平衡二叉树/平衡二叉树.html":["balanc","binari","factor)，由定义可知平衡因子可正可负，所以平衡二叉树要求二叉排序树每个结点的平衡因子的绝对值的最大值最多为1，否则称该树不平衡。","search","tree)，是一种二叉排序树，其中每一个结点的左子树和右子树的高度差至多等于1。","tree或height","velskii和e.m.landis）。","一.","二.","定义","对于二叉排序树来说，如果其构造足够均匀，那么其效率是很不错的，但是考虑一种极端情况，如果用于构造二叉排序树的序列原本就是有序的话，那么可想而知，由此序列构造出的二叉排序树将是一棵斜树，其查找过程与顺序查找差不多，每次判断就只筛选掉了子树的根结点这一个元素，这当然不是我们希望的。","平衡二叉树(avl树)","平衡二叉树(self","平衡二叉树也叫avl树，主要是根据其发明者名字命名的（g.m.adelson","平衡二叉树是一种高度（深度）平衡的二叉树，二叉树上结点的左子树高度减去右子树高度得到的值称为平衡因子bf(balanc","引入","距离插入结点最近的平衡因子绝对值大于1的结点为根的子树称为最小不平衡子树。","那么有什么方法可以将所有给出的序列都能构造得均匀一点吗？这就是平衡二叉树的构造方法了。"],"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":["*bitree;","*lchild,","*rchild;","avl树的实现","bf;","bitnod","bitnode,","data;","int","struct","typedef","{","}","一.","二.","基本思想","平衡二叉树构建的基本思想就是在构建二叉排序树的过程中，每当插入一个结点时，先检查是否因为插入而破坏了树的平衡性。若是，则找出最小不平衡子树，在保持二叉排序树特性的前提下，调整最小不平衡子树中各结点之间的连接关系，进行相应的旋转，使之成为新的平衡子树。","数据结构","旋转方向根据最小不平衡子树的根结点的平衡因子bf的值决定，若为正，则进行右旋，若为负，则进行左旋。"],"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":["#defin","(!*t)","(!insertavl(&(*t)","((*t)","(*p)","(*p);","(*t)","(*taller)","(bitree)malloc(sizeof(bitnode));","(e","(i","(r","(rl","*p","*p)","*t","*t)","*t,","*taller","*taller)","+1","0","0;","1","1,","1.","10,","2,","3,","4,","5,","6,","7,","8","9,","=","==",">bf",">bf)",">data",">data)",">lchild",">lchild);",">lchild,",">lchild;",">rchild",">rchild);",">rchild,",">rchild;","a[10]","bitre","break;","case","data)","e,","e;","eh","eh:","eh;","false;","i;","insertavl(bitre","int","l","l,","l;","l_rotate(&(*t)","l_rotate(bitre","l_rotate(t);","leftbalance(bitre","leftbalance(t);","lh","lh:","lh;","lr","lr;","null;","r","r,","r;","r_rotate(&(*t)","r_rotate(bitre","r_rotate(t);","return","rh","rh:","rh;","rightbalance(bitre","rightbalance(t);","rl","rl;","statu","switch","switch(l","switch(lr","t","taller))","taller;","true;","void","{","}","};","一.","三.","二.","五.","代码实现","六.","右平衡旋转处理","右旋操作","四.","左平衡旋转处理","左旋操作","插入结点","构建平衡二叉树"],"算法/查找/多路查找树/多路查找树.html":["search","tree)，其每一个结点的孩子数可以多于两个，且每一个结点处可以存储多个元素。","way","一.","二.","多路查找树(b树)","多路查找树(multi","如果我们想要减少计算机进行读取操作的次数，那么我们就需要让每个结点不止保存一个元素值。","定义","引入","由于计算机在进行运算之前需要不断地从外存将数据读入到内存中，如果我们保持一个结点只保存一个元素值，那么整个树的规模就会非常大，那么计算机进行读取操作的次数也会相应地变多。"],"算法/查找/多路查找树/2-3树/2-3树.html":["1.","2","2.","3树","3树中的结点如果包含孩子，那么其孩子个数一定与其结点前缀数相同，否则就不能有孩子。","3树插入一个元素的过程有可能会对该树的其余结构产生连锁反应。","3树插入可分为以下三种情况：","3树是这样的一棵多路查找树：其中的每一个结点都具有两个孩子（我们称它为2结点）或三个孩子（我们称它为3结点）。","3树的删除操作，也分为三种情况：","3树的插入来说，与二叉排序树相同，插入操作一定是发生在叶子结点上。与二叉排序树不同的是，2","3树的结点最大容量，因此就需要将其拆分，然后在原3结点中两个元素以及插入元素这三个元素中选择其一向上移动一层，若上一层也已经是3结点，则继续对其进行拆分，直到遇到某个2结点或根结点被拆分","一.","一个2结点包含一个元素和两个孩子（或没有孩子）；","一个3结点包含一大一小两个元素和三个孩子（或没有孩子）。","主要操作","二.","删除","定义","对于2","对于2结点，其左子树中所有结点都比该2结点中元素小，其右子树中所有结点都比该2结点中元素大。","对于3结点，其左子树中所有结点都比该3结点中较小元素小，其中子树中所有结点都在该3结点中两元素之间，其右子树中所有结点都比该3结点中较大元素大。","当前树是一个满二叉树，此时就需要减少该满二叉树的层数，将一些结点合并为3结点。","所删除的元素位于一个2结点的叶子结点上，由于2结点只包含一个元素，删除之后，该结点将不存在，那么其双亲结点将不满足2结点或3结点的定义，所以应该分以下四种情形来处理：","所删除的元素位于一个3结点的叶子结点上，只需要在该结点处删除该元素即可，不会影响到整棵树的其他结点结构。","所删除的元素位于非叶子的分支结点，此时我们需要用该树中序遍历得到的一个序列来找到被删除结点的直接前驱或直接后继，考虑让它们来补位即可。","插入","注意：","若插入结点为空，插入一个2结点即可","若插入结点是一个2结点的叶子，则将2结点升级为3结点，然后根据插入元素与原2结点中的元素大小关系进行保存。","若插入结点是一个3结点的叶子，由于3结点本身已经是2","被删除结点的双亲是一个3结点，那么将该3结点拆分为两个2结点，然后其中一个2结点与其子树中的一个2结点合并为3结点，需要注意的是要保持树的顺序。","被删除结点的双亲结点也是2结点，且拥有一个3结点的右孩子，这种情况下，将该2结点删除，然后将其双亲结点为根的这棵子树进行左旋即可。如果删除的是右孩子，其左孩子是一个3结点，则进行右旋。","被删除结点的双亲结点是2结点，其另外一个孩子也是2结点，此时找到一个这另外一个孩子的元素的直接后继，让这个2结点变成3结点，然后用这个直接后继的直接后继去替代这个直接后继，以此类推。替换完成之后，就可以按照第1中方法进行旋转了。"],"算法/查找/多路查找树/2-3-4树/2-3-4树.html":["2","3","3树中只有2结点和3结点，而2","3树的扩展，2","3树类似，对于4结点而言，第一子树中所有元素小于4结点中三个元素中最小的元素；第二子树中所有元素在4结点的最小元素和第二小元素之间；第三子树中所有元素在4结点的第二小元素和第三小元素之间；第四子树中所有元素都比4结点最大元素大。","4树","4树就是2","4树添加了一个4结点：包含3个元素和四个孩子（或没有孩子）。其元素顺序与2","一.","定义"],"算法/查找/多路查找树/B树/B树.html":["({n+1\\over","1)n([m/2]−1⩽n⩽m−1)为关键字的个数（或n+1n+1n+1为子树的个数）。","1)n−1)；ai(i=0a_i(i=0a​i​​(i=0，222，...，n)n)n)为指向子树根结点的指针，且指针ai−1a_{i","1\\leqslant","1k−1个元素和kkk个孩子，其中[m/2]⩽k⩽m[m/2]\\leqslant","1k−1个元素，其中[m/2]⩽k⩽m[m/2]\\leqslant","1}a​i−1​​所指子树中所有结点的关键字均小于kik_ik​i​​，n([m/2]−1⩽n⩽m−1)n([m/2]","2})+1","2}]}","3","3树和2","3树是3阶b树，2","4树是4阶b树。","4树都是b树的特例。","b树","b树(b","k\\leqslant","k⩽log[m2](n+12)+1","k⩽log​[​2​​m​​]​​(​2​​n+1​​)+1","log_{[{m\\ov","m","m[m/2]⩽k⩽m。","m[m/2]⩽k⩽m，其中[m/2][m/2][m/2]表示不小于m/2m/2m/2的最小整数。每一个叶子结点nnn都有k−1k","n\\leqslant","tree)是一种平衡的多路查找树，2","一.","一个mmm阶的b树具有如下属性：","三.","二.","在一个典型的b树应用中，要处理的硬盘数据量很大，因此无法一次全部装入内存，所以我们对b树进行调整，使得b树的阶数（或结点的元素）与硬盘存储的页面大小相匹配。比如说一棵b树的阶为1001（即1个结点包含1000个关键字），高度为2，它就可以存储超过10亿个关键字，我们只要让根结点持久地保留在内存中，那么在这棵树上，寻找某一个关键字至多需要两次硬盘的读取即可。","如果根结点不是叶结点，则其至少有两棵子树。","定义","对于nnn个关键字的mmm阶b树，最多需要查找的次数是：","对效率的提升","属性","我们的外存（如硬盘），是将所有的信息分割成相等大小的页面，每次硬盘读写的都是一个或多个完整的页面，对于一个硬盘来说，一页的长度可能是21~214b。","所有分支结点包含下列信息数据(nnn，a0a_0a​0​​，k1k_1k​1​​，a1a_1a​1​​，k2k_2k​2​​，a2a_2a​2​​，...，knk_nk​n​​，ana_na​n​​)，其中：ki(i=1k_i(i=1k​i​​(i=1，222，...，n)n)n)为关键字，且kiki+1(i=1k_ik​i​​k​i+1​​(i=1，222，...，n−1)n","所有叶子结点都位于同一层次","每一个非根的分支结点都有k−1k","结点最大的孩子数目称为b树的阶(order)，即2"],"算法/查找/多路查找树/B+树/B+树.html":["b+树","b+树是应文件系统所需而出的一种b树的变形树。在b+树中，出现在分支节点中的元素会被当做它们在该分支节点位置的中序后继者（叶子结点）中再次列出。另外，每一个叶子结点都会保存一个指向后一叶子结点的指针。","b树也有缺点，在b树结构中，我们需要往返于每个结点之间进行多次查找，也就是说，我们必须得在硬盘的页面之间进行多次访问。如中序遍历时，我们先去第一子树，然后回根结点，然后遍历根结点，到第二子树的入口，然后遍历第二子树，然后回到根结点，又重新遍历，以此类推。","一.","一棵mmm阶的b+树和mmm阶的b树的差异在于：","二.","定义","引入","所有分支结点可以看成是索引，结点中仅含有其子树中的最大（或最小）关键字。","所有的叶子结点包含全部关键字的信息，及指向含这些关键字记录的指针，叶子结点本身依关键字的大小自小而大顺序链接。","有nnn棵子树的结点中包含有nnn个关键字","而b+树就是解决这个问题的方法。"],"算法/查找/散列表查找/散列表查找.html":["一.","二.","定义","散列技术既是一种存储方法，也是一种查找方法，它与线性表、树、图等结构不同的是，散列技术的记录之间不存在什么逻辑关系，它只与关键字有关联，因此散列主要是面向查找的存储结构。","散列技术最适合的求解问题是查找与给定值相等的记录。对于查找来说，简化了比较过程，效率就会大大提高。但散列技术不具备很多常规数据结构的能力。一般只能通过主关键字来进行查找。","散列表(哈希表)查找","散列表查找即通过建立散列表时使用的散列函数以及处理散列冲突的方法来对需要查询的关键字求散列值，然后直接以散列值为地址直接定位到该位置即可，若不存在则说明该记录不存在。","特点"],"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":["/","一.","二.","原理","处理冲突的方法","如果没有冲突，那么散列表查找的性能是非常好的，它的时间复杂度为o(1)o(1)o(1)，但由于冲突的存在，散列表的性能是会受影响的，影响散列表查找性能的主要有以下几个方面：","将散列值作为地址查找值","性能分析","散列函数是否均匀","散列表查找算法","散列表的查找与散列函数和处理散列冲突的方法直接相关，其过程主要如下：","散列表的装填因子：所谓装填因子(α\\alphaα)，其值等于填入表中的记录个数","散列表长度。装填因子越大，那么产生冲突的可能性就越大，所以如果我们降低装填因子，也就是增大散列表的长度，就能让散列查找的时间复杂度往o(1)o(1)o(1)靠近。","根据哈希函数得到散列值","若找到则返回true","若未找到则根据处理散列冲突的方法继续更新散列值，若找到最后还是未找到，则返回fals"],"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":["!=","#defin","%","(*addr","(addr","(h","(h.elem[*addr]","(i","(int","*","*)malloc(m","*addr","*addr)","*elem;","*h)","*h,","+","//","0","0;","1","1)","1.","12","32768","=","==",">count",">elem",">elem[addr]","addr","count;","elem[i]","h","h,","hash(int","hash(key))","hash(key);","hashsiz","hashsize;","i;","inithashtable(hasht","inserthash(hasht","int","key","key)","key,","key;","m","m;","nullkey","nullkey)","nullkey;","ok;","return","searchhash(hasht","sizeof(int));","statu","struct","success","success;","typedef","unsuccess","unsuccess;","void","{","||","}","}hashtable;","一.","三.","二.","五.","代码实现","使用除留余数法","初始化散列表","动态数组","四.","当前元素个数","散列函数","散列表查找","散列表表长","数据结构","构造哈希表"],"算法/排序/排序.html":["#defin","*l,","+","...","//","1.","10000","1];","2.","3.","=",">r[i]",">r[i];",">r[j]",">r[j];","i,","i\\leqsl","int","j)","j)i≠j)，且在排序前的序列中rir_ir​i​​领先于rjr_jr​j​​（即ijiij）。如果排序后rir_ir​i​​仍领先于rjr_jr​j​​，则称所用的排序方法是稳定的；反之，若可能使得排序后的序列中rjr_jr​j​​领先于rir_ir​i​​，则称所用的排序方法是不稳定的。","j\\leqslant","k1k_1k​1​​，k2k_2k​2​​，...，knk_nk​n​​","k_{p_2}\\leqslantk​p​1​​​​⩽k​p​2​​​​⩽","k_{p_n}⩽k​p​n​​​​非递减（或非递增）关系，即使得序列成为一个按关键字有序的序列{","l","length;","maxsiz","n1⩽j⩽n，i≠j)i\\neq","nk​i​​=k​j​​(1⩽i⩽n，1⩽j⩽n1\\leqsl","o(1)o(1)o(1)","o(logn)o(logn)o(logn)~o(n)o(n)o(n)","o(n)o(n)o(n)","o(n2)o(n^2)o(n​2​​)","o(n3/2)o(n^{3/2})o(n​3/2​​)","o(nlogn)o(nlogn)o(nlogn)","o(nlogn)o(nlogn)o(nlogn)~o(n2)o(n^2)o(n​2​​)","r1r_1r​1​​，r2r_2r​2​​，...，rnr_nr​n​​","r[maxsiz","rp1r_{p_1}r​p​1​​​​，rp2r_{p_2}r​p​2​​​​，...，rpnr_{p_n}r​p​n​​​​","struct","swap(sqlist","temp","temp;","typedef","void","{","}","}sqlist;","}，其相应的关键字分别为{","}，这样的操作就称为排序。","}，需确定111，222，...，nnn的一种排列p1p_1p​1​​，p2p_2p​2​​，...，pnp_np​n​​，使其相应的关键字满足kp1⩽kp2⩽k_{p_1}\\leqslant","⩽kpn\\leqslant","一.","三.","不稳定","二.","假设ki=kj(1⩽i⩽nk_i=k_j(1\\leqsl","假设含有nnn个记录的序列为{","内排序与外排序","内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。外排序是由于排序的记录个数太多，不能同时放置在内存中，整个排序过程需要在内外存之间多次交换数据才能进行。","冒泡排序","另外，对于排序而言，最常用的操作是数组两个元素的交换，所以先定义一个交换数据的函数：","堆排序","定义","对于内排序来说，排序算法的性能主要受三个方面的影响：","对于多个关键字的排序，一种解决方法是将这几个关键字按优先顺序排列好，然后组成一个字符串，对其进行字符串比较即可，需要注意的是字符串的位数需要对齐。由于多关键字也可以转换为单关键字进行解决，所以本总结只总结单关键字排序方法。","希尔排序","平均情况","归并排序","快速排序","总结","排序","排序一般是对于顺序表结构而言的，假设后续的所有用于排序的结构都如下：","排序方法","排序用到的结构与函数","排序的稳定性","时间性能","最坏情况","最好情况","概念","用通俗的话说，就是两个关键字相同的记录，在排序前是什么位序关系，排序后也不会改变这个位序关系，这就是稳定的排序方法，而只要有可能改变这个位序关系，那么就是不稳定的。","直接插入排序","稳定","稳定性","第一个元素用作哨兵或临时变量","简单选择排序","算法的复杂性","辅助空间"],"算法/排序/冒泡排序/冒泡排序.html":["(n","1)\\over","1n−1次比较，没有数据交换，时间复杂度为o(n)o(n)o(n)。最坏的情况是待排序表是逆序的情况，此时需要比较n×(n−1)2n\\tim","2​2​​n×(n−1)​​次，并作等数量级的记录移动。因此，总的时间复杂度为o(n2)o(n^2)o(n​2​​)。","sort)是一种交换排序，它的基本思想是：两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。","一.","二.","冒泡排序","冒泡排序(bubbl","复杂度分析","定义","对于优化后的冒泡排序法，最好的情况是要排序的表本身就是有序的，那么只需要n−1n"],"算法/排序/冒泡排序/最简排序法/最简排序法.html":["(n","1)\\over","2​2​​n×(n−1)​​次，也就是说，对于任何数组，它光是进行比较的时间消耗就是o(n2)o(n^2)o(n​2​​)，还得加上那些需要交换的消耗。","介绍冒泡排序之前，先介绍一种最简单的排序算法，其基本思想如下：","以此类推，最后就能将所有元素按从小到大的顺序排好","可想而知，这个算法不论什么情况都比较了n×(n−1)2n\\time","最简排序法","然后让变量i站在第二个元素的位置，变量j从第二个元素开始往后遍历整个数组，如上，可以将整个数组第二小的元素交换到第二个位置","首先让变量i在第一个元素的位置，然后用变量j遍历整个数组，遇到比i位置元素小的就进行交换，最终可以把整个数组最小的元素放在数组第一个位置"],"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":["(i","(j","(l","*l)","+","1.","1;","=",">",">r[i]",">r[j])","bubblesort0(sqlist","i++)","i,","int","j","j);","j++)","j;","l","length;","swap(l,","void","{","}","代码实现"],"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":["(n","1)\\over","1的元素值，将小的替换到前面，让大的替换到后面","2​2​​n×(n−1)​​次，所以总体来说效率提升并不大。","但是对于比较次数来说，还是一样的n×(n−1)2n\\time","冒泡排序算法","每次迭代都在比较完i和i+1的元素值后停止","然后让j从数组最后一个元素开始往前遍历，每次比较j和j","相比于前面的最简排序法来说，冒泡排序从它的正向比较变成了逆向比较，其基本思路如下：","该算法相对于最简排序法来说，每次都将部分小的元素替换到了前面，其整体有序程度是在逐渐增加的，也就是说这是一个完全熵减过程，而并不会向最简排序那样有时还会让比较小的元素跑到后面去。也就是说，实际上的交换次数比最简排序少了一些。","首先让i站在第一个元素的位置，表示现在的任务是找到所有元素中最小的元素放在i的位置"],"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":["(i","(j","(l",")","*l)","+","1);","1.","1;","1])","=",">",">=",">length",">r[j",">r[j]","bubblesort(sqlist","i++)","i,","i;","int","j","j,","j;","l","length;","swap(l,","void","{","}","代码实现"],"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":["(n","1)\\over","2​2​​n×(n−1)​​，对于最简排序来说，每次交换之后可能会把本来相对有序的元素改变，所以这么多次的比较对最简排序来说还是相对有必要的，但是冒泡排序并不会改变原本相对有序的元素关系，也就是说，只要比较过一遍，如果两个元素相对有序，那就不需要再进行比较了，也就是说在原本的冒泡排序中，实际上有很多比较操作都是浪费的。","不论是在冒泡排序还是最简排序中，其比较的次数每次都是n×(n−1)2n\\time","其解决方法就是设置一个标记变量来实现。","冒泡排序优化","想法是：只要有一次迭代没有发生元素交换，那么说明数组已经排序完成，不需要再进行后续的比较了"],"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":["&&","(i","(j","(l",")","*l)","+","1);","1.","1;","1])","=",">",">=",">length",">r[j",">r[j]","bubblesort2(sqlist","false;","flag","flag;","i++)","i,","i;","int","j","j,","j;","l","length","statu","swap(l,","true;","void","{","}","代码实现"],"算法/排序/简单选择排序/简单选择排序.html":["(n","1)\\over","1n−1次。因此，总的时间复杂度为o(n2)o(n^2)o(n​2​​)。","2​2​​n×(n−1)​​次。对于交换次数而言，当最好的时候，交换为0次，最差的时候，即逆序时，交换次数为n−1n","i+1n−i+1个记录中选取关键字最小的记录作为有序序列的第iii个记录。","一.","二.","从简单选择排序的过程来看，它最大的特点就是交换移动数据的次数相当少，这样也就节约了相应的时间。","复杂度分析","定义","对于比较的次数，不论什么情况都是n×(n−1)2n\\time","简单来说，就是每次在整个数组（相对）中找到最小的那个元素，然后交换到前面去。","简单选择排序","选择排序的基本思想就是每一次在n−i+1n"],"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":["(1\\leqslant","(1⩽i⩽n)i\\","(1⩽i⩽n)个记录交换。","i+1n−i+1个记录中选出关键字最小的记录，并和第i","i\\leqsl","in−i次关键字的比较，从n−i+1n","n)i","select","sort)就是通过n−in","其基本思路是：","然后让i指向第二个元素位置，重复以上步骤即可。","简单选择排序法(simpl","简单选择排序算法","让i指向第一个元素位置，然后用j遍历从i开始的所有元素，选出其中最小的元素，让其与i位置元素交换。"],"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":["!=","(i","(j","(l","*l)","+","1.","1;","=",">",">r[j])",">r[min]","i++)","i,","i;","int","j","j++)","j,","j;","l","length;","min","min)","min);","min;","selectsort(sqlist","swap(l,","void","{","}","代码实现"],"算法/排序/直接插入排序/直接插入排序.html":["1)\\over","1n−1次，交换了0次，时间复杂度为o(n)o(n)o(n)；","2​2​​(n+2)(n−1)​​次，移动次数是：(n+4)(n−1)2(n+4)(n","2​2​​(n+4)(n−1)​​次。","insert","sort)的基本操作是将一个记录插入到已经排好序的有序表中，从而得到一个新的、记录新增1的有序表。","一.","二.","复杂度分析","定义","对于平均的情况，直接插入排序法的时间复杂度为o(n2)o(n^2)o(n​2​​)。","对于最坏的情况，也就是要排序的表是逆序的情况，此时需要比较的次数是：(n+2)(n−1)2(n+2)(n","对于最好的情况，也就是要排序的表本身就是有序的，则一共比较了n−1n","直接插入排序","直接插入排序(straight"],"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":["然后从第一个元素开始，将第一个与第二个元素进行比较","然后比较数组的第二个与第三个元素，进行与上述操作相似的操作，直到比较完并交换完最后一个元素和倒数第二个元素。","直接插入排序算法","直接插入排序算法的基本思想是：设置一个辅助空间，然后借助这个辅助空间来进行移位。","若其相对顺序不是要求的顺序，则交换哨兵与第二个元素，然后逐个将第二个元素之前的元素往后移（即依次与哨兵交换），直到遇到比要交换的元素更小的元素或者全部元素都已经后移为止，然后再次交换哨兵与该元素交换即可","首先将数组的哨兵位置设置为一个标志，表示哨兵"],"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":["(i","(j","(l",")","*l)","+","1.","1;","1]","1])","2;","=",">",">r[0]",">r[0];",">r[i]",">r[i];",">r[j",">r[j]",">r[j];","i++)","i,","insertsort(sqlist","int","j","j;","l","length;","r[i","void","{","}","代码实现"],"算法/排序/希尔排序/希尔排序.html":["(0\\leqslant","(0⩽k⩽t⩽[log2(n+1)])dlta[k]=2^{t","(0⩽k⩽t⩽[log​2​​(n+1)])时，可以获得不错的效率，其时间复杂度为o(n3/2)o(n^{3/2})o(n​3/2​​)。","(n+1)])dlta[k]=2​t−k+1​​−1","1\\","[log_2","k+1}","k\\leqslant","sort)是先将序列变成基本有序的序列，即小的关键字基本在前面，大的基本在后面，不大不小的基本在中间。","t\\leqslant","一.","二.","其基本方法是将相距某个“增量”的记录组成一个子序列，这样才能保证在子序列内分别进行直接插入排序后得到的结果是基本有序而不是局部有序。","原理","复杂度分析","希尔排序","希尔排序(shell","希尔排序的时间复杂度与“增量”的选取息息相关，大量研究表明当增量序列为dlta[k]=2t−k+1−1"],"算法/排序/希尔排序/希尔排序算法/希尔排序算法.html":["希尔排序算法"],"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":["&&","(i","(j","(l","*l)","+","/","0","0;","1);","1.","1;","3","=",">",">length;",">r[0]",">r[0];",">r[i]",">r[i];",">r[j",">r[j];","i++)","i,","increment","increment)","increment;","increment]","increment])","int","j","j,","k","l","length;","r[i","r[j];","shellsort(sqlist","void","while(incr","{","}","代码实现"],"算法/排序/堆排序/堆排序.html":["n)o(nlogn)。","一.","二.","堆排序","堆排序对原始记录的排序状态并不敏感，因此它无论是最好、最坏和平均时间复杂度均为o(nlogn)o(nlog","堆排序就是利用堆进行排序的方法。","复杂度分析","定义"],"算法/排序/堆排序/堆排序算法/堆排序算法.html":["1n−1个序列重新构造成一个堆，这样就会得到nnn个元素中的次大值。如此反复执行，便能得到一个有序序列了。","其面临的主要问题有两个：","堆排序的基本思想是（以大顶堆为例）：将堆排序的序列构造成一个大顶堆。此时，整个序列的最大值就是堆顶的根结点。将它移走（其实就是将其与堆数组的末尾元素交换，此时末尾元素就是最大值），然后将剩余的n−1n","堆排序算法","如何在输出堆顶元素后，调整剩余元素称为一个新的堆","如何由一个无序序列构建成一个堆"],"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":["(i","(j","(temp",")","*","*l)","*l,","+","++j;","/","0;","1);","1,","1.","1;","1])","2","2;","=",">",">=",">length",">length);",">length;",">r[j])",">r[j];",">r[s]",">r[s];","break;","heapadjust(l,","heapadjust(sqlist","heapsort(sqlist","i);","i,","i;","int","j","j;","l","m)","r[j","r[j]","s","s,","s;","swap(l,","temp","temp,","temp;","void","{","}","一.","三.","二.","代码实现","堆建立","堆排序","堆调整"],"算法/排序/归并排序/归并排序.html":["n)o(nlogn)。","sort)就是利用归并的思想实现的排序方法。","一.","二.","另外，归并排序的空间复杂度为o(n+logn)o(n+logn)o(n+logn).","复杂度分析","定义","归并排序","归并排序(merg","归并排序每次需要将记录扫描一遍，耗费o(n)o(n)o(n)时间，一共需要进行排序的次数是[log2n][log_2n][log​2​​n]次，因此总的时间复杂度是o(nlogn)o(nlog","所谓归并，就是先从单个元素进行比较，然后将进行比较的两个元素组成一组，与另外一组元素进行比较，然后又将两组元素组成一组元素，不断像这样进行比较，最终就能得到一个有序"],"算法/排序/归并排序/归并排序算法/归并排序算法.html":["归并排序的原理是：假设初始序列含有nnn个记录，则可以看成是nnn个有序的子序列，每个子序列的长度为1，然后两两归并，得到[n/2][n/2][n/2]个长度为2或1的有序子序列（其中[n/2][n/2][n/2]表示不小于n/2n/2n/2的最小整数；再两两归并，……，如此重复，直至得到一个长度为nnn的有序序列位置，这种排序方法称为2路归并排序。","归并排序算法"],"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":["(j","(s","*l)","+","/","1,","1.","1];","2;","=","==",">length);",">r,","i,","i;","int","j,","k","k,","l","l;","m","m);","m,","m;","merge(int","merge(tr2,","mergesort(sqlist","msort(int","msort(l","msort(sr,","n)","s,","sr[],","sr[s];","t)","t);","tr1,","tr1[],","tr1[s]","tr2,","tr2[maxsiz","tr[],","void","{","}","一.","三.","二.","代码实现","归并函数","归并排序","递归实现"],"算法/排序/归并排序/非递归归并排序/非递归归并排序.html":["归并排序是一种比较占用内存，但却效率高且稳定的算法。","总的来说，使用归并排序时，尽量考虑非递归方法。","由于归并排序使用了递归，它就会造成时间和空间上的性能损耗，如果通过非递归方法来实现归并排序的话，性能上还会进一步提高。","非递归归并排序"],"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":["(i","(int","(k","*","*)malloc(l","*l)","*tr","1.","1;","2","=",">length",">length);",">r,","int","j;","k","k,","k;","l","length)","mergepass(int","mergepass(l","mergepass(tr,","mergesort2(sqlist","n)","s,","sizeof(int));","sr[],","tr,","tr[],","void","{","}","一.","二.","代码实现","归并排序","归并操作"],"算法/排序/快速排序/快速排序.html":["n)o(logn)。","n)o(nlogn)，其空间复杂度为o(logn)o(log","一.","二.","在平均情况下，快速排序的时间复杂度为o(nlogn)o(nlog","复杂度分析","希尔排序相当于直接插入排序的升级，它们同属于插入排序类；堆排序相当于简单选择排序的升级，它们同属于选择排序类。而快速排序其实就是冒泡排序的升级，它们都属于交换排序类。","引入","快速排序","而快速排序的实现，增大了记录的比较和移动的距离，将关键字较大的记录从前面直接移动到后面，关键字较小的记录从后面直接移动到前面，从而减少了比较次数和移动交换次数。"],"算法/排序/快速排序/快速排序算法/快速排序算法.html":["sort)的基本思想是：通过一趟排序将待排记录分割成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，则可分别对这两部分记录继续进行排序，已达到整个序列有序的目的。","快速排序(quick","快速排序算法"],"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":["(low","*l)","*l,","1,","1.",";","=",">=",">length);",">r[low];","high","high)","high);","int","l","low,","partition(sqlist","pivot;","pivotkey","pivotkey)","pivotkey;","qsort(l,","qsort(sqlist","quicksort(sqlist","r[high]","r[low]","swap(l,","void","{","}","一.","三.","二.","代码实现","对子序列快排","快速排序","移动元素到枢轴"],"算法/排序/快速排序/快速排序优化/快速排序优化.html":["一.","三.","二.","优化不必要的交换","优化小数组时的排序方案","优化选取枢轴","优化递归操作","四.","快速排序优化"],"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":["#defin","((high","(high","(l","(low","*l,","+","/","1);","1,","1.","2;","7",";","=",">",">=",">r[0]",">r[0];",">r[high])",">r[high];",">r[low]",">r[low])",">r[low];",">r[m]","high","high)","high);","high,","insertsort(l);","int","l","low","low)","low);","low,","low;","m","m);","m,","max_length_insert_sort","max_length_insert_sort)","partition(l,","partition(sqlist","pivot","pivot;","pivotkey","pivotkey)","pivotkey;","qsort1(l,","qsort1(sqlist","qsort2(sqlist","r[high]","r[low]","return","swap(l,","void","{","}","一.","三.","二.","代码实现","优化不必要的交换","优化小数组时的排序方案","优化选取枢轴","优化递归操作","四."],"算法/图/图.html":["图"],"算法/图/遍历/遍历.html":["dfs与bfs的对比","graph)。","一.","三.","不过如果图顶点和边非常多，不能在短时间内遍历完成，遍历的目的是为了寻找合适的顶点，那么选择哪种遍历就要仔细斟酌了。","二.","从图中某一顶点出发访遍途中其余顶点，且使每一个顶点仅被访问一次，这一过程就叫做图的遍历(travers","图的特点是一个顶点可能有多条边，所以可能存在的一种情况是沿着某条路径搜索后，有回到原顶点，而有些顶点还没有遍历到。","定义","广度优先更适合在不断扩大遍历范围时找到相对最优解的情况","所以为了避免这种情况，最好的办法是设置一个访问数组，元素个数与顶点个数相同，在没有被访问的时候将元素设置为0，访问之后将元素设置为1","深度优先更适合目标比较明确，以找到目标为主要目的的情况","特点","遍历","首先它们在时间复杂度上是一样的，不同之处仅仅在于对顶点访问的顺序不同。可见两者在全图遍历上是没有优劣之分的，只是是不同的情况选择不同的算法。"],"算法/图/遍历/深度优先遍历/深度优先遍历.html":["first","g上有三条通道，发现b和d已经遍历过了，所以选择h","search)，也有称为深度优先搜索，简称为df","一.","三.","二.","到了f之后，发现最右边是a，而与a相邻的所有顶点已经遍历完了，此时选择从右数的第二条通道，到了g顶点","原理","定义","对于上图的深度优先遍历过程如下：","所以a的下一个顶点是b，然后按照同样的原则先后遍历c、d、e、f","按照上述过程一直回退到d，发现还有一个i顶点没有被遍历，标记完i之后，再继续回退","按照某个原则一直往前走：在没有碰到重复顶点的情况下，始终向右手边走","深度优先遍历","深度优先遍历(depth","深度优先遍历其实就是一个递归的过程，它从图中某个顶点v出发，访问此顶点，然后从v的未被访问的邻接点出发深度优先遍历图，直至图中所有和v有路径相同的顶点都被访问到。","然后已然没有未遍历的顶点，于是退回到f","直到退回到a，此时所有顶点已经遍历完成","而到了h之后，发现所有可以遍历的顶点都已经遍历过了，于是选择回退g","通过此原理可以对连通图进行完全遍历，如果是非连通图，则对它的连通分量分别进行深度优先遍历，即在前一个顶点进行一次深度优先遍历后，若图中尚有顶点未被访问，则另选图中一个未曾被访问的顶点作起始点，重复上述过程，直到图中所有顶点都被访问到为止。","遍历过程","首先确定起点为a，每走一个点就做上标记"],"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":["\",","#defin","*p;","0;","1.","100","=",">adjlist[i].data);",">adjlist[i].firstedge;",">adjvex);",">adjvex])",">next;","bool","dfs(gl,","dfs(graphadjlist","dfs(mgraph","dfstraverse(graphadjlist","edgenod","false;","for(i","for(j","g,","g.vexs[i]);","gl","gl)","gl,","i)","i);","i++)","i;","if(!visited[i])","if(!visited[p","int","j","j;","maxvex","numvertexes;","p","printf(\"%c","true;","visited[i]","visited[maxvex];","void","while(p)","{","}","一.","二.","代码实现","邻接矩阵的df","邻接表的df"],"算法/图/遍历/广度优先遍历/广度优先遍历.html":["first","search)，又称为广度优先搜索，简称bfs。","一.","与a直接相连的b和f放在第二层","与b、f直接相连的c、i、g、e放在第三层","二.","以此类推……","定义","将顶点a放置在最顶层","广度优先遍历","广度优先遍历(breadth","按照层序排好的图如下所示：","最后按照从顶向下的顺序进行遍历，即：a、b、f、c、i、g、e、d、h","选定一个顶点，假定为a，然后按照以下方法将该图按层序排好：","遍历过程","首先给出一个图如下："],"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":["\",","&i);","*p;","0;","1.","=",">adjlist[i].data);",">adjlist[i].firstedge;",">adjlist[p",">adjvex);",">adjvex]",">adjvex])",">adjvex].data);",">next;","bfstraverse(graphadjlist","bfstraverse(mgraph","dequeue(&q,","edgenod","enqueue(&q,","false;","for(i","g)","gl","gl)","i);","i++)","i,","i;","if(!visited[i])","if(!visited[p","initqueue(&q);","int","j;","numvertexes;","p","printf(\"%c","q;","queue","true;","visited[i]","visited[p","void","while(!queueempty(q))","while(p)","{","}","一.","二.","代码实现","邻接矩阵的bf","邻接表的bf"],"算法/图/最小生成树/最小生成树.html":["1条边。","cost","span","tree)。","一.","二.","其中的顶点代表九个村子，现在要将九个村子连通起来，其中的边及权表示村子之间的距离，而没有边及权则表示那两个村子因为有高山或湖泊无法连通，那么如何让九个村子用最少的路程能够连通起来呢？","在图的定义和术语中，曾经提到过，一个连通图的生成树是一个极小的连通子图，同含有图中全部的顶点，但只有足以构成一棵树的n","如果有这样一个网图：","定义","引入","找连通图的最小生成树，经典的有两种算法，普里姆算法和克鲁斯卡尔算法。","最小生成树","构造连通图的最小代价生成树称为最小生成树(minimum"],"算法/图/最小生成树/普里姆算法/普里姆算法.html":["一.","一个已知的网图如下：","二.","普里姆(prim)算法","案例","此时ab已连通，所以再看与两个顶点a和b相连的所有边：bc、bi、bg和af，选择权值更小的af","此时与它相关的两条边分别是ab和af，选择权值更小的ab","此时端点为b和f，则看与b和f相连的所有边，以此类推，直到所有顶点都连通时结束。","解决方法","首先找到任意一个顶点，如a。"],"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":["0;","1.","1;","=","adjvex[0]","adjvex[maxvex];","for(i","g)","i,","int","j,","k;","lowcost[0]","lowcost[maxvex];","min,","minispantree_prim(mgraph","void","{","代码实现"],"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":["一.","一个已知的网图如下：","三.","下一个权值最小的边是17，可是此时gf已经间接连通了，所以需要跳过再找下一个","二.","于是选择权值为19的gh，未连通，所以将其连通，此时所有顶点已连通","克鲁斯卡尔(kruskal)算法","再逐步将ab、af、bi、bg、hd相连","定义","实现这种方法边集数组是最好的选择。","普里姆算法是从任意一个点开始，逐渐完善这个生成树，而克鲁斯卡尔算法是先选出权值最低的边，然后再找出第二小的边，并判断可选还是不可选。","案例","然后找到第二小的边ic，也并未相连，所以将其相连","解决方法","首先找到权值最小的边he，其两个顶点都还未被连通，所以将其相连"],"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":["0)","0;","1.","=","edg","edges[maxedge];","f","f;","for(i","g)","i,","int","m;","minispantree_kruskal(mgraph","n,","parent[f];","parent[maxvex];","return","void","{","}","代码实现"],"算法/图/最短路径/最短路径.html":["一.","二.","从时间复杂的的角度来说：","定义","对于图来说，从一个顶点到另一个顶点一般不止一条路径，所以就有需求选出两个顶点之间最短的路径。","对于求顶点之间的最短路径的算法有迪杰斯特拉算法和弗洛伊德算法，二者在适用条件上有些区别。","对于网图来说，最短路径，是指两顶点之间经过的边上权值之和最少的路径，并且我们称路径上的第一个顶点是源点，最后一个顶点是终点。","对于非网图来说，所谓的最短路径就是指两定点之间经过的边数最少的路径，显然研究非网图的最短路径意义并不大；","对比","弗洛伊德算法没有只找到某两个点之间的最短路径，它直接查找出所有点之间的最短路径，其时间复杂度为o(n3)o(n^3)o(n​3​​)","所以从上面可以看出，如果只想找到某两个点之间的最短路径，且对图的最短路径查找频率并不频繁的情况下，选择迪杰斯特拉算法更适合；如果想找到所有点之间的最短路径，并且对图的最短路径查找频率很频繁的情况下，选择弗洛伊德算法明显更适合。","最短路径","迪杰斯特拉算法找到某两个点之间的最短路径的时间复杂度为o(n2)o(n^2)o(n​2​​)，但找到全部点之间的最短路径的时间复杂度为o(n3)o(n^3)o(n​3​​)"],"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":["v1","v2","v3","v4","v6","v7","v8","一.","三.","二.","定义","最后在v6处，选择去第五层最短的路径，即v6","案例","然后在v1处，选择去第三层最短的路径，即v1","然后在v4处，选择去第四层最短的路径，即v4","现有下面这个网图，求从v0到v8的最短路径","解决方法","迪杰斯特拉(dijkstra)算法","迪杰斯特拉(dijkstra)算法是一个按路径长度递增的次序产生最短路径的算法。","首先在v0处，选择去第二层最短的路径，即v0"],"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":["#defin","*d)","*p,","//","0;","1.","20","65535","=","arc[maxvex][maxvex];","final[maxvex];","for(v","g,","infin","int","k,","maxedg","maxvex","min;","numedges;","numvertexes,","patharc","patharc[maxvex];","shortestpath_dijkstra(mgraph","shortpatht","shortpathtable[maxvex];","struct","typedef","v","v,","v0,","vexs[maxvex];","void","w,","{","}mgraph;","代码实现","数据结构","算法"],"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":["&0&2&\\infti","&1&7&\\infti","&3&0&\\infti","&3&6&0&2&7&\\infti","&3&\\infti","&5&1&2&0&3&6&9&\\infti","&5&\\infti","&7&4&0","&7&\\infti","&9&5&2&0&4","&\\infti","0&1&1&1&1&1&1&1&1\\\\","0&1&2&2&2&2&2&2&2\\\\","0&1&2&3&4&5&6&7&8\\\\","0&1&4&7&5&8&10&12&16\\\\","0&1&5&\\infti","1&0&3&6&4&7&9&11&15\\\\","1&0&3&7&5&\\infti","1&1&2&4&4&4&4&4&4\\\\","10&9&6&3&5&7&0&2&6\\\\","12&11&8&5&7&5&2&0&4\\\\","16&15&12&9&11&9&6&4&0\\\\","1}=\\left[","1}[v0][v2]d​−1​​[v0][v2]为最新路径4，更新p−1[v0][v2]p^{","1}[v0][v2]p​−1​​[v0][v2]为当前中转点v1的下标1","1}d​−1​​为ddd，表示以行标为起点，以列标为终点的所有最短路径值；更新p−1p^{","1}d​−1​​和p−1p^{","1}d​−1​​，用来存储每条边的权值，其实就是邻接矩阵；另一个叫做p−1p^{","1}p​−1​​两个矩阵：","1}p​−1​​到ppp，表示以行标为起点，以列标为终点的最短路径。","1}p​−1​​，用来存储从对应顶点的最短路径的前驱矩阵，以行标为起点，以列标为终点，先将所有从起点到终点的最短路径设置为终点的值，也就是说到每个顶点的最短路径都先设置为不经过中转直接到该终点。","2&2&2&3&4&5&3&3&3\\\\","3&3&3&3&3&7&6&7&7\\\\","4&3&0&3&1&4&6&8&12\\\\","4&4&4&3&4&4&6&6&6\\\\","4&4&4&4&4&5&7&7&7\\\\","5&3&0&\\infti","5&4&1&2&0&3&5&7&11\\\\","6&6&6&6&6&5&6&7&8\\\\","7&6&3&0&2&5&3&5&9\\\\","7&7&7&7&7&7&7&7&8\\\\","8&7&4&5&3&0&7&5&9\\\\","\\\\","\\begin{matrix}","\\end{matrix}","\\infti","\\right]","d=[01475810121610364791115430314681276302535954120357118745307591096357026121185752041615129119640]","d=\\left[","d=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​1​4​7​5​8​10​12​16​​​​1​0​3​6​4​7​9​11​15​​​4​3​0​3​1​4​6​8​12​​​7​6​3​0​2​5​3​5​9​​​5​4​1​2​0​3​5​7​11​​​8​7​4​5​3​0​7​5​9​​​10​9​6​3​5​7​0​2​6​​​12​11​8​5​7​5​2​0​4​​​16​15​12​9​11​9​6​4​0​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","d^{","d​−1​​=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​1​5​∞​∞​∞​∞​∞​∞​​​​1​0​3​7​5​∞​∞​∞​∞​​​5​3​0​∞​1​7​∞​∞​∞​​​∞​7​∞​0​2​∞​3​∞​∞​​​∞​5​1​2​0​3​6​9​∞​​​∞​∞​7​∞​3​0​0​5​∞​​​∞​∞​∞​3​6​∞​2​2​7​​​∞​∞​∞​∞​9​5​7​0​4​​​∞​∞​∞​∞​∞​∞​∞​4​0​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","d−1=[015∞∞∞∞∞∞10375∞∞∞∞530∞17∞∞∞∞7∞02∞3∞∞∞5120369∞∞∞7∞30∞5∞∞∞∞36027∞∞∞∞∞95204∞∞∞∞∞∞740]","p=[011111111012222222112444444444344666222345333444445777333337677666665678777777778]","p=\\left[","p=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​0​1​4​2​4​3​6​7​​​​1​1​1​4​2​4​3​6​7​​​1​2​2​4​2​4​3​6​7​​​1​2​4​3​3​4​3​6​7​​​1​2​4​4​4​4​3​6​7​​​1​2​4​4​5​5​7​5​7​​​1​2​4​6​3​7​6​6​7​​​1​2​4​6​3​7​7​7​7​​​1​2​4​6​3​7​7​8​8​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","p^{","p​−1​​=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​0​0​0​0​0​0​0​​​​1​1​1​1​1​1​1​1​​​2​2​2​2​2​2​2​2​​​3​3​3​3​3​3​3​3​​​4​4​4​4​4​4​4​4​​​5​5​5​5​5​5​5​5​​​6​6​6​6​6​6​6​6​​​7​7​7​7​7​7​7​7​​​8​8​8​8​8​8​8​8​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","p−1=[012345678012345678012345678012345678012345678012345678012345678012345678]","v0","v0、v0","v1","v1不用说，都是没有变化的，而v0","v1；","v2","v2更短，所以更新d−1[v0][v2]d^{","v2比v0","v2；","v3","v3；","v4","v4；","v6","v6；","v7","v7；","v8的路径，所以我们先看p[v0][v8]p[v0][v8]p[v0][v8]，其值为1，所以第一个需要经过的中转点为v1，此时路径为v0","v8；","一.","三.","二.","从v[0][0]开始一直到v[8][8]为止，以v1为中转点对矩阵进行遍历","以相同方法遍历整个矩阵，将所有路径减小的边进行修改","其中根据矩阵d可以直接找出从某点到某点的最短距离","定义","弗洛伊德(floyd)算法","我们要查找从v0","根据矩阵p可以找出从某点到某点的最短路径","案例","此时已得到该最短路径，可以看到该路径与用迪杰斯特拉算法得到的相同。","然后从头开始每个点遍历，首先以v0为中转点，计算是否有最短路径的变化，其结果为否","然后以v1为中转点，计算是否有最短路径的变化","然后以v2为中转点，计算相比于以更新后的两个矩阵是否又有变化，如果有就同上进行修改","然后再遍历整个图，更新d−1d^{","然后我们让这个查找到的值取代列号，即查看p[v1][v8]p[v1][v8]p[v1][v8]，其值为2，所以此时路径为v0","然后查看p[v2][v8]p[v2][v8]p[v2][v8]，得到4，此时路径为v0","然后查看p[v3][v8]p[v3][v8]p[v3][v8]，得到6，此时路径为v0","然后查看p[v4][v8]p[v4][v8]p[v4][v8]，得到3，此时路径为v0","然后查看p[v6][v8]p[v6][v8]p[v6][v8]，得到7，此时路径为v0","然后查看p[v7][v8]p[v7][v8]p[v7][v8]，得到8，此时路径为v0","现有一个网图如下，求v0到v8的最短路径。","解决方法","重复上述操作，直到以v8为中转点将矩阵遍历完，得到以下两个新矩阵：","首先假设有两个矩阵，表示每个点之间的边。其中一个叫做d−1d^{","首先建立d−1d^{"],"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":["%d\",","%d\\n\",","(*d)[k][w])","(*d)[k][w];","(*d)[v][k]","(*d)[v][w]","(*p)[v][k];","(*p)[v][w]","*d)","*p,","+","0;","1.","=",">","for(v","g,","int","k","k);","k;","p[k][w];","patharc","patharc[maxvex][maxvex];","printf(\"","printf(\"\\n\");","printf(\"各顶点间最短路径如下:\\n\");","shortestpath_floyd(mgraph","shortpatht","shortpathtable[maxvex][maxvex];","typedef","v","v,","void","w);","w,","{","}","一.","二.","代码实现","据表查最短路径","算法代码"],"算法/图/拓扑排序/拓扑排序.html":["aov网中的弧表示活动之间存在的某种制约关系。比如演职人员确定了，场地也联系好了，才可以进行拍摄。另外就是aov网中不能存在回路。","e)e)e)是一个具有nnn个顶点的有向图，vvv中的顶点序列v1v_1v​1​​，v2v_2v​2​​，...，vnv_nv​n​​，满足若从顶点viv_iv​i​​到vjv_jv​j​​有一条路径，则在顶点序列中顶点viv_iv​i​​必在顶点vjv_jv​j​​之前。则我们称这样的顶点序列为一个拓扑序列","network）。","vertex","一.","二.","在一个表示工程的有向图中，用顶点表示活动，用弧表示活动之间的优先关系，这样的有向图为顶点表示活动的网，我们称为aov网（act","在这些活动之间，通常会受到一定的条件约束，如其中某些活动必须在另一些活动完成之后才能开始。就像电影制作不可能在人员到位进驻场地时，导演还没有找到，也不可能在拍摄过程中，场地都没有。","定义","对于这样一种过程，如施工过程、生产流程、软件开发、教学安排等都可以分为若干个“活动”的子工程。","引入","拓扑排序","构造时会有两个结果，如果此网的全部顶点都被输出，则说明它是不存在环的aov网；如果输出顶点数少了，则说明这个网存在环，不是aov网。","注：如果两个点之间没有路径，那么其没有先后顺序要求","而拓扑排序，就是对一个有向图构造拓扑序列的过程。","设g=(vg=(vg=(v,","这样的工程，一定是无环的有向图。"],"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html":["一.","基本思路","对aov网进行拓扑排序的基本思路是：从aov网中选择一个入度为0的顶点输出，然后删除此顶点，并删除以此顶点为尾的弧，继续重复此步骤，直到输出全部顶点或者aov网中不存在入度为0的顶点为止。","拓扑排序算法","首先我们需要确定一下这个图需要使用的数据结构，由于在拓扑排序的过程中，需要删除顶点，显然使用邻接表更加方便；然后我们需要将这个序列保存下来，所以我们还需要一个栈用来存储序列。由于在算法过程中始终要查找入度为0的顶点，我们在原来顶点表结点结构中，增加一个入度域in。"],"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":["!=","\",","(int","*","*)malloc(gl","*e;","*firstedge;","*graphadjlist;","*next;","*stack;","//","0)","0;","1.","=","==",">",">adjlist[gettop].data);",">adjlist[gettop].firstedge;",">adjlist[i].in)",">adjlist[k].in))",">adjvex;",">next)",">numvertex","];","adjlist","adjlist;","adjlist[maxvex];","adjvex;","count","count++;","data;","e","e;","edgenod","error;","for(","for(i","gettop","gettop;","gl","gl)","i++)","i,","i;","if(!(","if(0","if(count","in;","int","k","k,","k;","numedges;","numvertexes)","numvertexes,","numvertexes;","ok;","printf(\"%d","return","sizeof(int));","stack","stack[++top]","stack[top","statu","struct","top","topologicalsort(graphadjlist","typedef","vertexnod","weight;","while(top","{","}","}edgenode;","}graphadjlist,","}vertexnode,","代码实现","数据结构","算法"],"算法/图/关键路径/关键路径.html":["aoe网中没有入边的顶点称为始点或源点；没有出边的顶点称为终点或汇点。正常情况下，aoe网只有一个源点和汇点。","aoe网的特点有：在某定点所代表的事件发生后，从该定点出发的各活动才能开始。只有在进入顶点的各活动都已经结束，该顶点所代表的事件才能发生。","edg","network)。","一.","二.","关键路径","在一个表示工程的带权有向图中，用顶点表示事件，用有向边表示活动，用边上的权值表示活动的持续时间，这种有向图的边表示活动的网，我们称之为aoe网(act","在这个问题里面，需要注意的是对于造一辆汽车来说，造一个发动机是决定最短时间的关键过程，因此，如果我们要对一个流程图获得最短时间，就必须要分析它们的拓扑关系，并且找到当中最关键的流程，这个流程的时间就是最短时间。","定义","引入","很明显，造一个发动机需要的时间最长，在造发动机的这段时间里，已经造好了汽车需要的四个轮子，车底盘，外壳和其他零部件，所以最终花的时间就是：3+0.5+2=5.5天。","拓扑排序主要是为解决一个工程能否顺序进行的问题，但有时我们还需要解决工程完成需要的最短时间问题。比如说，造一辆汽车，我们需要先造各种各样的零件、部件，最终再组装成车。","而计算关键路径的算法就是关键路径算法。","路径上各个活动所持续的时间之和称为路径长度，从源点到汇点具有最大长度的路径叫做关键路径，在关键路径上的活动叫关键活动","这些零部件基本都是在流水线上同时生产的，加入造一个轮子需要0.5天，造一个发动机需要3天，造一个车底盘需要2天，造一个外壳需要2天，造其他零部件需要2天，全部零部件集中到一处需要0.5天，组装成车需要2天，那么，在汽车厂造一辆车，最短需要多少时间呢？"],"算法/图/关键路径/关键路径算法/关键路径算法.html":["edge)：即弧aka_ka​k​​的最早发生时间","edge)：即弧aka_ka​k​​的最晚发生时间，也就是不推迟工期的最晚开工时间","time","vertex)：即顶点vkv_kv​k​​的最早发生时间","vertex)：即顶点vkv_kv​k​​的最晚发生时间，也就是每个顶点对应的时间最晚需要开始的时间，超出此时间将会延误整个工期。","一.","事件的最早发生时间etv(earliest","事件的最晚发生时间ltv(latest","二.","关键路径算法","定义","对于生产过程的一个完整的时间轴，其各个项目的生产时间是固定的，而只要是整段时间都完全在工作的话，那么在每个阶段肯定是有一个过程是在完全工作的，而对于该阶段而言，该过程就是关键路径。","我们是由1和2可以求得3和4，然后再根据ete[k]是否与lte[k]相等来判断aka_ka​k​​是否是关键活动。","求事件的最早发生时间etv的过程，就是我们从头至尾找拓扑序列的过程，因此，在求关键路径之前，需要先调用依次拓扑序列算法的代码来计算etv和拓扑序列列表","活动的最早开工时间ete(earliest","活动的最晚开工时间lte(latest","然后求出关键路径","算法过程","首先，我们需要定义如下几个参数："],"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":["!=","%d","(int","*","*)malloc(gl","*e;","*etv,","*ltv;","*sizeof(int));","*stack2;","*stack;","+","//","0)","0;","1.","1];","=","==",">",">adjlist[gettop].firstedge;",">adjlist[i].in)",">adjlist[j].data,",">adjlist[j].firstedge;",">adjlist[k].data,",">adjlist[k].in))",">adjvex;",">next)",">numvertex",">weight",">weight)",">weight);",">weight;","\\n\",","];","count","count++;","criticalpath(graphadjlist","e","e;","edgenod","error;","et","ete,","etv","etv[gettop]","etv[gl","etv[i]","etv[j];","etv[k]","etv[k])","for(","for(i","for(j","gettop","gettop,","gettop;","gl","gl)","i++)","i,","i;","if(!(","if((etv[gettop]","if(0","if(count","if(et","if(ltv[k]","int","j","j++)","j;","k","k,","k;","length:","lte","lte)","lte;","ltv","ltv[i]","ltv[k]","numvertexes)","numvertexes;","ok;","printf(\"","return","sizeof(int));","stack","stack2","stack2[++top2]","stack2[top2","stack[++top]","stack[top","statu","top","top2","top2;","topologicalsort(gl);","topologicalsort(graphadjlist","void","weight;","while(top","while(top2","{","}","代码实现","改进过的求拓扑序列的算法","求关键路径"]},"length":157},"tokenStore":{"root":{"0":{"0":{"0":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143}}},"1":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}}},"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02857142857142857}}},"1":{"0":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}}},"1":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02857142857142857}}},"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143}}},"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}},")":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}},"(":{"docs":{},"n":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{},".":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}},"docs":{}}}},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{},"棵":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"交":{"docs":{},"的":{"docs":{},"树":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}},"docs":{}}}}},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"有":{"docs":{},"限":{"docs":{},"集":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}},"合":{"docs":{},"，":{"docs":{},"该":{"docs":{},"集":{"docs":{},"合":{"docs":{},"或":{"docs":{},"者":{"docs":{},"为":{"docs":{},"空":{"docs":{},"集":{"docs":{},"（":{"docs":{},"称":{"docs":{},"为":{"docs":{},"空":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"）":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"交":{"docs":{},"的":{"docs":{},"、":{"docs":{},"分":{"docs":{},"别":{"docs":{},"称":{"docs":{},"为":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"链":{"docs":{},"式":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},";":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.043478260869565216},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.05063291139240506},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.036585365853658534},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.034482758620689655},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.09090909090909091},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.03278688524590164},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.025},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.034482758620689655}}},"时":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"；":{"docs":{},"当":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}},"~":{"5":{"9":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"docs":{}},"docs":{}},"&":{"0":{"docs":{},"&":{"0":{"docs":{},"&":{"0":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}},"1":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}},"docs":{}}},"docs":{}}},"1":{"docs":{},"&":{"1":{"docs":{},"&":{"1":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}},"&":{"1":{"docs":{},"&":{"1":{"docs":{},"&":{"1":{"docs":{},"&":{"1":{"docs":{},"&":{"1":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},"&":{"2":{"docs":{},"&":{"2":{"docs":{},"&":{"2":{"docs":{},"&":{"2":{"docs":{},"&":{"2":{"docs":{},"&":{"2":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"3":{"docs":{},"&":{"4":{"docs":{},"&":{"5":{"docs":{},"&":{"6":{"docs":{},"&":{"7":{"docs":{},"&":{"8":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.046511627906976744}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},"&":{"7":{"docs":{},"&":{"5":{"docs":{},"&":{"8":{"docs":{},"&":{"1":{"0":{"docs":{},"&":{"1":{"2":{"docs":{},"&":{"1":{"6":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"docs":{}}},"docs":{}}},"1":{"0":{"0":{"0":{"0":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}}},"1":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}}},"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}}},"1":{"0":{"1":{"0":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}},"docs":{}},"docs":{}},"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02857142857142857}}},"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"%":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},",":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"&":{"9":{"docs":{},"&":{"6":{"docs":{},"&":{"3":{"docs":{},"&":{"5":{"docs":{},"&":{"7":{"docs":{},"&":{"0":{"docs":{},"&":{"2":{"docs":{},"&":{"6":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"1":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}},"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143}}},"2":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"−":{"1":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"（":{"docs":{},"k":{"docs":{},"⩾":{"1":{"docs":{},"k":{"docs":{},"\\":{"docs":{},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}},"docs":{}}}}}},"。":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}},"docs":{}}}}}},"&":{"1":{"1":{"docs":{},"&":{"8":{"docs":{},"&":{"5":{"docs":{},"&":{"7":{"docs":{},"&":{"5":{"docs":{},"&":{"2":{"docs":{},"&":{"0":{"docs":{},"&":{"4":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"3":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}},"4":{"4":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"5":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}},"%":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}},"6":{"docs":{},"&":{"1":{"5":{"docs":{},"&":{"1":{"2":{"docs":{},"&":{"9":{"docs":{},"&":{"1":{"1":{"docs":{},"&":{"9":{"docs":{},"&":{"6":{"docs":{},"&":{"4":{"docs":{},"&":{"0":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"9":{"8":{"0":{"docs":{},"=":{"0":{"1":{"9":{"8":{"0":{"docs":{},"−":{"1":{"9":{"8":{"0":{"docs":{},"=":{"0":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"1":{"9":{"8":{"2":{"docs":{},"的":{"docs":{},"人":{"docs":{},"数":{"docs":{},"就":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{},"即":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"−":{"1":{"9":{"8":{"0":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"−":{"1":{"9":{"8":{"0":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.016260162601626018},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},".":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":5},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":5},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.021739130434782608},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":5},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":5},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":5},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":5},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":5},"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":5},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":5},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":5},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":5},"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":5},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.02586206896551724},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":5.012711864406779},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":5},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":5},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":5},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.020833333333333332},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":5},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":5},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":5},"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":5},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":5},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":5},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":5},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":5},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":5},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":5},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":5},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":5},"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":5},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":5},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":5},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":5},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":5},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":5},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":5},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":5},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":5},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":5},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":5},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":5},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":5},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":5},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":5},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":5},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":5},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":5},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":5},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":5},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":5},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":5}}},"}":{"2":{"docs":{},"​":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"（":{"docs":{},"i":{"docs":{},"⩾":{"1":{"docs":{},"i":{"docs":{},"\\":{"docs":{},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.03508771929824561},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.017699115044247787}},"p":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"​":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"和":{"docs":{},"p":{"docs":{},"j":{"docs":{},"−":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"p":{"docs":{},"_":{"docs":{},"{":{"docs":{},"j":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{},"j":{"docs":{},"−":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"​":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"j":{"docs":{},"p":{"docs":{},"_":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"_":{"docs":{},"j":{"docs":{},"p":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"两":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}},"到":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"以":{"docs":{},"行":{"docs":{},"标":{"docs":{},"为":{"docs":{},"起":{"docs":{},"点":{"docs":{},"，":{"docs":{},"以":{"docs":{},"列":{"docs":{},"标":{"docs":{},"为":{"docs":{},"终":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"从":{"docs":{},"对":{"docs":{},"应":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"以":{"docs":{},"行":{"docs":{},"标":{"docs":{},"为":{"docs":{},"起":{"docs":{},"点":{"docs":{},"，":{"docs":{},"以":{"docs":{},"列":{"docs":{},"标":{"docs":{},"为":{"docs":{},"终":{"docs":{},"点":{"docs":{},"，":{"docs":{},"先":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"从":{"docs":{},"起":{"docs":{},"点":{"docs":{},"到":{"docs":{},"终":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"终":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"到":{"docs":{},"每":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"都":{"docs":{},"先":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"不":{"docs":{},"经":{"docs":{},"过":{"docs":{},"中":{"docs":{},"转":{"docs":{},"直":{"docs":{},"接":{"docs":{},"到":{"docs":{},"该":{"docs":{},"终":{"docs":{},"点":{"docs":{},"。":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"a":{"docs":{},"​":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"所":{"docs":{},"指":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"均":{"docs":{},"小":{"docs":{},"于":{"docs":{},"k":{"docs":{},"i":{"docs":{},"k":{"docs":{},"_":{"docs":{},"i":{"docs":{},"k":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"n":{"docs":{},"(":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"n":{"docs":{},"(":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"=":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"[":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.011627906976744186}}}}}}}}},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"d":{"docs":{},"​":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"为":{"docs":{},"最":{"docs":{},"新":{"docs":{},"路":{"docs":{},"径":{"4":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"p":{"docs":{},"−":{"1":{"docs":{},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"p":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}},"docs":{}}}}},"docs":{}}}},"docs":{}}}}}}},"docs":{}}}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}},"p":{"docs":{},"​":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"中":{"docs":{},"转":{"docs":{},"点":{"docs":{},"v":{"1":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"1":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}},"d":{"docs":{},"​":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"为":{"docs":{},"d":{"docs":{},"d":{"docs":{},"d":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"以":{"docs":{},"行":{"docs":{},"标":{"docs":{},"为":{"docs":{},"起":{"docs":{},"点":{"docs":{},"，":{"docs":{},"以":{"docs":{},"列":{"docs":{},"标":{"docs":{},"为":{"docs":{},"终":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"值":{"docs":{},"；":{"docs":{},"更":{"docs":{},"新":{"docs":{},"p":{"docs":{},"−":{"1":{"docs":{},"p":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"p":{"docs":{},"−":{"1":{"docs":{},"p":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}},"docs":{}}}},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"每":{"docs":{},"条":{"docs":{},"边":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"；":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"p":{"docs":{},"−":{"1":{"docs":{},"p":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"k":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"a":{"docs":{},"k":{"docs":{},"b":{"docs":{},"k":{"docs":{},"a":{"docs":{},"_":{"docs":{},"k":{"docs":{},"a":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"b":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"k":{"docs":{},"k":{"docs":{},"k":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"⩽":{"docs":{},"k":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"⩽":{"docs":{},"k":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}},"⩾":{"1":{"docs":{},"）":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}},"docs":{}}},";":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.028985507246376812},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.034782608695652174},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.043478260869565216},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.04878048780487805},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.03773584905660377},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.047619047619047616},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.02666666666666667},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}},")":{"0":{"docs":{},"⩽":{"docs":{},"e":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}},"docs":{}}}}}}}}},"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.03636363636363636},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888}},"+":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091},"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125},"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1},"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","tf":0.16666666666666666},"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693},"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.13333333333333333}}}}}}},"=":{"docs":{},"n":{"docs":{},"+":{"1":{"2":{"docs":{},"n":{"docs":{},"−":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"=":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"个":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"n":{"docs":{},"值":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"将":{"docs":{},"会":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}},"docs":{}},"docs":{}}}},"/":{"2":{"0":{"docs":{},"⩽":{"docs":{},"e":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"/":{"2":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},"docs":{}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"条":{"docs":{},"边":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}},"docs":{}}}}},"(":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"为":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"（":{"docs":{},"或":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"为":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}}},"−":{"1":{"docs":{},")":{"docs":{},"；":{"docs":{},"a":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},"a":{"docs":{},"_":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},"a":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},"，":{"2":{"2":{"2":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"n":{"docs":{},")":{"docs":{},"n":{"docs":{},")":{"docs":{},"n":{"docs":{},")":{"docs":{},"为":{"docs":{},"指":{"docs":{},"向":{"docs":{},"子":{"docs":{},"树":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"且":{"docs":{},"指":{"docs":{},"针":{"docs":{},"a":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"a":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}},"docs":{}}},"}":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},";":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}},"^":{"2":{"docs":{},"−":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"2":{"2":{"2":{"docs":{},"^":{"2":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"−":{"2":{"2":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}},"docs":{}},"docs":{}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}},"m":{"docs":{},"−":{"1":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}},"docs":{}},"+":{"1":{"docs":{},"个":{"docs":{},"到":{"docs":{},"底":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"个":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"范":{"docs":{},"围":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{},"−":{"2":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"i":{"docs":{},"d":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"的":{"docs":{},"公":{"docs":{},"式":{"docs":{},"来":{"docs":{},"每":{"docs":{},"次":{"docs":{},"更":{"docs":{},"新":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"且":{"docs":{},"每":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"k":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"见":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"−":{"1":{"docs":{},"个":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"范":{"docs":{},"围":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}},"）":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}},"先":{"docs":{},"根":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}},"定":{"docs":{},"义":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}},"时":{"docs":{},"为":{"docs":{},"空":{"docs":{},"；":{"docs":{},"若":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"0":{"docs":{},"时":{"docs":{},"为":{"docs":{},"空":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"栈":{"1":{"docs":{},"为":{"docs":{},"空":{"docs":{},"栈":{"docs":{},"；":{"docs":{},"栈":{"2":{"docs":{},"的":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"时":{"docs":{},"栈":{"2":{"docs":{},"为":{"docs":{},"空":{"docs":{},"栈":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{},"满":{"docs":{},"；":{"docs":{},"若":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"时":{"docs":{},"栈":{"docs":{},"满":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"满":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"，":{"docs":{},"将":{"docs":{},"小":{"docs":{},"的":{"docs":{},"替":{"docs":{},"换":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"让":{"docs":{},"大":{"docs":{},"的":{"docs":{},"替":{"docs":{},"换":{"docs":{},"到":{"docs":{},"后":{"docs":{},"面":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.01694915254237288}}},"i":{"docs":{},"⩾":{"1":{"docs":{},"）":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}},"docs":{}}},"n":{"docs":{},"−":{"1":{"docs":{},"条":{"docs":{},"边":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"待":{"docs":{},"排":{"docs":{},"序":{"docs":{},"表":{"docs":{},"是":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"总":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"。":{"docs":{"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}},"，":{"docs":{},"交":{"docs":{},"换":{"docs":{},"了":{"0":{"docs":{},"次":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"；":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"重":{"docs":{},"新":{"docs":{},"构":{"docs":{},"造":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"的":{"docs":{},"次":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"如":{"docs":{},"此":{"docs":{},"反":{"docs":{},"复":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"便":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法/排序/堆排序/堆排序算法/堆排序算法.html":{"ref":"算法/排序/堆排序/堆排序算法/堆排序算法.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"&":{"0":{"docs":{},"&":{"1":{"docs":{},"&":{"0":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}},"\\":{"docs":{},"\\":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.020833333333333332}}}}},"docs":{}}},"3":{"docs":{},"&":{"6":{"docs":{},"&":{"4":{"docs":{},"&":{"7":{"docs":{},"&":{"9":{"docs":{},"&":{"1":{"1":{"docs":{},"&":{"1":{"5":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},"&":{"5":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},"&":{"0":{"docs":{},"&":{"0":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}},"1":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}},"docs":{}}},"2":{"docs":{},"&":{"4":{"docs":{},"&":{"4":{"docs":{},"&":{"4":{"docs":{},"&":{"4":{"docs":{},"&":{"4":{"docs":{},"&":{"4":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.05555555555555555},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.039603960396039604},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.033707865168539325},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}},"]":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.05555555555555555},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.04}},";":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},")":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"个":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}},"docs":{}}}},"2":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"个":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}},"docs":{}}}},"docs":{}}}}},"\\":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}},"条":{"docs":{},"边":{"docs":{},"。":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}}},"2":{"0":{"0":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}},"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":0.16666666666666666},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0392156862745098}}},"1":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}},"2":{"2":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}},"docs":{}},"7":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"9":{"docs":{},"+":{"docs":{},"(":{"3":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"×":{"3":{"docs":{},"+":{"1":{"0":{"docs":{},"÷":{"2":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}}},"docs":{}}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":5.085714285714285},"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":3.433333333333333},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744}},".":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":5},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":5.021739130434782},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":5},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":5},"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":5},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":5},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":5},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":5},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":5},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.02586206896551724},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":5.014705882352941},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/树/线索二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/线索二叉树/难点操作/难点操作.html","tf":5},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.020833333333333332},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":5},"数据结构/图/邻接表/难点操作/难点操作.html":{"ref":"数据结构/图/邻接表/难点操作/难点操作.html","tf":5},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}},"^":{"2":{"docs":{},"−":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"q":{"2":{"docs":{},"q":{"docs":{},"^":{"2":{"docs":{},"q":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"−":{"docs":{},"q":{"2":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},")":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}},";":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}},"）":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}},"分":{"docs":{},"类":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}},"根":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}},"}":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"}":{"docs":{},"^":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},")":{"docs":{},"e":{"docs":{},"=":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∑":{"docs":{},"​":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"{":{"1":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}},"docs":{}}}}}}},")":{"docs":{},"+":{"1":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"docs":{}}},"]":{"docs":{},"}":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"更":{"docs":{},"接":{"docs":{},"近":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"原":{"docs":{},"理":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"但":{"docs":{},"通":{"docs":{},"过":{"docs":{},"例":{"docs":{},"证":{"docs":{},"确":{"docs":{},"实":{"docs":{},"如":{"docs":{},"此":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"了":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"a":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"​":{"docs":{},"​":{"docs":{},"条":{"docs":{},"边":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}},"次":{"docs":{},"，":{"docs":{},"并":{"docs":{},"作":{"docs":{},"等":{"docs":{},"数":{"docs":{},"量":{"docs":{},"级":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"移":{"docs":{},"动":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"总":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"。":{"docs":{"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"它":{"docs":{},"光":{"docs":{},"是":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"就":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"，":{"docs":{},"还":{"docs":{},"得":{"docs":{},"加":{"docs":{},"上":{"docs":{},"那":{"docs":{},"些":{"docs":{},"需":{"docs":{},"要":{"docs":{},"交":{"docs":{},"换":{"docs":{},"的":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"。":{"docs":{"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"总":{"docs":{},"体":{"docs":{},"来":{"docs":{},"说":{"docs":{},"效":{"docs":{},"率":{"docs":{},"提":{"docs":{},"升":{"docs":{},"并":{"docs":{},"不":{"docs":{},"大":{"docs":{},"。":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}}}}}}}}}},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"交":{"docs":{},"换":{"docs":{},"次":{"docs":{},"数":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"当":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"交":{"docs":{},"换":{"docs":{},"为":{"0":{"docs":{},"次":{"docs":{},"，":{"docs":{},"最":{"docs":{},"差":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"即":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"时":{"docs":{},"，":{"docs":{},"交":{"docs":{},"换":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},"n":{"docs":{"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"最":{"docs":{},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"之":{"docs":{},"后":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"把":{"docs":{},"本":{"docs":{},"来":{"docs":{},"相":{"docs":{},"对":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"么":{"docs":{},"多":{"docs":{},"次":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"对":{"docs":{},"最":{"docs":{},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"来":{"docs":{},"说":{"docs":{},"还":{"docs":{},"是":{"docs":{},"相":{"docs":{},"对":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"原":{"docs":{},"本":{"docs":{},"相":{"docs":{},"对":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"过":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"对":{"docs":{},"有":{"docs":{},"序":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"在":{"docs":{},"原":{"docs":{},"本":{"docs":{},"的":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"中":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"(":{"docs":{},"n":{"docs":{},"+":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"​":{"docs":{},"​":{"docs":{},"次":{"docs":{},"，":{"docs":{},"移":{"docs":{},"动":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"：":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"4":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"4":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}},"4":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"​":{"docs":{},"​":{"docs":{},"次":{"docs":{},"。":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}},"docs":{}},"&":{"2":{"docs":{},"&":{"2":{"docs":{},"&":{"3":{"docs":{},"&":{"4":{"docs":{},"&":{"5":{"docs":{},"&":{"3":{"docs":{},"&":{"3":{"docs":{},"&":{"3":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"]":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}},"3":{"0":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}},"%":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}},"2":{"7":{"6":{"8":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},"docs":{}},"docs":{}},"docs":{}},"3":{"3":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.016260162601626018}}},"docs":{}},"4":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}},"5":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"7":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":3.533333333333333},"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.047619047619047616},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}},".":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203},"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.017241379310344827},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}},"+":{"1":{"0":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"docs":{}},"docs":{}},"）":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}},"关":{"docs":{},"系":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}},")":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"树":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":5}},"中":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"如":{"docs":{},"果":{"docs":{},"包":{"docs":{},"含":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"个":{"docs":{},"数":{"docs":{},"一":{"docs":{},"定":{"docs":{},"与":{"docs":{},"其":{"docs":{},"结":{"docs":{},"点":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"数":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"和":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"而":{"2":{"docs":{"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":0.1}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"对":{"docs":{},"该":{"docs":{},"树":{"docs":{},"的":{"docs":{},"其":{"docs":{},"余":{"docs":{},"结":{"docs":{},"构":{"docs":{},"产":{"docs":{},"生":{"docs":{},"连":{"docs":{},"锁":{"docs":{},"反":{"docs":{},"应":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"分":{"docs":{},"为":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}},"是":{"3":{"docs":{},"阶":{"docs":{},"b":{"docs":{},"树":{"docs":{},"，":{"2":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"docs":{}}}}}},"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"多":{"docs":{},"路":{"docs":{},"查":{"docs":{},"找":{"docs":{},"树":{"docs":{},"：":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"具":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"（":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"它":{"docs":{},"为":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"或":{"docs":{},"三":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"（":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"它":{"docs":{},"为":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"也":{"docs":{},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"与":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"上":{"docs":{},"。":{"docs":{},"与":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"2":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{},"最":{"docs":{},"大":{"docs":{},"容":{"docs":{},"量":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"其":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"原":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"以":{"docs":{},"及":{"docs":{},"插":{"docs":{},"入":{"docs":{},"元":{"docs":{},"素":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"选":{"docs":{},"择":{"docs":{},"其":{"docs":{},"一":{"docs":{},"向":{"docs":{},"上":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"若":{"docs":{},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"也":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"继":{"docs":{},"续":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"某":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"或":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"被":{"docs":{},"拆":{"docs":{},"分":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"展":{"docs":{},"，":{"2":{"docs":{"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":0.1}}},"docs":{}}}}},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"4":{"docs":{},"结":{"docs":{},"点":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"于":{"4":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"三":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"4":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"；":{"docs":{},"第":{"docs":{},"三":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"4":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"第":{"docs":{},"三":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"；":{"docs":{},"第":{"docs":{},"四":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"比":{"4":{"docs":{},"结":{"docs":{},"点":{"docs":{},"最":{"docs":{},"大":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":0.1}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"和":{"2":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"docs":{}}},"&":{"3":{"docs":{},"&":{"3":{"docs":{},"&":{"3":{"docs":{},"&":{"3":{"docs":{},"&":{"7":{"docs":{},"&":{"6":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"0":{"docs":{"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655}},"%":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}},"7":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},".":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.017241379310344827},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},"）":{"docs":{},"其":{"docs":{},"他":{"docs":{},"概":{"docs":{},"念":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}},")":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}},",":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"树":{"docs":{"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":3.333333333333333}},"就":{"docs":{},"是":{"2":{"docs":{"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":0.1}}},"docs":{}}},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"4":{"docs":{},"结":{"docs":{},"点":{"docs":{},"：":{"docs":{},"包":{"docs":{},"含":{"3":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"四":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"（":{"docs":{},"或":{"docs":{},"没":{"docs":{},"有":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"）":{"docs":{},"。":{"docs":{},"其":{"docs":{},"元":{"docs":{},"素":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"与":{"2":{"docs":{"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":0.1}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}},"是":{"4":{"docs":{},"阶":{"docs":{},"b":{"docs":{},"树":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}},"docs":{}},"都":{"docs":{},"是":{"docs":{},"b":{"docs":{},"树":{"docs":{},"的":{"docs":{},"特":{"docs":{},"例":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}},"&":{"3":{"docs":{},"&":{"0":{"docs":{},"&":{"3":{"docs":{},"&":{"1":{"docs":{},"&":{"4":{"docs":{},"&":{"6":{"docs":{},"&":{"8":{"docs":{},"&":{"1":{"2":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},"&":{"4":{"docs":{},"&":{"3":{"docs":{},"&":{"4":{"docs":{},"&":{"4":{"docs":{},"&":{"6":{"docs":{},"&":{"6":{"docs":{},"&":{"6":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},"&":{"4":{"docs":{},"&":{"5":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"1":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"5":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"8":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"朴":{"docs":{},"素":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"多":{"docs":{},"余":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"在":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"论":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{},"j":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"主":{"docs":{},"串":{"docs":{},"指":{"docs":{},"针":{"docs":{},"i":{"docs":{},"也":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"需":{"docs":{},"要":{"docs":{},"回":{"docs":{},"退":{"docs":{},"。":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},"%":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"&":{"3":{"docs":{},"&":{"0":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"docs":{}}},"4":{"docs":{},"&":{"1":{"docs":{},"&":{"2":{"docs":{},"&":{"0":{"docs":{},"&":{"3":{"docs":{},"&":{"5":{"docs":{},"&":{"7":{"docs":{},"&":{"1":{"1":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"0":{"docs":{},"~":{"6":{"9":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"docs":{}},"docs":{}}},"2":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"5":{"5":{"3":{"5":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},".":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},",":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"&":{"6":{"docs":{},"&":{"6":{"docs":{},"&":{"6":{"docs":{},"&":{"6":{"docs":{},"&":{"5":{"docs":{},"&":{"6":{"docs":{},"&":{"7":{"docs":{},"&":{"8":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"0":{"docs":{},"~":{"7":{"9":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"docs":{}},"docs":{}}},"3":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}},".":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},",":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"&":{"6":{"docs":{},"&":{"3":{"docs":{},"&":{"0":{"docs":{},"&":{"2":{"docs":{},"&":{"5":{"docs":{},"&":{"3":{"docs":{},"&":{"5":{"docs":{},"&":{"9":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"&":{"7":{"docs":{},"&":{"8":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"8":{"0":{"docs":{},"~":{"8":{"9":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"docs":{}},"docs":{}}},"8":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"9":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}},"&":{"7":{"docs":{},"&":{"4":{"docs":{},"&":{"5":{"docs":{},"&":{"3":{"docs":{},"&":{"0":{"docs":{},"&":{"7":{"docs":{},"&":{"5":{"docs":{},"&":{"9":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"9":{"0":{"docs":{},"~":{"1":{"0":{"0":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"docs":{}},"docs":{}},"docs":{}}},"3":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}},"9":{"9":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}},"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}},",":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},"docs":{},"《":{"docs":{},"大":{"docs":{},"话":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"》":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"、":{"docs":{},"算":{"docs":{},"法":{"docs":{},"与":{"docs":{},"应":{"docs":{},"用":{"docs":{},"（":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"语":{"docs":{},"言":{"docs":{},"描":{"docs":{},"述":{"docs":{},"）":{"docs":{},"》":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}},"》":{"docs":{"./":{"ref":"./","tf":0.04}}},"与":{"docs":{},"算":{"docs":{},"法":{"docs":{},"分":{"docs":{},"析":{"docs":{},"：":{"docs":{},"c":{"docs":{},"语":{"docs":{},"言":{"docs":{},"描":{"docs":{},"述":{"docs":{},"》":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"》":{"docs":{"./":{"ref":"./","tf":0.04}}},"导":{"docs":{},"论":{"docs":{},"》":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}},"一":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/顺序串.html":{"ref":"数据结构/串/顺序串/顺序串.html","tf":0.3333333333333333},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":0.14285714285714285},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091},"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666},"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332},"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176},"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/树/线索二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/线索二叉树/难点操作/难点操作.html","tf":0.25},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705},"数据结构/图/邻接表/难点操作/难点操作.html":{"ref":"数据结构/图/邻接表/难点操作/难点操作.html","tf":0.5},"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555},"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842},"数据结构/图/边集数组/边集数组.html":{"ref":"数据结构/图/边集数组/边集数组.html","tf":0.16666666666666666},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/顺序表查找/顺序表查找.html":{"ref":"算法/查找/顺序表查找/顺序表查找.html","tf":0.2},"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":0.14285714285714285},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125},"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333},"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842},"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/二叉排序树/插入操作/插入操作.html":{"ref":"算法/查找/二叉排序树/插入操作/插入操作.html","tf":0.16666666666666666},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857},"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":0.1},"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808},"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091},"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":0.14285714285714285},"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091},"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693},"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667},"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705},"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":0.14285714285714285},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872},"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732},"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142},"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693},"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142},"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333},"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082},"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625},"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html","tf":0.25},"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667},"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":10}}}}},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"两":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"（":{"docs":{},"或":{"docs":{},"没":{"docs":{},"有":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"）":{"docs":{},"；":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"大":{"docs":{},"一":{"docs":{},"小":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"三":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"（":{"docs":{},"或":{"docs":{},"没":{"docs":{},"有":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"指":{"docs":{},"向":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333}}}}}},"结":{"docs":{},"点":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333}}}},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"自":{"docs":{},"己":{"docs":{},"或":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"语":{"docs":{},"句":{"docs":{},"间":{"docs":{},"接":{"docs":{},"地":{"docs":{},"调":{"docs":{},"用":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"称":{"docs":{},"作":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"b":{"docs":{},"树":{"docs":{},"具":{"docs":{},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"属":{"docs":{},"性":{"docs":{},"：":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}}}}}},"已":{"docs":{},"知":{"docs":{},"的":{"docs":{},"网":{"docs":{},"图":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}},"种":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"描":{"docs":{},"述":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":0.14285714285714285}}}}}}}}}}},"共":{"2":{"5":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}},"docs":{}},"3":{"0":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}},"docs":{}},"docs":{}},"棵":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"b":{"docs":{},"+":{"docs":{},"树":{"docs":{},"和":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"b":{"docs":{},"树":{"docs":{},"的":{"docs":{},"差":{"docs":{},"异":{"docs":{},"在":{"docs":{},"于":{"docs":{},"：":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":0.14285714285714285},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091},"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666},"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332},"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/树/线索二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/线索二叉树/难点操作/难点操作.html","tf":0.25},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705},"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555},"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842},"数据结构/图/边集数组/边集数组.html":{"ref":"数据结构/图/边集数组/边集数组.html","tf":0.16666666666666666},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":0.14285714285714285},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125},"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333},"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842},"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857},"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808},"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091},"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":0.14285714285714285},"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091},"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693},"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667},"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705},"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":0.14285714285714285},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872},"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732},"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142},"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693},"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142},"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333},"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082},"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625},"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667},"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}},"叉":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":10}},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"是":{"docs":{},"原":{"docs":{},"树":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"是":{"docs":{},"原":{"docs":{},"树":{"docs":{},"的":{"docs":{},"长":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}},"森":{"docs":{},"林":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}},"遍":{"docs":{},"历":{"docs":{},"是":{"docs":{},"指":{"docs":{},"从":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"某":{"docs":{},"种":{"docs":{},"次":{"docs":{},"序":{"docs":{},"依":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"次":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"按":{"docs":{},"照":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"其":{"docs":{},"他":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"将":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"得":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"作":{"docs":{},"为":{"docs":{},"标":{"docs":{},"准":{"docs":{},"定":{"docs":{},"义":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"和":{"docs":{},"后":{"docs":{},"继":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":10}},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"也":{"docs":{},"是":{"docs":{},"构":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"，":{"docs":{},"其":{"docs":{},"主":{"docs":{},"要":{"docs":{},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/查找/二叉排序树/插入操作/插入操作.html":{"ref":"算法/查找/二叉排序树/插入操作/插入操作.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":10}},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":0.14285714285714285}}}}}}}}},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"应":{"docs":{},"该":{"docs":{},"还":{"docs":{},"是":{"docs":{},"很":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{},"的":{"docs":{},"，":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"整":{"docs":{},"数":{"docs":{},"除":{"docs":{},"法":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"作":{"docs":{},"目":{"docs":{},"的":{"docs":{"./":{"ref":"./","tf":0.04}}}}}},"分":{"docs":{},"类":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}},"方":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.04}}}}},"别":{"docs":{},"将":{"docs":{},"他":{"docs":{},"们":{"docs":{},"都":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}}}}},"它":{"docs":{},"们":{"docs":{},"都":{"docs":{},"向":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}}}}}}},"析":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662}},"：":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"月":{"docs":{},"数":{"docs":{},"和":{"docs":{},"兔":{"docs":{},"子":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"列":{"docs":{},"出":{"docs":{},"下":{"docs":{},"表":{"docs":{},"：":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}},"支":{"docs":{},"结":{"docs":{},"点":{"docs":{},"/":{"docs":{},"非":{"docs":{},"终":{"docs":{},"端":{"docs":{},"结":{"docs":{},"点":{"docs":{},"：":{"docs":{},"度":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"除":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"外":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"结":{"docs":{},"点":{"docs":{},"也":{"docs":{},"称":{"docs":{},"作":{"docs":{},"内":{"docs":{},"部":{"docs":{},"节":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"数":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"块":{"docs":{},"索":{"docs":{},"引":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":10}},"需":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"两":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"先":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"块":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"块":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"块":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"和":{"docs":{},"块":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"块":{"docs":{},"的":{"docs":{},"块":{"docs":{},"首":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"言":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}},"参":{"docs":{},"考":{"docs":{},"书":{"docs":{},"籍":{"docs":{"./":{"ref":"./","tf":0.04}}}}}},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"引":{"docs":{},"入":{"docs":{},"和":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"按":{"docs":{},"照":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"写":{"docs":{},"出":{"docs":{},"结":{"docs":{},"构":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"每":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"操":{"docs":{},"作":{"docs":{},"集":{"docs":{},"中":{"docs":{},"比":{"docs":{},"较":{"docs":{},"困":{"docs":{},"难":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"进":{"docs":{},"行":{"docs":{},"总":{"docs":{},"结":{"docs":{},"。":{"docs":{},"在":{"docs":{},"初":{"docs":{},"学":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"对":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"从":{"docs":{},"结":{"docs":{},"构":{"docs":{},"代":{"docs":{},"码":{"docs":{},"到":{"docs":{},"操":{"docs":{},"作":{"docs":{},"实":{"docs":{},"现":{"docs":{},"进":{"docs":{},"行":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"编":{"docs":{},"写":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}},"在":{"docs":{},"前":{"docs":{},"人":{"docs":{},"们":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"想":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"比":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"更":{"docs":{},"早":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"则":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"支":{"docs":{},"撑":{"docs":{},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"而":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"组":{"docs":{},"织":{"docs":{},"和":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{},"而":{"docs":{},"到":{"docs":{},"了":{"docs":{},"现":{"docs":{},"在":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"已":{"docs":{},"然":{"docs":{},"成":{"docs":{},"为":{"docs":{},"了":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"都":{"docs":{},"有":{"docs":{},"其":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"集":{"docs":{},"，":{"docs":{},"某":{"docs":{},"些":{"docs":{},"操":{"docs":{},"作":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"应":{"docs":{},"用":{"docs":{},"到":{"docs":{},"一":{"docs":{},"些":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"新":{"docs":{},"的":{"docs":{},"分":{"docs":{},"类":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"不":{"docs":{},"想":{"docs":{},"再":{"docs":{},"纠":{"docs":{},"结":{"docs":{},"于":{"docs":{},"每":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"这":{"docs":{},"些":{"docs":{},"属":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"操":{"docs":{},"作":{"docs":{},"集":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"都":{"docs":{},"将":{"docs":{},"被":{"docs":{},"我":{"docs":{},"归":{"docs":{},"类":{"docs":{},"于":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"某":{"docs":{},"些":{"docs":{},"不":{"docs":{},"太":{"docs":{},"典":{"docs":{},"型":{"docs":{},"但":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"将":{"docs":{},"在":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"部":{"docs":{},"分":{"docs":{},"进":{"docs":{},"行":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"，":{"docs":{},"而":{"docs":{},"那":{"docs":{},"些":{"docs":{},"比":{"docs":{},"较":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"则":{"docs":{},"将":{"docs":{},"被":{"docs":{},"我":{"docs":{},"同":{"docs":{},"时":{"docs":{},"归":{"docs":{},"类":{"docs":{},"到":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"与":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"l":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"与":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"e":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}}}}},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"插":{"docs":{},"入":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}},"初":{"docs":{},"步":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"中":{"docs":{},"，":{"docs":{},"主":{"docs":{},"串":{"docs":{},"指":{"docs":{},"针":{"docs":{},"i":{"docs":{},"是":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"回":{"docs":{},"退":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"直":{"docs":{},"接":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"j":{"docs":{},"需":{"docs":{},"要":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"。":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"朴":{"docs":{},"素":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"开":{"docs":{},"始":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"将":{"docs":{},"i":{"docs":{},"退":{"docs":{},"回":{"docs":{},"到":{"docs":{},"上":{"docs":{},"一":{"docs":{},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"j":{"docs":{},"被":{"docs":{},"退":{"docs":{},"回":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"l":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"与":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"e":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"插":{"docs":{},"入":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"前":{"docs":{},"附":{"docs":{},"设":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"终":{"docs":{},"端":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"由":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"改":{"docs":{},"为":{"docs":{},"指":{"docs":{},"向":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/链表/循环链表/循环链表.html":{"ref":"数据结构/链表/循环链表/循环链表.html","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"很":{"docs":{},"少":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"公":{"docs":{},"共":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"区":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"对":{"docs":{},"查":{"docs":{},"找":{"docs":{},"性":{"docs":{},"能":{"docs":{},"来":{"docs":{},"说":{"docs":{},"还":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"高":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"求":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"经":{"docs":{},"常":{"docs":{},"会":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"1":{"docs":{},"≠":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"2":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"1":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"存":{"docs":{},"在":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"层":{"docs":{},"上":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"称":{"docs":{},"为":{"docs":{},"满":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"b":{"docs":{},"树":{"docs":{},"应":{"docs":{},"用":{"docs":{},"中":{"docs":{},"，":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"数":{"docs":{},"据":{"docs":{},"量":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"无":{"docs":{},"法":{"docs":{},"一":{"docs":{},"次":{"docs":{},"全":{"docs":{},"部":{"docs":{},"装":{"docs":{},"入":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{},"b":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"整":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"b":{"docs":{},"树":{"docs":{},"的":{"docs":{},"阶":{"docs":{},"数":{"docs":{},"（":{"docs":{},"或":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"）":{"docs":{},"与":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"页":{"docs":{},"面":{"docs":{},"大":{"docs":{},"小":{"docs":{},"相":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"b":{"docs":{},"树":{"docs":{},"的":{"docs":{},"阶":{"docs":{},"为":{"1":{"0":{"0":{"1":{"docs":{},"（":{"docs":{},"即":{"1":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"1":{"0":{"0":{"0":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"）":{"docs":{},"，":{"docs":{},"高":{"docs":{},"度":{"docs":{},"为":{"2":{"docs":{},"，":{"docs":{},"它":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"储":{"docs":{},"超":{"docs":{},"过":{"1":{"0":{"docs":{},"亿":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"要":{"docs":{},"让":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"持":{"docs":{},"久":{"docs":{},"地":{"docs":{},"保":{"docs":{},"留":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"这":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"上":{"docs":{},"，":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"至":{"docs":{},"多":{"docs":{},"需":{"docs":{},"要":{"docs":{},"两":{"docs":{},"次":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"的":{"docs":{},"读":{"docs":{},"取":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"工":{"docs":{},"程":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"用":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"表":{"docs":{},"示":{"docs":{},"活":{"docs":{},"动":{"docs":{},"，":{"docs":{},"用":{"docs":{},"弧":{"docs":{},"表":{"docs":{},"示":{"docs":{},"活":{"docs":{},"动":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"为":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"表":{"docs":{},"示":{"docs":{},"活":{"docs":{},"动":{"docs":{},"的":{"docs":{},"网":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"为":{"docs":{},"a":{"docs":{},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"（":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"带":{"docs":{},"权":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"用":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"表":{"docs":{},"示":{"docs":{},"事":{"docs":{},"件":{"docs":{},"，":{"docs":{},"用":{"docs":{},"有":{"docs":{},"向":{"docs":{},"边":{"docs":{},"表":{"docs":{},"示":{"docs":{},"活":{"docs":{},"动":{"docs":{},"，":{"docs":{},"用":{"docs":{},"边":{"docs":{},"上":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"表":{"docs":{},"示":{"docs":{},"活":{"docs":{},"动":{"docs":{},"的":{"docs":{},"持":{"docs":{},"续":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"示":{"docs":{},"活":{"docs":{},"动":{"docs":{},"的":{"docs":{},"网":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"a":{"docs":{},"o":{"docs":{},"e":{"docs":{},"网":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"层":{"docs":{},"至":{"docs":{},"多":{"docs":{},"有":{"2":{"docs":{},"i":{"docs":{},"−":{"1":{"2":{"docs":{},"^":{"docs":{},"{":{"docs":{},"i":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"深":{"docs":{},"度":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"满":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"，":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"这":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"新":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"加":{"docs":{},"入":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"中":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"取":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"树":{"docs":{},"作":{"docs":{},"为":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"构":{"docs":{},"造":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"新":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"且":{"docs":{},"置":{"docs":{},"新":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"为":{"docs":{},"其":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"上":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"之":{"docs":{},"和":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"图":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"，":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"7":{"0":{"docs":{},"分":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"等":{"docs":{},"级":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"过":{"3":{"docs":{},"次":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"这":{"docs":{},"显":{"docs":{},"然":{"docs":{},"不":{"docs":{},"合":{"docs":{},"理":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"学":{"docs":{},"习":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"学":{"docs":{},"生":{"docs":{},"的":{"docs":{},"成":{"docs":{},"绩":{"docs":{},"一":{"docs":{},"般":{"docs":{},"如":{"docs":{},"下":{"docs":{},"分":{"docs":{},"布":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"好":{"docs":{},"地":{"docs":{},"实":{"docs":{},"现":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"，":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"特":{"docs":{},"化":{"docs":{},"地":{"docs":{},"实":{"docs":{},"现":{"docs":{},"存":{"docs":{},"储":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"或":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"，":{"docs":{},"想":{"docs":{},"要":{"docs":{},"根":{"docs":{},"据":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"同":{"docs":{},"时":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"出":{"docs":{},"边":{"docs":{},"和":{"docs":{},"入":{"docs":{},"边":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"即":{"docs":{},"按":{"docs":{},"照":{"docs":{},"我":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"设":{"docs":{},"置":{"docs":{},"两":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"一":{"docs":{},"条":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"，":{"docs":{},"一":{"docs":{},"条":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"其":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"也":{"docs":{},"是":{"docs":{},"明":{"docs":{},"显":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"以":{"docs":{},"该":{"docs":{},"表":{"docs":{},"头":{"docs":{},"为":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"出":{"docs":{},"边":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"很":{"docs":{},"明":{"docs":{},"显":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"出":{"docs":{},"边":{"docs":{},"也":{"docs":{},"是":{"docs":{},"其":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"边":{"docs":{},"，":{"docs":{},"可":{"docs":{},"是":{"docs":{},"在":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"设":{"docs":{},"立":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"分":{"docs":{},"别":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"这":{"docs":{},"是":{"docs":{},"很":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{},"都":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"空":{"docs":{},"间":{"docs":{},"是":{"docs":{},"其":{"docs":{},"一":{"docs":{},"，":{"docs":{},"其":{"docs":{},"二":{"docs":{},"是":{"docs":{},"添":{"docs":{},"加":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"新":{"docs":{},"建":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"对":{"docs":{},"效":{"docs":{},"率":{"docs":{},"没":{"docs":{},"有":{"docs":{},"太":{"docs":{},"大":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"但":{"docs":{},"如":{"docs":{},"果":{"docs":{},"n":{"docs":{},"值":{"docs":{},"以":{"docs":{},"万":{"docs":{},"记":{"docs":{},"时":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"能":{"docs":{},"省":{"docs":{},"下":{"docs":{},"上":{"docs":{},"万":{"docs":{},"次":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"表":{"docs":{},"查":{"docs":{},"找":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"都":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"循":{"docs":{},"环":{"docs":{},"控":{"docs":{},"制":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"否":{"docs":{},"越":{"docs":{},"界":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"看":{"docs":{},"似":{"docs":{},"是":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"完":{"docs":{},"全":{"docs":{},"可":{"docs":{},"以":{"docs":{},"消":{"docs":{},"除":{"docs":{},"这":{"docs":{},"一":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"块":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"要":{"docs":{},"查":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"块":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"分":{"docs":{},"块":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"是":{"docs":{},"块":{"docs":{},"间":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"利":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"、":{"docs":{},"插":{"docs":{},"值":{"docs":{},"等":{"docs":{},"算":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"分":{"docs":{},"以":{"docs":{},"下":{"docs":{},"两":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"：":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}},"平":{"docs":{},"均":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"和":{"docs":{},"术":{"docs":{},"语":{"docs":{},"中":{"docs":{},"，":{"docs":{},"曾":{"docs":{},"经":{"docs":{},"提":{"docs":{},"到":{"docs":{},"过":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"极":{"docs":{},"小":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"子":{"docs":{},"图":{"docs":{},"，":{"docs":{},"同":{"docs":{},"含":{"docs":{},"有":{"docs":{},"图":{"docs":{},"中":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"但":{"docs":{},"只":{"docs":{},"有":{"docs":{},"足":{"docs":{},"以":{"docs":{},"构":{"docs":{},"成":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"的":{"docs":{},"n":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"活":{"docs":{},"动":{"docs":{},"之":{"docs":{},"间":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"会":{"docs":{},"受":{"docs":{},"到":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"约":{"docs":{},"束":{"docs":{},"，":{"docs":{},"如":{"docs":{},"其":{"docs":{},"中":{"docs":{},"某":{"docs":{},"些":{"docs":{},"活":{"docs":{},"动":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"些":{"docs":{},"活":{"docs":{},"动":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"才":{"docs":{},"能":{"docs":{},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{},"就":{"docs":{},"像":{"docs":{},"电":{"docs":{},"影":{"docs":{},"制":{"docs":{},"作":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"人":{"docs":{},"员":{"docs":{},"到":{"docs":{},"位":{"docs":{},"进":{"docs":{},"驻":{"docs":{},"场":{"docs":{},"地":{"docs":{},"时":{"docs":{},"，":{"docs":{},"导":{"docs":{},"演":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"拍":{"docs":{},"摄":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"场":{"docs":{},"地":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"造":{"docs":{},"一":{"docs":{},"辆":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"发":{"docs":{},"动":{"docs":{},"机":{"docs":{},"是":{"docs":{},"决":{"docs":{},"定":{"docs":{},"最":{"docs":{},"短":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"流":{"docs":{},"程":{"docs":{},"图":{"docs":{},"获":{"docs":{},"得":{"docs":{},"最":{"docs":{},"短":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"分":{"docs":{},"析":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"找":{"docs":{},"到":{"docs":{},"当":{"docs":{},"中":{"docs":{},"最":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"流":{"docs":{},"程":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"流":{"docs":{},"程":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"短":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"2":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.05714285714285714}},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"其":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"比":{"docs":{},"该":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"，":{"docs":{},"其":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"比":{"docs":{},"该":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"其":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"比":{"docs":{},"该":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"较":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"在":{"docs":{},"该":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"两":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"，":{"docs":{},"其":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"比":{"docs":{},"该":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"较":{"docs":{},"大":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"与":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"从":{"docs":{},"开":{"docs":{},"始":{"docs":{},"学":{"docs":{},"习":{"docs":{},"以":{"docs":{},"来":{"docs":{},"就":{"docs":{},"一":{"docs":{},"直":{"docs":{},"想":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"知":{"docs":{},"识":{"docs":{},"框":{"docs":{},"架":{"docs":{},"的":{"docs":{},"梳":{"docs":{},"理":{"docs":{},"与":{"docs":{},"总":{"docs":{},"结":{"docs":{},"，":{"docs":{},"但":{"docs":{},"苦":{"docs":{},"于":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"类":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"久":{"docs":{},"久":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"开":{"docs":{},"始":{"docs":{},"行":{"docs":{},"动":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"现":{"docs":{},"在":{"docs":{},"也":{"docs":{},"都":{"docs":{},"还":{"docs":{},"搞":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"真":{"docs":{},"正":{"docs":{},"的":{"docs":{},"界":{"docs":{},"限":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"里":{"docs":{},"，":{"docs":{},"毕":{"docs":{},"竟":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"与":{"docs":{},"算":{"docs":{},"法":{"docs":{},"总":{"docs":{},"是":{"docs":{},"交":{"docs":{},"织":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"但":{"docs":{},"一":{"docs":{},"直":{"docs":{},"停":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"办":{"docs":{},"法":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"就":{"docs":{},"按":{"docs":{},"暂":{"docs":{},"定":{"docs":{},"的":{"docs":{},"分":{"docs":{},"类":{"docs":{},"进":{"docs":{},"行":{"docs":{},"总":{"docs":{},"结":{"docs":{},"，":{"docs":{},"到":{"docs":{},"后":{"docs":{},"面":{"docs":{},"发":{"docs":{},"现":{"docs":{},"可":{"docs":{},"以":{"docs":{},"完":{"docs":{},"善":{"docs":{},"时":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"完":{"docs":{},"善":{"docs":{},"。":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"都":{"docs":{},"归":{"docs":{},"类":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"，":{"docs":{},"建":{"docs":{},"立":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"上":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"也":{"docs":{},"归":{"docs":{},"类":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"其":{"docs":{},"余":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"就":{"docs":{},"归":{"docs":{},"类":{"docs":{},"在":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"总":{"docs":{},"结":{"docs":{},"，":{"docs":{},"将":{"docs":{},"只":{"docs":{},"包":{"docs":{},"括":{"docs":{},"基":{"docs":{},"本":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"、":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{},"和":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"新":{"docs":{},"的":{"docs":{},"分":{"docs":{},"类":{"docs":{},"将":{"docs":{},"按":{"docs":{},"照":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"：":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"串":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"判":{"docs":{},"定":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"学":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"原":{"docs":{},"则":{"docs":{},"：":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"事":{"docs":{},"先":{"docs":{},"准":{"docs":{},"备":{"docs":{},"多":{"docs":{},"个":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"若":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"则":{"docs":{},"对":{"docs":{},"该":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"使":{"docs":{},"用":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"当":{"docs":{},"不":{"docs":{},"再":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"存":{"docs":{},"储":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"结":{"docs":{},"点":{"docs":{},"也":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"每":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"非":{"docs":{},"所":{"docs":{},"有":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"能":{"docs":{},"用":{"docs":{},"上":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"n":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"链":{"docs":{},"表":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"2":{"docs":{},"n":{"docs":{},"−":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"=":{"docs":{},"n":{"docs":{},"+":{"1":{"2":{"docs":{},"n":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}},"docs":{}},"docs":{}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"夫":{"docs":{},"曼":{"docs":{},"编":{"docs":{},"码":{"docs":{},"，":{"docs":{},"发":{"docs":{},"送":{"docs":{},"方":{"docs":{},"和":{"docs":{},"接":{"docs":{},"收":{"docs":{},"方":{"docs":{},"必":{"docs":{},"须":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"夫":{"docs":{},"曼":{"docs":{},"编":{"docs":{},"码":{"docs":{},"规":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"编":{"docs":{},"解":{"docs":{},"码":{"docs":{},"才":{"docs":{},"行":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"图":{"docs":{},"：":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}},"面":{"docs":{},"的":{"docs":{},"图":{"docs":{},"：":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"权":{"docs":{},"值":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"无":{"docs":{},"穷":{"docs":{},"大":{"docs":{},"。":{"docs":{},"之":{"docs":{},"所":{"docs":{},"以":{"docs":{},"是":{"docs":{},"无":{"docs":{},"穷":{"docs":{},"大":{"docs":{},"，":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"权":{"docs":{},"值":{"docs":{},"既":{"docs":{},"可":{"docs":{},"能":{"docs":{},"取":{"docs":{},"正":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"取":{"docs":{},"负":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"取":{"0":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"对":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"来":{"docs":{},"代":{"docs":{},"表":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"图":{"docs":{},"：":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"阵":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"形":{"docs":{},"成":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"称":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"对":{"docs":{},"称":{"docs":{},"线":{"docs":{},"为":{"docs":{},"左":{"docs":{},"上":{"docs":{},"到":{"docs":{},"右":{"docs":{},"下":{"docs":{},"的":{"docs":{},"斜":{"docs":{},"线":{"docs":{},"，":{"docs":{},"即":{"docs":{},"(":{"docs":{},"v":{"0":{"docs":{},"v":{"docs":{},"_":{"0":{"docs":{},"v":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"表":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"对":{"docs":{},"它":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"只":{"docs":{},"有":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"表":{"docs":{},"查":{"docs":{},"找":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"表":{"docs":{},"长":{"docs":{},"很":{"docs":{},"大":{"docs":{},"时":{"docs":{},"毫":{"docs":{},"无":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"会":{"docs":{},"花":{"docs":{},"费":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"反":{"docs":{},"观":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"有":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"、":{"docs":{},"插":{"docs":{},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{},"和":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"查":{"docs":{},"找":{"docs":{},"等":{"docs":{},"能":{"docs":{},"够":{"docs":{},"大":{"docs":{},"大":{"docs":{},"减":{"docs":{},"少":{"docs":{},"时":{"docs":{},"间":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"优":{"docs":{},"化":{"docs":{},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"也":{"docs":{},"能":{"docs":{},"像":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"那":{"docs":{},"样":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"好":{"docs":{},"用":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"答":{"docs":{},"案":{"docs":{},"就":{"docs":{},"是":{"docs":{},"索":{"docs":{},"引":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{},"这":{"docs":{},"种":{"docs":{},"图":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"上":{"docs":{},"带":{"docs":{},"有":{"docs":{},"权":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"这":{"docs":{},"些":{"docs":{},"权":{"docs":{},"值":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"来":{"docs":{},"。":{"docs":{},"其":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{},"原":{"docs":{},"本":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"0":{"docs":{},",":{"1":{"docs":{},"值":{"docs":{},"用":{"docs":{},"权":{"docs":{},"值":{"docs":{},"代":{"docs":{},"替":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"规":{"docs":{},"则":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"是":{"docs":{},"指":{"docs":{},"两":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"边":{"docs":{},"上":{"docs":{},"权":{"docs":{},"值":{"docs":{},"之":{"docs":{},"和":{"docs":{},"最":{"docs":{},"少":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"路":{"docs":{},"径":{"docs":{},"上":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"是":{"docs":{},"源":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"是":{"docs":{},"终":{"docs":{},"点":{"docs":{},"。":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"重":{"docs":{},"点":{"docs":{},"想":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"以":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"集":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"以":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"的":{"docs":{},"逆":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"二":{"docs":{},"者":{"docs":{},"都":{"docs":{},"很":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"连":{"docs":{},"接":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"用":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"长":{"docs":{},"较":{"docs":{},"大":{"docs":{},"，":{"docs":{},"且":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"分":{"docs":{},"布":{"docs":{},"比":{"docs":{},"较":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"插":{"docs":{},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"性":{"docs":{},"能":{"docs":{},"比":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"要":{"docs":{},"好":{"docs":{},"得":{"docs":{},"多":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"数":{"docs":{},"据":{"docs":{},"极":{"docs":{},"端":{"docs":{},"不":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"用":{"docs":{},"插":{"docs":{},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{},"未":{"docs":{},"必":{"docs":{},"是":{"docs":{},"很":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"优":{"docs":{},"化":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"插":{"docs":{},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"而":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"优":{"docs":{},"化":{"docs":{},"方":{"docs":{},"法":{"docs":{},"则":{"docs":{},"是":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"与":{"docs":{},"插":{"docs":{},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"查":{"docs":{},"找":{"docs":{},"也":{"docs":{},"是":{"docs":{},"改":{"docs":{},"变":{"docs":{},"查":{"docs":{},"找":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"以":{"docs":{},"及":{"docs":{},"每":{"docs":{},"次":{"docs":{},"更":{"docs":{},"新":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"其":{"docs":{},"构":{"docs":{},"造":{"docs":{},"足":{"docs":{},"够":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"效":{"docs":{},"率":{"docs":{},"是":{"docs":{},"很":{"docs":{},"不":{"docs":{},"错":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"种":{"docs":{},"极":{"docs":{},"端":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"用":{"docs":{},"于":{"docs":{},"构":{"docs":{},"造":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"原":{"docs":{},"本":{"docs":{},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"想":{"docs":{},"而":{"docs":{},"知":{"docs":{},"，":{"docs":{},"由":{"docs":{},"此":{"docs":{},"序":{"docs":{},"列":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"将":{"docs":{},"是":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"斜":{"docs":{},"树":{"docs":{},"，":{"docs":{},"其":{"docs":{},"查":{"docs":{},"找":{"docs":{},"过":{"docs":{},"程":{"docs":{},"与":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"判":{"docs":{},"断":{"docs":{},"就":{"docs":{},"只":{"docs":{},"筛":{"docs":{},"选":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"这":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"这":{"docs":{},"当":{"docs":{},"然":{"docs":{},"不":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"希":{"docs":{},"望":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"块":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{},"项":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"项":{"docs":{},"：":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"将":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"内":{"docs":{},"存":{"docs":{},"释":{"docs":{},"放":{"docs":{},"随":{"docs":{},"后":{"docs":{},"修":{"docs":{},"改":{"docs":{},"其":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"指":{"docs":{},"针":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"或":{"docs":{},"只":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"若":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"其":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"删":{"docs":{},"除":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"子":{"docs":{},"树":{"docs":{},"直":{"docs":{},"接":{"docs":{},"接":{"docs":{},"到":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"链":{"docs":{},"上":{"docs":{},"（":{"docs":{},"不":{"docs":{},"管":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"还":{"docs":{},"是":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"）":{"docs":{},"；":{"docs":{},"若":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"其":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"删":{"docs":{},"除":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"子":{"docs":{},"树":{"docs":{},"直":{"docs":{},"接":{"docs":{},"接":{"docs":{},"到":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"链":{"docs":{},"上":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"既":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"又":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"比":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"阶":{"docs":{},"b":{"docs":{},"树":{"docs":{},"，":{"docs":{},"最":{"docs":{},"多":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"：":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"排":{"docs":{},"序":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"主":{"docs":{},"要":{"docs":{},"受":{"docs":{},"三":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"：":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"将":{"docs":{},"这":{"docs":{},"几":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"按":{"docs":{},"优":{"docs":{},"先":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"好":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"比":{"docs":{},"较":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"位":{"docs":{},"数":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"齐":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"多":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"单":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"本":{"docs":{},"总":{"docs":{},"结":{"docs":{},"只":{"docs":{},"总":{"docs":{},"结":{"docs":{},"单":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"法":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"要":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"表":{"docs":{},"本":{"docs":{},"身":{"docs":{},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},"n":{"docs":{"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"不":{"docs":{},"论":{"docs":{},"什":{"docs":{},"么":{"docs":{},"情":{"docs":{},"况":{"docs":{},"都":{"docs":{},"是":{"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"平":{"docs":{},"均":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"。":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"坏":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"表":{"docs":{},"是":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"：":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"好":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"表":{"docs":{},"本":{"docs":{},"身":{"docs":{},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"一":{"docs":{},"共":{"docs":{},"比":{"docs":{},"较":{"docs":{},"了":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},"n":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"图":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"一":{"docs":{},"般":{"docs":{},"不":{"docs":{},"止":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"就":{"docs":{},"有":{"docs":{},"需":{"docs":{},"求":{"docs":{},"选":{"docs":{},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"有":{"docs":{},"迪":{"docs":{},"杰":{"docs":{},"斯":{"docs":{},"特":{"docs":{},"拉":{"docs":{},"算":{"docs":{},"法":{"docs":{},"和":{"docs":{},"弗":{"docs":{},"洛":{"docs":{},"伊":{"docs":{},"德":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"在":{"docs":{},"适":{"docs":{},"用":{"docs":{},"条":{"docs":{},"件":{"docs":{},"上":{"docs":{},"有":{"docs":{},"些":{"docs":{},"区":{"docs":{},"别":{"docs":{},"。":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"网":{"docs":{},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"就":{"docs":{},"是":{"docs":{},"指":{"docs":{},"两":{"docs":{},"定":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"边":{"docs":{},"数":{"docs":{},"最":{"docs":{},"少":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"研":{"docs":{},"究":{"docs":{},"非":{"docs":{},"网":{"docs":{},"图":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"意":{"docs":{},"义":{"docs":{},"并":{"docs":{},"不":{"docs":{},"大":{"docs":{},"；":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"种":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"如":{"docs":{},"施":{"docs":{},"工":{"docs":{},"过":{"docs":{},"程":{"docs":{},"、":{"docs":{},"生":{"docs":{},"产":{"docs":{},"流":{"docs":{},"程":{"docs":{},"、":{"docs":{},"软":{"docs":{},"件":{"docs":{},"开":{"docs":{},"发":{"docs":{},"、":{"docs":{},"教":{"docs":{},"学":{"docs":{},"安":{"docs":{},"排":{"docs":{},"等":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"为":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"“":{"docs":{},"活":{"docs":{},"动":{"docs":{},"”":{"docs":{},"的":{"docs":{},"子":{"docs":{},"工":{"docs":{},"程":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"产":{"docs":{},"过":{"docs":{},"程":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"轴":{"docs":{},"，":{"docs":{},"其":{"docs":{},"各":{"docs":{},"个":{"docs":{},"项":{"docs":{},"目":{"docs":{},"的":{"docs":{},"生":{"docs":{},"产":{"docs":{},"时":{"docs":{},"间":{"docs":{},"是":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"只":{"docs":{},"要":{"docs":{},"是":{"docs":{},"整":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"都":{"docs":{},"完":{"docs":{},"全":{"docs":{},"在":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"在":{"docs":{},"完":{"docs":{},"全":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"对":{"docs":{},"于":{"docs":{},"该":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"该":{"docs":{},"过":{"docs":{},"程":{"docs":{},"就":{"docs":{},"是":{"docs":{},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"棵":{"docs":{},"具":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"按":{"docs":{},"层":{"docs":{},"序":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"编":{"docs":{},"号":{"docs":{},"为":{"docs":{},"i":{"docs":{},"(":{"1":{"docs":{},"⩽":{"docs":{},"i":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},")":{"docs":{},"i":{"docs":{},"(":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"t":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"其":{"docs":{},"终":{"docs":{},"端":{"docs":{},"结":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"0":{"docs":{},"n":{"docs":{},"_":{"0":{"docs":{},"n":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"度":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"2":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"则":{"docs":{},"n":{"0":{"docs":{},"=":{"docs":{},"n":{"2":{"docs":{},"+":{"1":{"docs":{},"n":{"docs":{},"_":{"0":{"docs":{},"=":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{},"+":{"1":{"docs":{},"n":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"+":{"1":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}},"docs":{}}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}},"docs":{}}},"docs":{}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"效":{"docs":{},"率":{"docs":{},"的":{"docs":{},"提":{"docs":{},"升":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"快":{"docs":{},"排":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}},"比":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}},"a":{"docs":{},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"进":{"docs":{},"行":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"：":{"docs":{},"从":{"docs":{},"a":{"docs":{},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"中":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"入":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"删":{"docs":{},"除":{"docs":{},"此":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"删":{"docs":{},"除":{"docs":{},"以":{"docs":{},"此":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"为":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"重":{"docs":{},"复":{"docs":{},"此":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"输":{"docs":{},"出":{"docs":{},"全":{"docs":{},"部":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"或":{"docs":{},"者":{"docs":{},"a":{"docs":{},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"入":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html","tf":0.25}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"维":{"docs":{},"导":{"docs":{},"图":{"docs":{"./":{"ref":"./","tf":0.04}}}}}},"数":{"docs":{},"据":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}},"结":{"docs":{},"构":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/数据结构.html":{"ref":"数据结构/数据结构.html","tf":10},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}},"元":{"docs":{},"素":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"是":{"docs":{},"一":{"docs":{},"对":{"docs":{},"一":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}},"定":{"docs":{},"义":{"docs":{"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304}}}}}}}},"对":{"docs":{},"象":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}}},"项":{"1":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}},"2":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}},"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644}},"结":{"docs":{},"构":{"docs":{"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}}},"定":{"docs":{},"义":{"docs":{"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}},"域":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}},"类":{"docs":{},"型":{"docs":{},"定":{"docs":{},"义":{"docs":{"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703}}}}}}},"组":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":10}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}},",":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04}}},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}}}},"学":{"docs":{},"定":{"docs":{},"义":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}},"模":{"docs":{},"型":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}},"字":{"1":{"0":{"1":{"0":{"1":{"0":{"docs":{},"、":{"2":{"2":{"2":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"1":{"5":{"1":{"5":{"1":{"5":{"docs":{},"、":{"1":{"0":{"1":{"0":{"1":{"0":{"docs":{},"、":{"2":{"2":{"2":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"docs":{}},"docs":{}},"2":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"3":{"3":{"3":{"docs":{},"，":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"9":{"9":{"9":{"docs":{},"、":{"2":{"2":{"2":{"docs":{},"、":{"3":{"3":{"3":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}},"输":{"docs":{},"出":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"docs":{}},"docs":{}},"9":{"9":{"9":{"docs":{},"、":{"3":{"3":{"3":{"docs":{},"、":{"1":{"1":{"1":{"docs":{},"先":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"(":{"docs":{},"从":{"docs":{},"栈":{"docs":{},"底":{"docs":{},"开":{"docs":{},"始":{"docs":{},")":{"docs":{},"：":{"9":{"9":{"9":{"docs":{},"、":{"3":{"3":{"3":{"docs":{},"、":{"1":{"1":{"1":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"docs":{}},"docs":{}},"docs":{},"分":{"docs":{},"析":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"算":{"docs":{},"法":{"docs":{},"都":{"docs":{},"将":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"引":{"docs":{},"入":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"条":{"docs":{},"件":{"docs":{},"（":{"docs":{},"如":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"等":{"docs":{},"）":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"完":{"docs":{},"整":{"docs":{},"思":{"docs":{},"想":{"docs":{},"并":{"docs":{},"给":{"docs":{},"出":{"docs":{},"核":{"docs":{},"心":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"而":{"docs":{},"一":{"docs":{},"些":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"将":{"docs":{},"作":{"docs":{},"为":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"后":{"docs":{},"面":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"有":{"docs":{},"且":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"直":{"docs":{},"接":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"后":{"docs":{},"继":{"docs":{},"元":{"docs":{},"素":{"docs":{},".":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}},"非":{"docs":{},"根":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"有":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"k":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}},"docs":{}}}}}}}}}}}}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"均":{"docs":{},"为":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"定":{"docs":{},"义":{"docs":{},"必":{"docs":{},"须":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"满":{"docs":{},"足":{"docs":{},"时":{"docs":{},"递":{"docs":{},"归":{"docs":{},"不":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"即":{"docs":{},"不":{"docs":{},"再":{"docs":{},"引":{"docs":{},"用":{"docs":{},"自":{"docs":{},"身":{"docs":{},"而":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"退":{"docs":{},"出":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{},"最":{"docs":{},"多":{"docs":{},"有":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"2":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"不":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"最":{"docs":{},"多":{"docs":{},"有":{"docs":{},"。":{"docs":{},"没":{"docs":{},"有":{"docs":{},"子":{"docs":{},"树":{"docs":{},"或":{"docs":{},"者":{"docs":{},"有":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"都":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"其":{"docs":{},"左":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"其":{"docs":{},"左":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"小":{"docs":{},"顶":{"docs":{},"堆":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"都":{"docs":{},"在":{"docs":{},"比":{"docs":{},"较":{"docs":{},"完":{"docs":{},"i":{"docs":{},"和":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"后":{"docs":{},"停":{"docs":{},"止":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"简":{"docs":{},"介":{"docs":{"./":{"ref":"./","tf":10},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}},"单":{"docs":{},"回":{"docs":{},"路":{"docs":{},"（":{"docs":{},"环":{"docs":{},"）":{"docs":{},"：":{"docs":{},"除":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"回":{"docs":{},"路":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"简":{"docs":{},"单":{"docs":{},"回":{"docs":{},"路":{"docs":{},"或":{"docs":{},"简":{"docs":{},"单":{"docs":{},"环":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"：":{"docs":{},"在":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"若":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"到":{"docs":{},"其":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"边":{"docs":{},"，":{"docs":{},"且":{"docs":{},"同":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"图":{"docs":{},"为":{"docs":{},"简":{"docs":{},"单":{"docs":{},"图":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"路":{"docs":{},"径":{"docs":{},"：":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"称":{"docs":{},"为":{"docs":{},"简":{"docs":{},"单":{"docs":{},"路":{"docs":{},"径":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":10}},"法":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":10}}}}}}}},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"（":{"docs":{},"相":{"docs":{},"对":{"docs":{},"）":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"交":{"docs":{},"换":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"去":{"docs":{},"。":{"docs":{"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.04},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176},"算法/算法.html":{"ref":"算法/算法.html","tf":10},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}},"：":{"docs":{},"同":{"docs":{},"样":{"docs":{},"使":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"改":{"docs":{},"变":{"docs":{},"部":{"docs":{},"分":{"docs":{},"调":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"其":{"docs":{},"于":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"在":{"docs":{},"于":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"同":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"性":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}},"代":{"docs":{},"码":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}},"过":{"docs":{},"程":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}},"终":{"docs":{},"于":{"docs":{},"，":{"docs":{},"在":{"docs":{},"读":{"docs":{},"过":{"docs":{},"《":{"docs":{},"算":{"docs":{},"法":{"docs":{},"》":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"我":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"与":{"docs":{},"算":{"docs":{},"法":{"docs":{},"又":{"docs":{},"有":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"了":{"docs":{},"解":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.04}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}},"*":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.047619047619047616},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}},"e":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517}},")":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}},":":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.03225806451612903},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.017699115044247787}}},"：":{"docs":{},"删":{"docs":{},"除":{"docs":{},"栈":{"docs":{},"s":{"docs":{},"中":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"值":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"中":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"值":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}},"若":{"docs":{},"栈":{"docs":{},"存":{"docs":{},"在":{"docs":{},"且":{"docs":{},"非":{"docs":{},"空":{"docs":{},"，":{"docs":{},"用":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{},"s":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"存":{"docs":{},"在":{"docs":{},"且":{"docs":{},"非":{"docs":{},"空":{"docs":{},"，":{"docs":{},"用":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}},"=":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}},"p":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}},"t":{"docs":{},"v":{"docs":{},",":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"其":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"常":{"docs":{},"量":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"的":{"docs":{},"串":{"docs":{},"t":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":0.16666666666666666}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}},",":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}},";":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}},",":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}}}}}}},",":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0392156862745098},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.020618556701030927}}},")":{"docs":{"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}}},"t":{"docs":{},"v":{"docs":{},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}},"p":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.045454545454545456},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}}},"r":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.017241379310344827},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}},"c":{"docs":{},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}},"t":{"docs":{},"r":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}}}}},"r":{"docs":{},"c":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},";":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}}}}}},")":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}},";":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.027522935779816515},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}},"/":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.08955223880597014}}},"q":{"docs":{},",":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.041666666666666664},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}}}}}}}},"v":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"若":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"在":{"docs":{},"g":{"docs":{},"中":{"docs":{},"无":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"w":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"若":{"docs":{},"w":{"docs":{},"是":{"docs":{},"v":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},")":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}},"a":{"docs":{},",":{"docs":{"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.020833333333333332}},")":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}}}}}}}},"t":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.021108179419525065}},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}},"r":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}},")":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"m":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},"l":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}},"g":{"docs":{},"l":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.017241379310344827}}}}}}}}}}}},"h":{"docs":{},")":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},",":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}},"d":{"docs":{},")":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}},"a":{"2":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"docs":{},"_":{"1":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.03225806451612903},"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.02654867256637168},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"2":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"docs":{},"n":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.03225806451612903},"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.02654867256637168},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.08771929824561403},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.04424778761061947},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"{":{"docs":{},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.03508771929824561},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.017699115044247787}},"+":{"1":{"docs":{},"}":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.03508771929824561},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.017699115044247787}}}},"docs":{}}}}},"d":{"docs":{},"t":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},"j":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}}}}}}}}}},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}}}}},"c":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.041666666666666664},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.050505050505050504},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.04225352112676056}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}}}}},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.020833333333333332},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}}}}},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.017699115044247787},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"外":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}},"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"的":{"docs":{},"链":{"docs":{},"式":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}}}}},"外":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"i":{"docs":{},"+":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"是":{"docs":{},"a":{"docs":{},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}},"docs":{}},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"在":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"序":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}},"是":{"docs":{},"第":{"docs":{},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}},"的":{"docs":{},"直":{"docs":{},"接":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}},"后":{"docs":{},"继":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}},"存":{"docs":{},"储":{"docs":{},"映":{"docs":{},"像":{"docs":{},")":{"docs":{},"链":{"docs":{},"结":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},",":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}}}}}}}}}}},"`":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"序":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"是":{"docs":{},"a":{"docs":{},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}},"docs":{}}}},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}},"+":{"1":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{}},"−":{"1":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{}}},"[":{"0":{"docs":{},"]":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664}},")":{"docs":{},";":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}},"1":{"0":{"docs":{},"]":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},"docs":{},"]":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},")":{"docs":{},";":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}},"4":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"docs":{}},"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.044444444444444446}}}}},"}":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}},"}":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}},"​":{"docs":{},"a":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"​":{"docs":{},"​":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"​":{"docs":{},"​":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.03125}},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}}}}},"v":{"docs":{},"l":{"docs":{},"树":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":10}}}}}}}},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"中":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"表":{"docs":{},"示":{"docs":{},"活":{"docs":{},"动":{"docs":{},"之":{"docs":{},"间":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"某":{"docs":{},"种":{"docs":{},"制":{"docs":{},"约":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"演":{"docs":{},"职":{"docs":{},"人":{"docs":{},"员":{"docs":{},"确":{"docs":{},"定":{"docs":{},"了":{"docs":{},"，":{"docs":{},"场":{"docs":{},"地":{"docs":{},"也":{"docs":{},"联":{"docs":{},"系":{"docs":{},"好":{"docs":{},"了":{"docs":{},"，":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"拍":{"docs":{},"摄":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"就":{"docs":{},"是":{"docs":{},"a":{"docs":{},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"回":{"docs":{},"路":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"网":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"入":{"docs":{},"边":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"称":{"docs":{},"为":{"docs":{},"始":{"docs":{},"点":{"docs":{},"或":{"docs":{},"源":{"docs":{},"点":{"docs":{},"；":{"docs":{},"没":{"docs":{},"有":{"docs":{},"出":{"docs":{},"边":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"称":{"docs":{},"为":{"docs":{},"终":{"docs":{},"点":{"docs":{},"或":{"docs":{},"汇":{"docs":{},"点":{"docs":{},"。":{"docs":{},"正":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"a":{"docs":{},"o":{"docs":{},"e":{"docs":{},"网":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"源":{"docs":{},"点":{"docs":{},"和":{"docs":{},"汇":{"docs":{},"点":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"有":{"docs":{},"：":{"docs":{},"在":{"docs":{},"某":{"docs":{},"定":{"docs":{},"点":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"事":{"docs":{},"件":{"docs":{},"发":{"docs":{},"生":{"docs":{},"后":{"docs":{},"，":{"docs":{},"从":{"docs":{},"该":{"docs":{},"定":{"docs":{},"点":{"docs":{},"出":{"docs":{},"发":{"docs":{},"的":{"docs":{},"各":{"docs":{},"活":{"docs":{},"动":{"docs":{},"才":{"docs":{},"能":{"docs":{},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"各":{"docs":{},"活":{"docs":{},"动":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"事":{"docs":{},"件":{"docs":{},"才":{"docs":{},"能":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"串":{"docs":{},"s":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"将":{"docs":{},"串":{"docs":{},"清":{"docs":{},"空":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"*":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"将":{"docs":{},"栈":{"docs":{},"清":{"docs":{},"空":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"q":{"docs":{},")":{"docs":{},"：":{"docs":{},"将":{"docs":{},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"清":{"docs":{},"空":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"树":{"docs":{},"t":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"树":{"docs":{},"t":{"docs":{},"清":{"docs":{},"为":{"docs":{},"空":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.04477611940298507}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}},"s":{"docs":{},"t":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":0.16666666666666666}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}},"代":{"docs":{},"码":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.021739130434782608}}}},"u":{"docs":{},"r":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}},";":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}},"_":{"docs":{},"e":{"docs":{},")":{"docs":{},"：":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"是":{"docs":{},"树":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"此":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}},"若":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"是":{"docs":{},"树":{"docs":{},"t":{"docs":{},"的":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"最":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232}}}}}}}}}}},")":{"docs":{},"：":{"docs":{},"其":{"docs":{},"中":{"docs":{},"p":{"docs":{},"指":{"docs":{},"向":{"docs":{},"树":{"docs":{},"t":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"i":{"docs":{},"为":{"docs":{},"所":{"docs":{},"指":{"docs":{},"结":{"docs":{},"点":{"docs":{},"p":{"docs":{},"的":{"docs":{},"度":{"docs":{},"加":{"docs":{},"上":{"1":{"docs":{},"，":{"docs":{},"非":{"docs":{},"空":{"docs":{},"树":{"docs":{},"c":{"docs":{},"与":{"docs":{},"t":{"docs":{},"不":{"docs":{},"相":{"docs":{},"交":{"docs":{},"，":{"docs":{},"操":{"docs":{},"作":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"插":{"docs":{},"入":{"docs":{},"c":{"docs":{},"为":{"docs":{},"树":{"docs":{},"t":{"docs":{},"中":{"docs":{},"p":{"docs":{},"所":{"docs":{},"指":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"(":{"docs":{},"*":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.04221635883905013}}}}}},"d":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.04054054054054054},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703}}}}}}}}}}}},";":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}},")":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"*":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"栈":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"它":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"q":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"它":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{},"：":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"树":{"docs":{},"t":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"(":{"docs":{},"*":{"docs":{},"g":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"图":{"docs":{},"g":{"docs":{},"存":{"docs":{},"在":{"docs":{},"则":{"docs":{},"销":{"docs":{},"毁":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"q":{"docs":{},",":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}},"s":{"docs":{},"q":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}}}}}}},"&":{"docs":{},"q":{"docs":{},",":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"：":{"docs":{},"按":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"来":{"docs":{},"构":{"docs":{},"造":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"(":{"docs":{},"*":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"*":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"&":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101}}}}}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},")":{"docs":{},"：":{"docs":{},"对":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"调":{"docs":{},"用":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"的":{"docs":{},"对":{"docs":{},"比":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}}},"(":{"docs":{},"g":{"docs":{},"l":{"docs":{},",":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}}}}}}}}}}}},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}}}}}}}}},"=":{"docs":{},"[":{"0":{"1":{"4":{"7":{"5":{"8":{"1":{"0":{"1":{"2":{"1":{"6":{"1":{"0":{"3":{"6":{"4":{"7":{"9":{"1":{"1":{"1":{"5":{"4":{"3":{"0":{"3":{"1":{"4":{"6":{"8":{"1":{"2":{"7":{"6":{"3":{"0":{"2":{"5":{"3":{"5":{"9":{"5":{"4":{"1":{"2":{"0":{"3":{"5":{"7":{"1":{"1":{"8":{"7":{"4":{"5":{"3":{"0":{"7":{"5":{"9":{"1":{"0":{"9":{"6":{"3":{"5":{"7":{"0":{"2":{"6":{"1":{"2":{"1":{"1":{"8":{"5":{"7":{"5":{"2":{"0":{"4":{"1":{"6":{"1":{"5":{"1":{"2":{"9":{"1":{"1":{"9":{"6":{"4":{"0":{"docs":{},"]":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"[":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}},"​":{"docs":{},"⎣":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎡":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"4":{"docs":{},"​":{"7":{"docs":{},"​":{"5":{"docs":{},"​":{"8":{"docs":{},"​":{"1":{"0":{"docs":{},"​":{"1":{"2":{"docs":{},"​":{"1":{"6":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"4":{"docs":{},"​":{"7":{"docs":{},"​":{"9":{"docs":{},"​":{"1":{"1":{"docs":{},"​":{"1":{"5":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"4":{"docs":{},"​":{"3":{"docs":{},"​":{"0":{"docs":{},"​":{"3":{"docs":{},"​":{"1":{"docs":{},"​":{"4":{"docs":{},"​":{"6":{"docs":{},"​":{"8":{"docs":{},"​":{"1":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"7":{"docs":{},"​":{"6":{"docs":{},"​":{"3":{"docs":{},"​":{"0":{"docs":{},"​":{"2":{"docs":{},"​":{"5":{"docs":{},"​":{"3":{"docs":{},"​":{"5":{"docs":{},"​":{"9":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"5":{"docs":{},"​":{"4":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"0":{"docs":{},"​":{"3":{"docs":{},"​":{"5":{"docs":{},"​":{"7":{"docs":{},"​":{"1":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"8":{"docs":{},"​":{"7":{"docs":{},"​":{"4":{"docs":{},"​":{"5":{"docs":{},"​":{"3":{"docs":{},"​":{"0":{"docs":{},"​":{"7":{"docs":{},"​":{"5":{"docs":{},"​":{"9":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"0":{"docs":{},"​":{"9":{"docs":{},"​":{"6":{"docs":{},"​":{"3":{"docs":{},"​":{"5":{"docs":{},"​":{"7":{"docs":{},"​":{"0":{"docs":{},"​":{"2":{"docs":{},"​":{"6":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"2":{"docs":{},"​":{"1":{"1":{"docs":{},"​":{"8":{"docs":{},"​":{"5":{"docs":{},"​":{"7":{"docs":{},"​":{"5":{"docs":{},"​":{"2":{"docs":{},"​":{"0":{"docs":{},"​":{"4":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"6":{"docs":{},"​":{"1":{"5":{"docs":{},"​":{"1":{"2":{"docs":{},"​":{"9":{"docs":{},"​":{"1":{"1":{"docs":{},"​":{"9":{"docs":{},"​":{"6":{"docs":{},"​":{"4":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⎦":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎤":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"​":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"​":{"docs":{},"⎣":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎡":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"5":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"3":{"docs":{},"​":{"7":{"docs":{},"​":{"5":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"5":{"docs":{},"​":{"3":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"1":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"0":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"3":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"5":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"0":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"9":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"3":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"5":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"9":{"docs":{},"​":{"5":{"docs":{},"​":{"7":{"docs":{},"​":{"0":{"docs":{},"​":{"4":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"4":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⎦":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎤":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"−":{"1":{"docs":{},"=":{"docs":{},"[":{"0":{"1":{"5":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"1":{"0":{"3":{"7":{"5":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"5":{"3":{"0":{"docs":{},"∞":{"1":{"7":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"7":{"docs":{},"∞":{"0":{"2":{"docs":{},"∞":{"3":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"5":{"1":{"2":{"0":{"3":{"6":{"9":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"7":{"docs":{},"∞":{"3":{"0":{"docs":{},"∞":{"5":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"3":{"6":{"0":{"2":{"7":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"9":{"5":{"2":{"0":{"4":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"7":{"4":{"0":{"docs":{},"]":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"e":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.025},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.0603448275862069}},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}},":":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.03225806451612903},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.017699115044247787}}},"：":{"docs":{},"若":{"docs":{},"栈":{"docs":{},"s":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"e":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"s":{"docs":{},"中":{"docs":{},"并":{"docs":{},"成":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"e":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"中":{"docs":{},"并":{"docs":{},"成":{"docs":{},"为":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},")":{"docs":{},"e":{"docs":{},")":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"具":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"，":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"中":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"序":{"docs":{},"列":{"docs":{},"v":{"1":{"docs":{},"v":{"docs":{},"_":{"1":{"docs":{},"v":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"v":{"2":{"docs":{},"v":{"docs":{},"_":{"2":{"docs":{},"v":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"v":{"docs":{},"n":{"docs":{},"v":{"docs":{},"_":{"docs":{},"n":{"docs":{},"v":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"满":{"docs":{},"足":{"docs":{},"若":{"docs":{},"从":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"到":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"有":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"必":{"docs":{},"在":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"序":{"docs":{},"列":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}},";":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"q":{"docs":{},",":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}},"s":{"docs":{},"q":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}}}}}}},"&":{"docs":{},"q":{"docs":{},",":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}},"e":{"docs":{},";":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}},"类":{"docs":{},"型":{"docs":{},"根":{"docs":{},"据":{"docs":{},"实":{"docs":{},"际":{"docs":{},"情":{"docs":{},"况":{"docs":{},"而":{"docs":{},"定":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04}}}}}}}}}}}}}}}}},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.05},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.041666666666666664},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}},",":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219}}},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.014084507042253521}}}}}}}},"d":{"docs":{},"g":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.056179775280898875},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664},"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}},"e":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}},"o":{"docs":{},"d":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.03333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}}}}}}}}}}}},")":{"docs":{},"：":{"docs":{},"即":{"docs":{},"弧":{"docs":{},"a":{"docs":{},"k":{"docs":{},"a":{"docs":{},"_":{"docs":{},"k":{"docs":{},"a":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"最":{"docs":{},"早":{"docs":{},"发":{"docs":{},"生":{"docs":{},"时":{"docs":{},"间":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}},"晚":{"docs":{},"发":{"docs":{},"生":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"推":{"docs":{},"迟":{"docs":{},"工":{"docs":{},"期":{"docs":{},"的":{"docs":{},"最":{"docs":{},"晚":{"docs":{},"开":{"docs":{},"工":{"docs":{},"时":{"docs":{},"间":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},":":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533}}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0316622691292876}}}},"t":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"e":{"docs":{},",":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"v":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"[":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}},"l":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"i":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"j":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}},"k":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},")":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}},"g":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.05063291139240506}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"l":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}},"t":{"docs":{},",":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}},",":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"q":{"docs":{},",":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0392156862745098},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.04225352112676056}},"s":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}},"）":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}},"）":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}},")":{"docs":{},"。":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}},"上":{"docs":{},"有":{"docs":{},"三":{"docs":{},"条":{"docs":{},"通":{"docs":{},"道":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"b":{"docs":{},"和":{"docs":{},"d":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"选":{"docs":{},"择":{"docs":{},"h":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}},".":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}}}}}}}}}},"l":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.034482758620689655},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.03333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.03017241379310345}},")":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}},",":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}},")":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}}},"i":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.04838709677419355},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.02654867256637168},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.047619047619047616},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}},"s":{"docs":{"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":0.16666666666666666}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"*":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"q":{"docs":{},")":{"docs":{},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"q":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{},"：":{"docs":{},"构":{"docs":{},"造":{"docs":{},"空":{"docs":{},"树":{"docs":{},"t":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}},"t":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.08},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.09420289855072464},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.06956521739130435},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.057692307692307696},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.05660377358490566},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.05660377358490566},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.016260162601626018},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.09090909090909091},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.13793103448275862},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.05},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.10810810810810811},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.06779661016949153},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.045454545454545456},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0821917808219178},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.0945945945945946},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.09803921568627451},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.0625},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.06060606060606061},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.06741573033707865},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.09859154929577464},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.26666666666666666},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.16666666666666666},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.12903225806451613},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.12903225806451613},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.08695652173913043},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.039473684210526314},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.09523809523809523},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.0625},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.04032258064516129},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.02666666666666667},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.039603960396039604},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.11235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.1111111111111111},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.13725490196078433},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.08247422680412371},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.04878048780487805},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.13636363636363635},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.08333333333333333},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.1568627450980392},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.04918032786885246},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.075},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.03879310344827586}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}},"t":{"docs":{},"r":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}},"_":{"docs":{},"k":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"(":{"docs":{},"*":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},"v":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"*":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02}}}}}}}},"l":{"docs":{},")":{"docs":{},";":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}},"t":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}},"y":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}},"i":{"docs":{},"n":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}},"−":{"docs":{},"i":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"从":{"docs":{},"n":{"docs":{},"−":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"n":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}},"docs":{}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.05333333333333334}},")":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}},";":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}},"]":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.02666666666666667}},")":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}}}}}}}}}},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"称":{"docs":{},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"a":{"docs":{},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025}},"：":{"docs":{},"其":{"docs":{},"中":{"docs":{},"p":{"docs":{},"指":{"docs":{},"向":{"docs":{},"树":{"docs":{},"t":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"i":{"docs":{},"为":{"docs":{},"所":{"docs":{},"指":{"docs":{},"结":{"docs":{},"点":{"docs":{},"p":{"docs":{},"的":{"docs":{},"度":{"docs":{},"，":{"docs":{},"操":{"docs":{},"作":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"删":{"docs":{},"除":{"docs":{},"t":{"docs":{},"中":{"docs":{},"p":{"docs":{},"所":{"docs":{},"指":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.08333333333333333},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},"f":{"docs":{},"(":{"0":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.05}},"i":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}},"docs":{}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"1":{"docs":{},")":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}},"{":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}},"2":{"docs":{},")":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}},"{":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}},"docs":{}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"*":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}},"(":{"docs":{},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}},"*":{"docs":{},"p":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}}}},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"[":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}}}},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164}}},"!":{"docs":{},"s":{"docs":{},")":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}},"p":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}}},"(":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}},"e":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"l":{"docs":{},"t":{"docs":{},"v":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.038461538461538464},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.03773584905660377},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.03773584905660377},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.06060606060606061},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.06896551724137931},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.05405405405405406},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.025423728813559324},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.01818181818181818},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0273972602739726},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0392156862745098},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.020833333333333332},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.020202020202020204},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.02247191011235955},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.028169014084507043}}}}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}},"+":{"1":{"docs":{},"n":{"docs":{},"−":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"中":{"docs":{},"选":{"docs":{},"取":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"作":{"docs":{},"为":{"docs":{},"有":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"并":{"docs":{},"和":{"docs":{},"第":{"docs":{},"i":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{},"+":{"docs":{},")":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.02531645569620253},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}},"l":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.021108179419525065},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.03225806451612903},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.04878048780487805},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.03773584905660377},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.16},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.10666666666666667},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.0891089108910891},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.047619047619047616},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0392156862745098},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.07216494845360824}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"l":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}},"w":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.043478260869565216},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}},",":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.04639175257731959}}},")":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.044444444444444446},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.020618556701030927}},";":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}},";":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}}}}}}}}}}}}}}},"g":{"docs":{},"_":{"docs":{},"{":{"docs":{},"[":{"docs":{},"{":{"docs":{},"m":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886}},";":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.047619047619047616},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}},")":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}},":":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}},")":{"docs":{},"：":{"docs":{},"串":{"docs":{},"s":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"1":{"docs":{},"⩽":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"docs":{},"−":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"+":{"1":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"+":{"1":{"1":{"docs":{},"⩽":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"−":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"。":{"docs":{},"从":{"docs":{},"串":{"docs":{},"s":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"第":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"起":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.038461538461538464},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.03773584905660377},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.03773584905660377}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},",":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{},":":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"l":{"docs":{},",":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}},":":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}},"）":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}},"f":{"docs":{},"o":{"docs":{},"结":{"docs":{},"构":{"docs":{},"：":{"docs":{},"即":{"docs":{},"后":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"（":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827}}}}}}}}}}},"(":{"docs":{},"j":{"docs":{},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}},",":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},";":{"docs":{"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}}}}}}}}}}}},"h":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},":":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0158311345646438}}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219}}}},"r":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},"t":{"docs":{},"e":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},")":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"v":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"k":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}},"u":{"docs":{},"t":{"docs":{},"）":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"，":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}},"k":{"docs":{},";":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.041666666666666664},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.030303030303030304}},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}}}}}},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.04032258064516129}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"~":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.07258064516129033}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"3":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"docs":{},"{":{"3":{"docs":{},"/":{"2":{"docs":{},"}":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"3":{"docs":{},"/":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}},"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.024193548387096774}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.06451612903225806}},"~":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"·":{"docs":{},"·":{"docs":{},"·":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.03508771929824561},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.02654867256637168},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},"，":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143}}}}}},"其":{"docs":{},"中":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"，":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"下":{"docs":{},"标":{"docs":{},"代":{"docs":{},"表":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"位":{"docs":{},"序":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"此":{"docs":{},"次":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"在":{"docs":{},"某":{"docs":{},"个":{"docs":{},"位":{"docs":{},"序":{"docs":{},"处":{"docs":{},"失":{"docs":{},"败":{"docs":{},"后":{"docs":{},"，":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"此":{"docs":{},"位":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"所":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"位":{"docs":{},"序":{"docs":{},"开":{"docs":{},"始":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"d":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"1":{"docs":{},"，":{"2":{"2":{"2":{"docs":{},"，":{"3":{"3":{"3":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"m":{"docs":{},"−":{"1":{"docs":{},"m":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}}}}},"docs":{}}}},"前":{"docs":{},"两":{"docs":{},"种":{"docs":{},"删":{"docs":{},"除":{"docs":{},"情":{"docs":{},"况":{"docs":{},"都":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"第":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"则":{"docs":{},"是":{"docs":{},"导":{"docs":{},"致":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"因":{"docs":{},"素":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"代":{"docs":{},"表":{"docs":{},"九":{"docs":{},"个":{"docs":{},"村":{"docs":{},"子":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"要":{"docs":{},"将":{"docs":{},"九":{"docs":{},"个":{"docs":{},"村":{"docs":{},"子":{"docs":{},"连":{"docs":{},"通":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"边":{"docs":{},"及":{"docs":{},"权":{"docs":{},"表":{"docs":{},"示":{"docs":{},"村":{"docs":{},"子":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"，":{"docs":{},"而":{"docs":{},"没":{"docs":{},"有":{"docs":{},"边":{"docs":{},"及":{"docs":{},"权":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"那":{"docs":{},"两":{"docs":{},"个":{"docs":{},"村":{"docs":{},"子":{"docs":{},"因":{"docs":{},"为":{"docs":{},"有":{"docs":{},"高":{"docs":{},"山":{"docs":{},"或":{"docs":{},"湖":{"docs":{},"泊":{"docs":{},"无":{"docs":{},"法":{"docs":{},"连":{"docs":{},"通":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"如":{"docs":{},"何":{"docs":{},"让":{"docs":{},"九":{"docs":{},"个":{"docs":{},"村":{"docs":{},"子":{"docs":{},"用":{"docs":{},"最":{"docs":{},"少":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"连":{"docs":{},"通":{"docs":{},"起":{"docs":{},"来":{"docs":{},"呢":{"docs":{},"？":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"d":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"找":{"docs":{},"出":{"docs":{},"从":{"docs":{},"某":{"docs":{},"点":{"docs":{},"到":{"docs":{},"某":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"距":{"docs":{},"离":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"某":{"docs":{},"种":{"docs":{},"性":{"docs":{},"质":{"docs":{},"：":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}},"形":{"docs":{},"式":{"docs":{},"如":{"docs":{},"下":{"docs":{},":":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}},"他":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"与":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"一":{"docs":{},"点":{"docs":{},"是":{"docs":{},"：":{"docs":{},"在":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"条":{"docs":{},"弧":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"需":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"出":{"docs":{},"边":{"docs":{},"，":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"边":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"过":{"docs":{},"程":{"docs":{},"大":{"docs":{},"概":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{},"方":{"docs":{},"法":{"docs":{},"与":{"docs":{},"十":{"docs":{},"字":{"docs":{},"链":{"docs":{},"表":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"有":{"docs":{},"一":{"docs":{},"点":{"docs":{},"点":{"docs":{},"区":{"docs":{},"别":{"docs":{},"。":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"标":{"docs":{},"记":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"：":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"将":{"docs":{},"相":{"docs":{},"距":{"docs":{},"某":{"docs":{},"个":{"docs":{},"“":{"docs":{},"增":{"docs":{},"量":{"docs":{},"”":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"才":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"内":{"docs":{},"分":{"docs":{},"别":{"docs":{},"进":{"docs":{},"行":{"docs":{},"直":{"docs":{},"接":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"基":{"docs":{},"本":{"docs":{},"有":{"docs":{},"序":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"局":{"docs":{},"部":{"docs":{},"有":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"面":{"docs":{},"临":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"问":{"docs":{},"题":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"：":{"docs":{"算法/排序/堆排序/堆排序算法/堆排序算法.html":{"ref":"算法/排序/堆排序/堆排序算法/堆排序算法.html","tf":0.2}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}},"操":{"docs":{},"作":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}},"j":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.046875}}}}},"docs":{}}},"一":{"docs":{},"空":{"docs":{},"链":{"docs":{},"表":{"docs":{},"l":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}}}}}}}}},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}},"删":{"docs":{},"除":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"l":{"docs":{},"中":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"l":{"docs":{},"中":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}},"操":{"docs":{},"作":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":10}}}},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}},"仅":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"或":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}},"既":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"也":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}},"否":{"docs":{},"则":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"功":{"docs":{},",":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.046875}}}}}}}}},"如":{"docs":{},"果":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},">":{"docs":{},"n":{"docs":{},"，":{"docs":{},"则":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"，":{"docs":{},"无":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"是":{"docs":{},"结":{"docs":{},"点":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},">":{"docs":{},"n":{"docs":{},"，":{"docs":{},"则":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"无":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"（":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"为":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"其":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"是":{"docs":{},"结":{"docs":{},"点":{"2":{"docs":{},"i":{"2":{"docs":{},"i":{"2":{"docs":{},"i":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"功":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"删":{"docs":{},"除":{"docs":{},"位":{"docs":{},"置":{"docs":{},"不":{"docs":{},"合":{"docs":{},"理":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{},"不":{"docs":{},"合":{"docs":{},"理":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"是":{"docs":{},"出":{"docs":{},"生":{"docs":{},"年":{"docs":{},"份":{"docs":{},"，":{"docs":{},"假":{"docs":{},"定":{"docs":{},"所":{"docs":{},"有":{"docs":{},"统":{"docs":{},"计":{"docs":{},"的":{"docs":{},"人":{"docs":{},"的":{"docs":{},"出":{"docs":{},"生":{"docs":{},"年":{"docs":{},"份":{"docs":{},"都":{"docs":{},"在":{"1":{"9":{"8":{"0":{"docs":{},"年":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"1":{"9":{"8":{"0":{"docs":{},"年":{"docs":{},"的":{"docs":{},"人":{"docs":{},"数":{"docs":{},"就":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"1":{"9":{"8":{"0":{"docs":{},"−":{"1":{"9":{"8":{"0":{"docs":{},"=":{"0":{"1":{"9":{"8":{"0":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"年":{"docs":{},"龄":{"docs":{},"，":{"docs":{},"假":{"docs":{},"定":{"docs":{},"所":{"docs":{},"有":{"docs":{},"人":{"docs":{},"的":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"都":{"docs":{},"低":{"docs":{},"于":{"1":{"5":{"0":{"docs":{},"岁":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"1":{"5":{"0":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"0":{"docs":{},"岁":{"docs":{},"人":{"docs":{},"数":{"docs":{},"的":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"1":{"0":{"docs":{},"岁":{"docs":{},"的":{"docs":{},"人":{"docs":{},"数":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"1":{"0":{"docs":{},"的":{"docs":{},"人":{"docs":{},"数":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{},"即":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"变":{"docs":{},"化":{"docs":{},"不":{"docs":{},"可":{"docs":{},"预":{"docs":{},"料":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"很":{"docs":{},"小":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"最":{"docs":{},"好":{"docs":{},"是":{"docs":{},"用":{"docs":{},"链":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"在":{"docs":{},"可":{"docs":{},"控":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"建":{"docs":{},"议":{"docs":{},"使":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"栈":{"docs":{},"会":{"docs":{},"更":{"docs":{},"好":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"要":{"docs":{},"减":{"docs":{},"少":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"进":{"docs":{},"行":{"docs":{},"读":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"让":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"不":{"docs":{},"止":{"docs":{},"保":{"docs":{},"存":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"树":{"docs":{},"这":{"docs":{},"种":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"树":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"需":{"docs":{},"要":{"docs":{},"能":{"docs":{},"够":{"docs":{},"找":{"docs":{},"到":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"，":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"=":{"1":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"，":{"docs":{},"则":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"，":{"docs":{},"无":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"i":{"docs":{},">":{"1":{"docs":{},"i":{"docs":{},">":{"1":{"docs":{},"i":{"docs":{},">":{"1":{"docs":{},"，":{"docs":{},"则":{"docs":{},"其":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"是":{"docs":{},"结":{"docs":{},"点":{"docs":{},"[":{"docs":{},"i":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}},"对":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"（":{"docs":{},"其":{"docs":{},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"2":{"docs":{},"n":{"docs":{},"]":{"docs":{},"+":{"1":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"2":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{},"度":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"有":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"即":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"只":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"种":{"docs":{},"极":{"docs":{},"端":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"k":{"docs":{},"k":{"docs":{},"k":{"docs":{},"的":{"docs":{},"右":{"docs":{},"斜":{"docs":{},"树":{"docs":{},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"有":{"docs":{},"k":{"docs":{},"k":{"docs":{},"k":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"配":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"单":{"docs":{},"元":{"docs":{},"空":{"docs":{},"间":{"docs":{},"却":{"docs":{},"有":{"2":{"docs":{},"k":{"docs":{},"−":{"1":{"2":{"docs":{},"^":{"docs":{},"k":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"网":{"docs":{},"图":{"docs":{},"：":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}}}}}}},"将":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"链":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"对":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"某":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"紧":{"docs":{},"靠":{"docs":{},"在":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"前":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"称":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"，":{"docs":{},"而":{"docs":{},"紧":{"docs":{},"靠":{"docs":{},"在":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"后":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"称":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"中":{"docs":{},"指":{"docs":{},"向":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"；":{"docs":{},"所":{"docs":{},"有":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"中":{"docs":{},"指":{"docs":{},"向":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"后":{"docs":{},"继":{"docs":{},"；":{"docs":{},"既":{"docs":{},"是":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"或":{"docs":{},"者":{"docs":{},"后":{"docs":{},"继":{"docs":{},"的":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"指":{"docs":{},"针":{"docs":{},"设":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"用":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"常":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"或":{"docs":{},"查":{"docs":{},"找":{"docs":{},"结":{"docs":{},"点":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"某":{"docs":{},"种":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"和":{"docs":{},"后":{"docs":{},"继":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"采":{"docs":{},"用":{"docs":{},"线":{"docs":{},"索":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"就":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"不":{"docs":{},"错":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"按":{"docs":{},"照":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"构":{"docs":{},"建":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"索":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"：":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"可":{"docs":{},"能":{"docs":{},"指":{"docs":{},"向":{"docs":{},"它":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"指":{"docs":{},"向":{"docs":{},"它":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"后":{"docs":{},"继":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"凭":{"docs":{},"借":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"对":{"docs":{},"其":{"docs":{},"属":{"docs":{},"性":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"整":{"docs":{},"数":{"docs":{},"据":{"docs":{},"传":{"docs":{},"输":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"即":{"docs":{},"按":{"docs":{},"照":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"字":{"docs":{},"符":{"docs":{},"进":{"docs":{},"行":{"docs":{},"传":{"docs":{},"输":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"编":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"将":{"docs":{},"一":{"docs":{},"串":{"docs":{},"文":{"docs":{},"字":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},"通":{"docs":{},"过":{"docs":{},"网":{"docs":{},"络":{"docs":{},"传":{"docs":{},"输":{"docs":{},"给":{"docs":{},"别":{"docs":{},"人":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"英":{"docs":{},"文":{"docs":{},"字":{"docs":{},"符":{"docs":{},"总":{"docs":{},"共":{"docs":{},"只":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"六":{"docs":{},"个":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"频":{"docs":{},"率":{"docs":{},"关":{"docs":{},"系":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"知":{"docs":{},"道":{"docs":{},"某":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{},"，":{"docs":{},"就":{"docs":{},"等":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"入":{"docs":{},"度":{"docs":{},"和":{"docs":{},"出":{"docs":{},"度":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"不":{"docs":{},"是":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"其":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"好":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"由":{"docs":{},"于":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"是":{"docs":{},"会":{"docs":{},"受":{"docs":{},"影":{"docs":{},"响":{"docs":{},"的":{"docs":{},"，":{"docs":{},"影":{"docs":{},"响":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"查":{"docs":{},"找":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"：":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"何":{"docs":{},"选":{"docs":{},"择":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"以":{"docs":{},"下":{"docs":{},"因":{"docs":{},"素":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"：":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"输":{"docs":{},"出":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"后":{"docs":{},"，":{"docs":{},"调":{"docs":{},"整":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"元":{"docs":{},"素":{"docs":{},"称":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"堆":{"docs":{"算法/排序/堆排序/堆排序算法/堆排序算法.html":{"ref":"算法/排序/堆排序/堆排序算法/堆排序算法.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"无":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"构":{"docs":{},"建":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"堆":{"docs":{"算法/排序/堆排序/堆排序算法/堆排序算法.html":{"ref":"算法/排序/堆排序/堆排序算法/堆排序算法.html","tf":0.2}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}},"将":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"l":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"返":{"docs":{},"回":{"docs":{},"给":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}}}}}}},"清":{"docs":{},"空":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}},"要":{"docs":{},"插":{"docs":{},"入":{"docs":{},"元":{"docs":{},"素":{"docs":{},"填":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{},"i":{"docs":{},"处":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"l":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"返":{"docs":{},"回":{"docs":{},"给":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}}},"清":{"docs":{},"空":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}},"p":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"与":{"docs":{},"前":{"docs":{},"一":{"docs":{},"新":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}}}}}}},"q":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"e":{"docs":{},",":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}}},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}},"下":{"docs":{},"一":{"docs":{},"结":{"docs":{},"点":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"q":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"e":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}},"组":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"欲":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"备":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"新":{"docs":{},"申":{"docs":{},"请":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"指":{"docs":{},"向":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"待":{"docs":{},"插":{"docs":{},"入":{"docs":{},"元":{"docs":{},"素":{"docs":{},"位":{"docs":{},"序":{"docs":{},"上":{"docs":{},"的":{"docs":{},"值":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"备":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"的":{"docs":{},"位":{"docs":{},"移":{"docs":{},"量":{"docs":{},"变":{"docs":{},"成":{"docs":{},"平":{"docs":{},"方":{"docs":{},"：":{"docs":{},"f":{"docs":{},"i":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},")":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"相":{"docs":{},"连":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"长":{"docs":{},"子":{"docs":{},"之":{"docs":{},"外":{"docs":{},"的":{"docs":{},"其":{"docs":{},"他":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"全":{"docs":{},"部":{"docs":{},"断":{"docs":{},"开":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"六":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"按":{"docs":{},"照":{"docs":{},"权":{"docs":{},"重":{"docs":{},"先":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"夫":{"docs":{},"曼":{"docs":{},"树":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"地":{"docs":{},"址":{"docs":{},"查":{"docs":{},"找":{"docs":{},"值":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}}}}}},"顶":{"docs":{},"点":{"docs":{},"a":{"docs":{},"放":{"docs":{},"置":{"docs":{},"在":{"docs":{},"最":{"docs":{},"顶":{"docs":{},"层":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}},"并":{"docs":{},"用":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"值":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"的":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"l":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}},"链":{"docs":{},"表":{"docs":{},"l":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}},"模":{"docs":{},"：":{"docs":{},"根":{"docs":{},"据":{"docs":{},"上":{"docs":{},"表":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"出":{"docs":{},"以":{"docs":{},"下":{"docs":{},"数":{"docs":{},"学":{"docs":{},"模":{"docs":{},"型":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}},"抽":{"docs":{},"象":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"对":{"docs":{},"象":{"docs":{},"集":{"docs":{},"合":{"docs":{},"为":{"docs":{},"(":{"docs":{},"a":{"1":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}},"docs":{}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}},"docs":{}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"长":{"docs":{},"度":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04}}}}}}},"索":{"docs":{},"引":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{},"索":{"docs":{},"引":{"docs":{},"项":{"docs":{},"集":{"docs":{},"合":{"docs":{},"组":{"docs":{},"织":{"docs":{},"为":{"docs":{},"线":{"docs":{},"性":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"包":{"docs":{},"括":{"docs":{},"三":{"docs":{},"种":{"docs":{},"线":{"docs":{},"性":{"docs":{},"索":{"docs":{},"引":{"docs":{},"：":{"docs":{},"稠":{"docs":{},"密":{"docs":{},"索":{"docs":{},"引":{"docs":{},"、":{"docs":{},"分":{"docs":{},"块":{"docs":{},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"倒":{"docs":{},"排":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":10}}}}}}},"索":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":10}},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/线索二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/线索二叉树/难点操作/难点操作.html","tf":0.25}}}}}}}}}},"若":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"记":{"docs":{},"为":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}},"链":{"docs":{},"表":{"docs":{},"记":{"docs":{},"为":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"无":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"此":{"docs":{},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{},"主":{"docs":{},"串":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},",":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"p":{"docs":{},"为":{"docs":{},"空":{"docs":{},",":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.046875}}}}}}}}}}},"是":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"不":{"docs":{},"高":{"docs":{},"于":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"符":{"docs":{},"号":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"符":{"docs":{},"号":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"并":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"与":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"符":{"docs":{},"号":{"docs":{},"比":{"docs":{},"较":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"于":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"符":{"docs":{},"号":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"符":{"docs":{},"号":{"docs":{},"入":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"，":{"docs":{},"将":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"依":{"docs":{},"次":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"左":{"docs":{},"括":{"docs":{},"号":{"docs":{},"（":{"docs":{},"左":{"docs":{},"括":{"docs":{},"号":{"docs":{},"需":{"docs":{},"要":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"括":{"docs":{},"号":{"docs":{},"不":{"docs":{},"用":{"docs":{},"写":{"docs":{},"到":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"中":{"docs":{},"）":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"括":{"docs":{},"号":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"输":{"docs":{},"出":{"docs":{},"到":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"中":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}},"符":{"docs":{},"号":{"docs":{},"，":{"docs":{},"则":{"docs":{},"判":{"docs":{},"断":{"docs":{},"其":{"docs":{},"与":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"符":{"docs":{},"号":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}},"将":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"运":{"docs":{},"算":{"docs":{},"结":{"docs":{},"果":{"docs":{},"进":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"：":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"森":{"docs":{},"林":{"docs":{},"，":{"docs":{},"则":{"docs":{},"从":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"若":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"断":{"docs":{},"开":{"docs":{},"与":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"连":{"docs":{},"线":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"立":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"其":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"即":{"docs":{},"e":{"docs":{},"等":{"docs":{},"级":{"docs":{},"；":{"docs":{},"若":{"docs":{},"不":{"docs":{},"成":{"docs":{},"立":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"即":{"docs":{},"判":{"docs":{},"断":{"docs":{},"a":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"入":{"docs":{},"其":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"即":{"docs":{},"d":{"docs":{},"等":{"docs":{},"级":{"docs":{},"；":{"docs":{},"若":{"docs":{},"不":{"docs":{},"成":{"docs":{},"立":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"即":{"docs":{},"判":{"docs":{},"断":{"docs":{},"a":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"设":{"docs":{},"计":{"docs":{},"长":{"docs":{},"短":{"docs":{},"不":{"docs":{},"等":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"，":{"docs":{},"则":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"任":{"docs":{},"一":{"docs":{},"自":{"docs":{},"负":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"都":{"docs":{},"不":{"docs":{},"是":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"的":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"编":{"docs":{},"码":{"docs":{},"称":{"docs":{},"为":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"编":{"docs":{},"码":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"和":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"之":{"docs":{},"间":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"边":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"和":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"，":{"docs":{},"就":{"docs":{},"对":{"docs":{},"此":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"下":{"docs":{},"标":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"即":{"docs":{},"为":{"docs":{},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"；":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"方":{"docs":{},"向":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"上":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"均":{"docs":{},"大":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"上":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"均":{"docs":{},"小":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"结":{"docs":{},"点":{"docs":{},"值":{"docs":{},"就":{"docs":{},"进":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"继":{"docs":{},"续":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"若":{"docs":{},"大":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"结":{"docs":{},"点":{"docs":{},"值":{"docs":{},"就":{"docs":{},"进":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"继":{"docs":{},"续":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"重":{"docs":{},"复":{"docs":{},"操":{"docs":{},"作":{"2":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"重":{"docs":{},"复":{"docs":{},"操":{"docs":{},"作":{"2":{"docs":{"算法/查找/二叉排序树/插入操作/插入操作.html":{"ref":"算法/查找/二叉排序树/插入操作/插入操作.html","tf":0.16666666666666666}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"空":{"docs":{},"时":{"docs":{},"都":{"docs":{},"未":{"docs":{},"找":{"docs":{},"到":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"或":{"docs":{},"者":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"则":{"docs":{},"在":{"docs":{},"此":{"docs":{},"处":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{"算法/查找/二叉排序树/插入操作/插入操作.html":{"ref":"算法/查找/二叉排序树/插入操作/插入操作.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"即":{"docs":{},"可":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}},"docs":{}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"升":{"docs":{},"级":{"docs":{},"为":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"根":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"元":{"docs":{},"素":{"docs":{},"与":{"docs":{},"原":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"小":{"docs":{},"关":{"docs":{},"系":{"docs":{},"进":{"docs":{},"行":{"docs":{},"保":{"docs":{},"存":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}},"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"本":{"docs":{},"身":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"2":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}},"找":{"docs":{},"到":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}}}}},"未":{"docs":{},"找":{"docs":{},"到":{"docs":{},"则":{"docs":{},"根":{"docs":{},"据":{"docs":{},"处":{"docs":{},"理":{"docs":{},"散":{"docs":{},"列":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"继":{"docs":{},"续":{"docs":{},"更":{"docs":{},"新":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"，":{"docs":{},"若":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"还":{"docs":{},"是":{"docs":{},"未":{"docs":{},"找":{"docs":{},"到":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"相":{"docs":{},"对":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"是":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"则":{"docs":{},"交":{"docs":{},"换":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"与":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"将":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"往":{"docs":{},"后":{"docs":{},"移":{"docs":{},"（":{"docs":{},"即":{"docs":{},"依":{"docs":{},"次":{"docs":{},"与":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"交":{"docs":{},"换":{"docs":{},"）":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"比":{"docs":{},"要":{"docs":{},"交":{"docs":{},"换":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"更":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"或":{"docs":{},"者":{"docs":{},"全":{"docs":{},"部":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"后":{"docs":{},"移":{"docs":{},"为":{"docs":{},"止":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"与":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"即":{"docs":{},"可":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"失":{"docs":{},"败":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"l":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516}}}}}}}}}}},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"表":{"docs":{},"中":{"docs":{},"序":{"docs":{},"号":{"docs":{},"表":{"docs":{},"示":{"docs":{},"成":{"docs":{},"功":{"docs":{},";":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"l":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}},"成":{"docs":{},"功":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.03125}}}},"结":{"docs":{},"点":{"docs":{},"p":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}},"被":{"docs":{},"申":{"docs":{},"请":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"(":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},")":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"让":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"指":{"docs":{},"向":{"docs":{},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"备":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"了":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"a":{"docs":{},"n":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"a":{"1":{"docs":{"数据结构/数组/数组.html":{"ref":"数据结构/数组/数组.html","tf":0.016129032258064516},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{}}}}}}},"留":{"docs":{},"余":{"docs":{},"数":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}},"(":{"0":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}}}}}}},"⩽":{"docs":{},"k":{"docs":{},"⩽":{"docs":{},"t":{"docs":{},"⩽":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},"d":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"=":{"2":{"docs":{},"^":{"docs":{},"{":{"docs":{},"t":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}},"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{},"不":{"docs":{},"错":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"其":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"3":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"docs":{},"{":{"3":{"docs":{},"/":{"2":{"docs":{},"}":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"3":{"docs":{},"/":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"。":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}},"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}}}}},"⩽":{"docs":{},"i":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},")":{"docs":{},"i":{"docs":{},"\\":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}}}}}}}},"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}},"a":{"1":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}},"i":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.028985507246376812},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.047619047619047616},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.0297029702970297},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}},"=":{"0":{"docs":{},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}},"1":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},",":{"2":{"2":{"2":{"docs":{},",":{"docs":{},"·":{"docs":{},"·":{"docs":{},"·":{"docs":{},",":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"k":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}},"docs":{}}},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}}}},"docs":{}},"n":{"docs":{},"t":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.017241379310344827}}}}},"n":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.014084507042253521},"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091},"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125},"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1},"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","tf":0.16666666666666666},"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}},"⩾":{"0":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"docs":{}},"+":{"1":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},"d":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"=":{"2":{"docs":{},"​":{"docs":{},"t":{"docs":{},"−":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"−":{"1":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}},"docs":{}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"j":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}},"p":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}},"⩽":{"docs":{},"m":{"docs":{},")":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.029411764705882353}}}}}},"l":{"docs":{"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.030927835051546393}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.02577319587628866}}}}},"v":{"3":{"docs":{},"v":{"docs":{},"_":{"3":{"docs":{},"v":{"docs":{},"​":{"3":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}},"!":{"docs":{},"t":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728}}}},"p":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}}}}}}}}}}}}},"*":{"docs":{},"t":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"(":{"docs":{},"&":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}}}}}}}}}}}}}}}}},"k":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}},"e":{"docs":{},"y":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.045454545454545456},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"*":{"docs":{},"p":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}}},"t":{"docs":{},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}}}}},"*":{"docs":{},"p":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.03669724770642202},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}},"[":{"docs":{},"v":{"docs":{},"]":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}},"w":{"docs":{},"]":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}}}},"t":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.05013192612137203}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}},"d":{"docs":{},")":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"[":{"docs":{},"w":{"docs":{},"]":{"docs":{},")":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}},"v":{"docs":{},"]":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}},"w":{"docs":{},"]":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.03278688524590164}}}}}}}}}}},"q":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}},"e":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}},"r":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},"l":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},"{":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}},"docs":{}}}},"h":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"[":{"docs":{},"*":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"]":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}}},"s":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955}}}},"n":{"1":{"docs":{},"⩽":{"docs":{},"j":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"，":{"docs":{},"i":{"docs":{},"≠":{"docs":{},"j":{"docs":{},")":{"docs":{},"i":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}},"docs":{},"(":{"docs":{},"n":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.014084507042253521}},"\\":{"docs":{},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"0":{"docs":{},")":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}},"docs":{}}}}}}}}}},"⩾":{"0":{"docs":{},")":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}},"docs":{}}}},"=":{"0":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"时":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"空":{"docs":{},"表":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}},"n":{"docs":{},"=":{"0":{"docs":{},"n":{"docs":{},"=":{"0":{"docs":{},"时":{"docs":{},"称":{"docs":{},"为":{"docs":{},"空":{"docs":{},"树":{"docs":{},"。":{"docs":{},"在":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"非":{"docs":{},"空":{"docs":{},"树":{"docs":{},"中":{"docs":{},"：":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"1":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},")":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}},"k":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},",":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"a":{"docs":{},"i":{"docs":{},"=":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"_":{"docs":{},"i":{"docs":{},"=":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"a":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"b":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}},"(":{"1":{"docs":{},"⩽":{"docs":{},"i":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},")":{"docs":{},"有":{"docs":{},"：":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"与":{"docs":{},"同":{"docs":{},"样":{"docs":{},"深":{"docs":{},"度":{"docs":{},"的":{"docs":{},"满":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"编":{"docs":{},"号":{"docs":{},"为":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"在":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"位":{"docs":{},"置":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"称":{"docs":{},"为":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":0.14285714285714285},"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1}}},"，":{"docs":{},"其":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111}}}}}}}}}}},"m":{"docs":{},"n":{"docs":{},"n":{"docs":{},"m":{"docs":{},"，":{"docs":{},"且":{"docs":{},"a":{"docs":{},"i":{"docs":{},"=":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"_":{"docs":{},"i":{"docs":{},"=":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"a":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"b":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}},"[":{"1":{"docs":{},"]":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}},"2":{"5":{"5":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}},"docs":{}},"docs":{}},"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"\\":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"{":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"{":{"0":{"docs":{},"j":{"docs":{},"=":{"1":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"{":{"docs":{},"k":{"docs":{},"∣":{"docs":{},"(":{"1":{"docs":{},"k":{"docs":{},"j":{"docs":{},")":{"docs":{},"&":{"docs":{},"&":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"=":{"docs":{},"p":{"docs":{},"j":{"docs":{},"−":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"}":{"docs":{},"{":{"docs":{},"k":{"docs":{},"}":{"docs":{},"≠":{"docs":{},"∅":{"1":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}},"docs":{}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}},"docs":{}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}},")":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"(":{"docs":{},"a":{"docs":{},"i":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.16666666666666666},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.07692307692307693},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.09433962264150944},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.09433962264150944},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.05},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.06896551724137931},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.05084745762711865},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.06363636363636363},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0410958904109589},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.06756756756756757}},";":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}},"*":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644}}}}}}}}}}}}}}}},">":{"1":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"]":{"docs":{},"+":{"1":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"n":{"docs":{},"]":{"docs":{},"+":{"1":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}},"层":{"docs":{},"，":{"docs":{},"每":{"docs":{},"层":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"）":{"docs":{},"，":{"docs":{},"对":{"docs":{},"任":{"docs":{},"意":{"docs":{},"节":{"docs":{},"点":{"docs":{},"i":{"docs":{},"(":{"1":{"docs":{},"⩽":{"docs":{},"i":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},")":{"docs":{},"i":{"docs":{},"(":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"）":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"按":{"docs":{},"层":{"docs":{},"序":{"docs":{},"编":{"docs":{},"号":{"docs":{},"（":{"docs":{},"从":{"docs":{},"第":{"1":{"docs":{},"层":{"docs":{},"到":{"docs":{},"第":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"2":{"docs":{},"n":{"docs":{},"]":{"docs":{},"+":{"1":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"2":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}},"n":{"docs":{},"×":{"docs":{},"n":{"docs":{},"的":{"docs":{},"方":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"当":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"属":{"docs":{},"于":{"docs":{},"图":{"docs":{},"的":{"docs":{},"边":{"docs":{},"集":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"该":{"docs":{},"阵":{"docs":{},"点":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"即":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"由":{"0":{"docs":{},"和":{"1":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.0379746835443038}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.017241379310344827}}},",":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}},")":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}},";":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.02631578947368421},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888}},")":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}},",":{"docs":{"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}},";":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.043478260869565216}}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}},"k":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"k":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"1":{"docs":{},"⩽":{"docs":{},"i":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"，":{"1":{"docs":{},"⩽":{"docs":{},"j":{"docs":{},"⩽":{"docs":{},"n":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}},"三":{"docs":{},".":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705},"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555},"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333},"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732},"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142},"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142},"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"优":{"docs":{},"点":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}},"：":{"docs":{},"在":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"游":{"docs":{},"标":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"改":{"docs":{},"进":{"docs":{},"了":{"docs":{},"在":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"大":{"docs":{},"量":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"、":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"，":{"docs":{},"且":{"docs":{},"不":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"冲":{"docs":{},"突":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}},"化":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"交":{"docs":{},"换":{"docs":{"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}},"小":{"docs":{},"数":{"docs":{},"组":{"docs":{},"时":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"案":{"docs":{"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}}}}},"选":{"docs":{},"取":{"docs":{},"枢":{"docs":{},"轴":{"docs":{"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}},"递":{"docs":{},"归":{"docs":{},"操":{"docs":{},"作":{"docs":{"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}},"位":{"docs":{},"序":{"docs":{},"：":{"docs":{},"a":{"docs":{},"i":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}},"置":{"docs":{},"类":{"docs":{},"型":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"按":{"docs":{},"满":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"编":{"docs":{},"号":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}}}}}}}},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"指":{"docs":{},"定":{"docs":{},"插":{"docs":{},"入":{"docs":{},"、":{"docs":{},"删":{"docs":{},"除":{"docs":{},"或":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"概":{"docs":{},"念":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}},"字":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"情":{"docs":{},"况":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}},"长":{"docs":{},"度":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"：":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"项":{"docs":{},"的":{"docs":{},"值":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}},"码":{"docs":{},"：":{"docs":{},"用":{"docs":{},"于":{"docs":{},"标":{"docs":{},"志":{"docs":{},"一":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"项":{"docs":{},"（":{"docs":{},"字":{"docs":{},"段":{"docs":{},"）":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}},"路":{"docs":{},"径":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":10}},"算":{"docs":{},"法":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":10}}}}}}}},"可":{"docs":{},"以":{"docs":{},"快":{"docs":{},"速":{"docs":{},"地":{"docs":{},"存":{"docs":{},"取":{"docs":{},"表":{"docs":{},"中":{"docs":{},"任":{"docs":{},"一":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"再":{"docs":{},"设":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"来":{"docs":{},"指":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"端":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"来":{"docs":{},"简":{"docs":{},"化":{"docs":{},"一":{"docs":{},"些":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"数据结构/链表/循环链表/循环链表.html":{"ref":"数据结构/链表/循环链表/循环链表.html","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"终":{"docs":{},"端":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"。":{"docs":{"数据结构/链表/双向链表/双向链表.html":{"ref":"数据结构/链表/双向链表/双向链表.html","tf":0.5}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"后":{"docs":{},"四":{"docs":{},"位":{"docs":{},"作":{"docs":{},"为":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"这":{"docs":{},"四":{"docs":{},"位":{"docs":{},"数":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"些":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"如":{"docs":{},"反":{"docs":{},"转":{"docs":{},"数":{"docs":{},"字":{"docs":{},"、":{"docs":{},"右":{"docs":{},"环":{"docs":{},"位":{"docs":{},"移":{"docs":{},"、":{"docs":{},"左":{"docs":{},"环":{"docs":{},"位":{"docs":{},"移":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"前":{"docs":{},"两":{"docs":{},"数":{"docs":{},"与":{"docs":{},"后":{"docs":{},"两":{"docs":{},"数":{"docs":{},"叠":{"docs":{},"加":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"什":{"docs":{},"么":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"能":{"docs":{},"够":{"docs":{},"合":{"docs":{},"理":{"docs":{},"地":{"docs":{},"将":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"分":{"docs":{},"配":{"docs":{},"到":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"各":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"知":{"docs":{},"道":{"docs":{},"的":{"docs":{},"是":{"docs":{},"：":{"docs":{},"当":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},">":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"时":{"docs":{},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"。":{"docs":{},"当":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},">":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"时":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"指":{"docs":{},"向":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"为":{"docs":{},"空":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"成":{"docs":{},"以":{"docs":{},"下":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.020833333333333332}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"树":{"docs":{},"中":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"用":{"docs":{},"多":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"表":{"docs":{},"示":{"docs":{},"与":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"边":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"到":{"docs":{},"，":{"docs":{},"针":{"docs":{},"对":{"docs":{},"与":{"docs":{},"静":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"都":{"docs":{},"是":{"docs":{},"以":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"无":{"docs":{},"法":{"docs":{},"完":{"docs":{},"美":{"docs":{},"地":{"docs":{},"实":{"docs":{},"现":{"docs":{},"动":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"自":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"想":{"docs":{},"到":{"docs":{},"还":{"docs":{},"有":{"docs":{},"树":{"docs":{},"和":{"docs":{},"图":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"而":{"docs":{},"知":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"不":{"docs":{},"论":{"docs":{},"什":{"docs":{},"么":{"docs":{},"情":{"docs":{},"况":{"docs":{},"都":{"docs":{},"比":{"docs":{},"较":{"docs":{},"了":{"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/顺序串.html":{"ref":"数据结构/串/顺序串/顺序串.html","tf":0.3333333333333333},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216},"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":0.14285714285714285},"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.012195121951219513},"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333},"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667},"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176},"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285},"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705},"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555},"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842},"数据结构/图/边集数组/边集数组.html":{"ref":"数据结构/图/边集数组/边集数组.html","tf":0.16666666666666666},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/顺序表查找/顺序表查找.html":{"ref":"算法/查找/顺序表查找/顺序表查找.html","tf":0.2},"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":0.14285714285714285},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125},"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333},"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842},"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664},"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05},"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857},"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"ref":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","tf":0.1},"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808},"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091},"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":0.14285714285714285},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091},"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693},"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667},"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":0.14285714285714285},"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1},"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142},"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616},"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667},"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142},"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333},"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093},"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625},"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667},"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}},"位":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}},"当":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"变":{"docs":{},"化":{"docs":{},"较":{"docs":{},"大":{"docs":{},"时":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"位":{"docs":{},"序":{"docs":{},"依":{"docs":{},"次":{"docs":{},"递":{"docs":{},"增":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"为":{"docs":{},"止":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"小":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"较":{"docs":{},"小":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"较":{"docs":{},"短":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"和":{"docs":{},"较":{"docs":{},"长":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"在":{"docs":{},"都":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"序":{"docs":{},"上":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"较":{"docs":{},"短":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"较":{"docs":{},"小":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"及":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"序":{"docs":{},"上":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"才":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"退":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"j":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.046875}}},"链":{"docs":{},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"本":{"docs":{},"身":{"docs":{},"。":{"docs":{"数据结构/链表/循环链表/循环链表.html":{"ref":"数据结构/链表/循环链表/循环链表.html","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"是":{"docs":{},"位":{"docs":{},"数":{"docs":{},"较":{"docs":{},"多":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"手":{"docs":{},"机":{"docs":{},"号":{"docs":{},"码":{"docs":{},"时":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"前":{"7":{"docs":{},"位":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"概":{"docs":{},"率":{"docs":{},"较":{"docs":{},"高":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"选":{"docs":{},"择":{"docs":{},"后":{"4":{"docs":{},"位":{"docs":{},"来":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"后":{"docs":{},"，":{"docs":{},"将":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"依":{"docs":{},"次":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"并":{"docs":{},"输":{"docs":{},"出":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"移":{"docs":{},"动":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"使":{"docs":{},"得":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"；":{"docs":{},"若":{"docs":{},"是":{"docs":{},"移":{"docs":{},"动":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"使":{"docs":{},"得":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},">":{"1":{"docs":{},"n":{"docs":{},">":{"1":{"docs":{},"n":{"docs":{},">":{"1":{"docs":{},"时":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"结":{"docs":{},"点":{"docs":{},"可":{"docs":{},"分":{"docs":{},"为":{"docs":{},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},">":{"0":{"docs":{},")":{"docs":{},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},">":{"0":{"docs":{},")":{"docs":{},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},">":{"0":{"docs":{},")":{"docs":{},"个":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"交":{"docs":{},"的":{"docs":{},"有":{"docs":{},"限":{"docs":{},"集":{"docs":{},"：":{"docs":{},"t":{"1":{"docs":{},"t":{"docs":{},"_":{"1":{"docs":{},"t":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"、":{"docs":{},"t":{"2":{"docs":{},"t":{"docs":{},"_":{"2":{"docs":{},"t":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"、":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"、":{"docs":{},"t":{"docs":{},"m":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"t":{"docs":{},"​":{"docs":{},"m":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"集":{"docs":{},"合":{"docs":{},"本":{"docs":{},"身":{"docs":{},"又":{"docs":{},"是":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"称":{"docs":{},"为":{"docs":{},"根":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}},"然":{"docs":{},"，":{"docs":{},"和":{"docs":{},"前":{"docs":{},"两":{"docs":{},"种":{"docs":{},"表":{"docs":{},"示":{"docs":{},"方":{"docs":{},"法":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"依":{"docs":{},"旧":{"docs":{},"需":{"docs":{},"要":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"有":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"查":{"docs":{},"询":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{},"时":{"docs":{},"就":{"docs":{},"比":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"，":{"docs":{},"将":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"指":{"docs":{},"针":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"满":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"减":{"docs":{},"少":{"docs":{},"该":{"docs":{},"满":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"层":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"一":{"docs":{},"些":{"docs":{},"结":{"docs":{},"点":{"docs":{},"合":{"docs":{},"并":{"docs":{},"为":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"的":{"docs":{},"位":{"docs":{},"序":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"1":{"docs":{},"为":{"docs":{},"有":{"docs":{},"值":{"docs":{},"，":{"0":{"docs":{},"为":{"docs":{},"无":{"docs":{},"值":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}},"docs":{}}}}}},"docs":{}}}}}}},"顶":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}},"图":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"足":{"docs":{},"够":{"docs":{},"多":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"链":{"docs":{},"表":{"docs":{},"可":{"docs":{},"以":{"docs":{},"充":{"docs":{},"分":{"docs":{},"的":{"docs":{},"利":{"docs":{},"用":{"docs":{},"分":{"docs":{},"配":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"呢":{"docs":{},"：":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"集":{"docs":{},"内":{"docs":{},"元":{"docs":{},"素":{"docs":{},"足":{"docs":{},"够":{"docs":{},"多":{"docs":{},"，":{"docs":{},"但":{"docs":{},"边":{"docs":{},"弧":{"docs":{},"集":{"docs":{},"却":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"明":{"docs":{},"显":{"docs":{},"地":{"docs":{},"看":{"docs":{},"出":{"docs":{},"这":{"docs":{},"将":{"docs":{},"造":{"docs":{},"成":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"量":{"docs":{},"不":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"完":{"docs":{},"全":{"docs":{},"是":{"docs":{},"够":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"量":{"docs":{},"巨":{"docs":{},"大":{"docs":{},"呢":{"docs":{},"，":{"docs":{},"特":{"docs":{},"别":{"docs":{},"是":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"值":{"docs":{},"还":{"docs":{},"在":{"docs":{},"表":{"docs":{},"的":{"docs":{},"两":{"docs":{},"端":{"docs":{},"时":{"docs":{},"，":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"还":{"docs":{},"不":{"docs":{},"如":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"这":{"docs":{},"只":{"docs":{},"是":{"docs":{},"极":{"docs":{},"端":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"平":{"docs":{},"均":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"比":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"低":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"=":{"docs":{},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"=":{"docs":{},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"=":{"docs":{},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"时":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},">":{"docs":{},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},">":{"docs":{},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"时":{"docs":{},"，":{"docs":{},"新":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{},"第":{"docs":{},"m":{"docs":{},"+":{"1":{"docs":{},"m":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"a":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"时":{"docs":{},"，":{"docs":{},"新":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{},"第":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"个":{"docs":{},"到":{"docs":{},"第":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"−":{"1":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"与":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"或":{"docs":{},"者":{"docs":{},"返":{"docs":{},"回":{"docs":{},"查":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"用":{"docs":{},"一":{"docs":{},"段":{"docs":{},"地":{"docs":{},"址":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"单":{"docs":{},"元":{"docs":{},"依":{"docs":{},"次":{"docs":{},"存":{"docs":{},"储":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}}}}},"块":{"docs":{},"首":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"：":{"docs":{},"便":{"docs":{},"于":{"docs":{},"开":{"docs":{},"始":{"docs":{},"对":{"docs":{},"这":{"docs":{},"一":{"docs":{},"块":{"docs":{},"中":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"针":{"docs":{},"域":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}},"插":{"docs":{},"入":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"大":{"docs":{},"量":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"小":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"算法/查找/二叉排序树/插入操作/插入操作.html":{"ref":"算法/查找/二叉排序树/插入操作/插入操作.html","tf":10}}}},"结":{"docs":{},"点":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":10}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"方":{"docs":{},"法":{"docs":{},"还":{"docs":{},"是":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"以":{"docs":{},"及":{"docs":{},"每":{"docs":{},"次":{"docs":{},"更":{"docs":{},"新":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"须":{"docs":{},"为":{"docs":{},"表":{"docs":{},"示":{"docs":{},"表":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"关":{"docs":{},"系":{"docs":{},"而":{"docs":{},"增":{"docs":{},"加":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"树":{"docs":{},"：":{"docs":{},"与":{"docs":{},"有":{"docs":{},"序":{"docs":{},"树":{"docs":{},"相":{"docs":{},"反":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}},"向":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.020833333333333332}},"：":{"0":{"docs":{},"⩽":{"docs":{},"e":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"/":{"2":{"0":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}},"docs":{},"与":{"docs":{},"某":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"称":{"docs":{},"为":{"docs":{},"度":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"）":{"docs":{},"，":{"docs":{},"记":{"docs":{},"为":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"都":{"docs":{},"是":{"docs":{},"无":{"docs":{},"向":{"docs":{},"边":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"该":{"docs":{},"图":{"docs":{},"为":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"g":{"docs":{},"=":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{},"{":{"docs":{},"e":{"docs":{},"}":{"docs":{},")":{"docs":{},"g":{"docs":{},"=":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{},"\\":{"docs":{},"{":{"docs":{},"e":{"docs":{},"\\":{"docs":{},"}":{"docs":{},")":{"docs":{},"g":{"docs":{},"=":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{},"{":{"docs":{},"e":{"docs":{},"}":{"docs":{},")":{"docs":{},"中":{"docs":{},"从":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"到":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"）":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"序":{"docs":{},"列":{"docs":{},"：":{"docs":{},"(":{"docs":{},"v":{"docs":{},"=":{"docs":{},"v":{"docs":{},"i":{"0":{"docs":{},"v":{"docs":{},"=":{"docs":{},"v":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{},"_":{"0":{"docs":{},"}":{"docs":{},"v":{"docs":{},"=":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"无":{"docs":{},"向":{"docs":{},"边":{"docs":{},"属":{"docs":{},"于":{"docs":{},"该":{"docs":{},"图":{"docs":{},"的":{"docs":{},"边":{"docs":{},"集":{"docs":{},"中":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"互":{"docs":{},"为":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"（":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"边":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"其":{"docs":{},"值":{"docs":{},"为":{"docs":{},"各":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"度":{"docs":{},"数":{"docs":{},"和":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"简":{"docs":{},"记":{"docs":{},"为":{"docs":{},"：":{"docs":{},"e":{"docs":{},"=":{"1":{"2":{"docs":{},"∑":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},")":{"docs":{},"e":{"docs":{},"=":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"全":{"docs":{},"图":{"docs":{},"：":{"docs":{},"在":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"都":{"docs":{},"存":{"docs":{},"在":{"docs":{},"边":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"该":{"docs":{},"图":{"docs":{},"为":{"docs":{},"无":{"docs":{},"向":{"docs":{},"完":{"docs":{},"全":{"docs":{},"图":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"：":{"docs":{},"图":{"docs":{},"中":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"（":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{},"图":{"docs":{},"的":{"docs":{},"建":{"docs":{},"立":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}},"特":{"docs":{},"点":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216},"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":0.14285714285714285},"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664},"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":0.14285714285714285},"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}},"：":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.03278688524590164}}}},"殊":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}},"直":{"docs":{},"接":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"元":{"docs":{},"素":{"docs":{},"：":{"docs":{},"如":{"docs":{},"a":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{}}}}}}}}}},"后":{"docs":{},"继":{"docs":{},"元":{"docs":{},"素":{"docs":{},"：":{"docs":{},"如":{"docs":{},"a":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{}}}}}}}}}},"定":{"docs":{},"址":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":10}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html","tf":10}},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"：":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"借":{"docs":{},"助":{"docs":{},"这":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"空":{"docs":{},"间":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"移":{"docs":{},"位":{"docs":{},"。":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"到":{"docs":{},"退":{"docs":{},"回":{"docs":{},"到":{"docs":{},"a":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"所":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"表":{"docs":{},"：":{"docs":{},"当":{"docs":{},"n":{"docs":{},"=":{"0":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"docs":{}}}}}},"串":{"docs":{},"：":{"docs":{},"零":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"串":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}},"栈":{"docs":{},"：":{"docs":{},"不":{"docs":{},"含":{"docs":{},"任":{"docs":{},"何":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"称":{"docs":{},"为":{"docs":{},"空":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}},"若":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}}}}}}}}}}},"栈":{"1":{"docs":{},"的":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"为":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}}}},"docs":{}}}},"队":{"docs":{},"列":{"docs":{"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111}}}},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}},"缺":{"docs":{},"点":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}},"：":{"docs":{},"没":{"docs":{},"有":{"docs":{},"解":{"docs":{},"决":{"docs":{},"连":{"docs":{},"续":{"docs":{},"存":{"docs":{},"储":{"docs":{},"分":{"docs":{},"配":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"表":{"docs":{},"长":{"docs":{},"难":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{},"失":{"docs":{},"去":{"docs":{},"了":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"随":{"docs":{},"机":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"事":{"docs":{},"先":{"docs":{},"直":{"docs":{},"到":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"情":{"docs":{},"况":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}},"陷":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}},"造":{"docs":{},"成":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"\"":{"docs":{},"碎":{"docs":{},"片":{"docs":{},"\"":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}}}}},"难":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{"数据结构/数组/一维数组/一维数组.html":{"ref":"数据结构/数组/一维数组/一维数组.html","tf":0.017543859649122806}}}}}}}}}}}},"点":{"docs":{},"操":{"docs":{},"作":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":5},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":5},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":5},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":5},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":5},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":5},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":5},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":5},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":5},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":5},"数据结构/树/线索二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/线索二叉树/难点操作/难点操作.html","tf":5},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":5},"数据结构/图/邻接表/难点操作/难点操作.html":{"ref":"数据结构/图/邻接表/难点操作/难点操作.html","tf":5}}}}}},"#":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":0.16666666666666666},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0392156862745098},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.028169014084507043},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.027777777777777776},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.058823529411764705}}}}}}}},"/":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}},"/":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.16},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.13333333333333333},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.09615384615384616},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.09433962264150944},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.09433962264150944},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.09090909090909091},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.15},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.10810810810810811},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.15517241379310345},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.1271186440677966},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.15454545454545454},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.1506849315068493},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.13725490196078433},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.0379746835443038},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.16666666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.16161616161616163},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.1348314606741573},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.09859154929577464},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.027777777777777776},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0392156862745098},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.016666666666666666},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}},"*":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.08955223880597014}}}},"m":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.05263157894736842},"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.033707865168539325},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}},"e":{"docs":{},")":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}},"\\":{"docs":{},"{":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}},")":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"）":{"docs":{},"存":{"docs":{},"储":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"图":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"图":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"（":{"docs":{},"称":{"docs":{},"为":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"）":{"docs":{},"存":{"docs":{},"储":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.047619047619047616}},"(":{"docs":{},"m":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}},")":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808}},";":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808}}}},";":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}},",":{"docs":{"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}}}}}}}}}}}},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}},";":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.06451612903225806}}},"=":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"2":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"1":{"2":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"−":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"a":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"−":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}},"​":{"docs":{},"a":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"​":{"docs":{},"​":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"−":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"−":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}}}},")":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}},";":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}},"/":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"q":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"称":{"docs":{},"为":{"docs":{},"二":{"docs":{},"次":{"docs":{},"探":{"docs":{},"测":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"不":{"docs":{},"让":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"都":{"docs":{},"聚":{"docs":{},"集":{"docs":{},"在":{"docs":{},"某":{"docs":{},"一":{"docs":{},"块":{"docs":{},"区":{"docs":{},"域":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"+":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},")":{"docs":{},"\\":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{},"\\":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"+":{"docs":{},"d":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"d":{"docs":{},"i":{"docs":{},"=":{"1":{"2":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"^":{"2":{"docs":{},"d":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"−":{"1":{"2":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}},"docs":{}},"docs":{}}}}}},"docs":{}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"随":{"docs":{},"机":{"docs":{},"探":{"docs":{},"测":{"docs":{},"法":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.033707865168539325}},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}}}}}},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"⩽":{"docs":{},"k":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"不":{"docs":{},"小":{"docs":{},"于":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"都":{"docs":{},"有":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"k":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.027777777777777776},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}}},"t":{"docs":{},"r":{"2":{"docs":{},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}},"docs":{}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}}}}}}}},"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}}},"l":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}}},"l":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}},"s":{"docs":{},"r":{"docs":{},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955}}}}}}}}}}},"s":{"1":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}},"2":{"docs":{},")":{"docs":{},"：":{"docs":{},"用":{"docs":{},"t":{"docs":{},"返":{"docs":{},"回":{"docs":{},"由":{"docs":{},"s":{"1":{"docs":{},"和":{"docs":{},"s":{"2":{"docs":{},"联":{"docs":{},"接":{"docs":{},"而":{"docs":{},"成":{"docs":{},"的":{"docs":{},"新":{"docs":{},"串":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.07407407407407407},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.05},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.1320754716981132},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.05263157894736842},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.05504587155963303},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}},"e":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04}}}}}}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377}}}}}},"c":{"docs":{},"t":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.05714285714285714},"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.1},"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1}},")":{"docs":{},"又":{"docs":{},"叫":{"docs":{},"线":{"docs":{},"性":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"是":{"docs":{},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"技":{"docs":{},"术":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"：":{"docs":{},"从":{"docs":{},"表":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"（":{"docs":{},"或":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"）":{"docs":{},"记":{"docs":{},"录":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"进":{"docs":{},"行":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"和":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"若":{"docs":{},"某":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"和":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"查":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"（":{"docs":{},"或":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"）":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"其":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"和":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"比":{"docs":{},"较":{"docs":{},"都":{"docs":{},"不":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"所":{"docs":{},"查":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"不":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找.html":{"ref":"算法/查找/顺序表查找/顺序表查找.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"叫":{"docs":{},"折":{"docs":{},"半":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"是":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"于":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"码":{"docs":{},"有":{"docs":{},"序":{"docs":{},"（":{"docs":{},"通":{"docs":{},"常":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"有":{"docs":{},"序":{"docs":{},"）":{"docs":{},"，":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"必":{"docs":{},"须":{"docs":{},"采":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"。":{"docs":{},"折":{"docs":{},"半":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"：":{"docs":{},"在":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"取":{"docs":{},"中":{"docs":{},"间":{"docs":{},"记":{"docs":{},"录":{"docs":{},"作":{"docs":{},"为":{"docs":{},"比":{"docs":{},"较":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"若":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"与":{"docs":{},"中":{"docs":{},"间":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"功":{"docs":{},"；":{"docs":{},"若":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"中":{"docs":{},"间":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"左":{"docs":{},"半":{"docs":{},"区":{"docs":{},"继":{"docs":{},"续":{"docs":{},"查":{"docs":{},"找":{"docs":{},"；":{"docs":{},"若":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"中":{"docs":{},"间":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"右":{"docs":{},"半":{"docs":{},"区":{"docs":{},"继":{"docs":{},"续":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{},"不":{"docs":{},"断":{"docs":{},"重":{"docs":{},"复":{"docs":{},"上":{"docs":{},"述":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"查":{"docs":{},"找":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"或":{"docs":{},"所":{"docs":{},"有":{"docs":{},"查":{"docs":{},"找":{"docs":{},"区":{"docs":{},"域":{"docs":{},"无":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"失":{"docs":{},"败":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"与":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"最":{"docs":{},"小":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"比":{"docs":{},"较":{"docs":{},"后":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"核":{"docs":{},"心":{"docs":{},"就":{"docs":{},"在":{"docs":{},"于":{"docs":{},"插":{"docs":{},"值":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"公":{"docs":{},"式":{"docs":{},"：":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"黄":{"docs":{},"金":{"docs":{},"分":{"docs":{},"割":{"docs":{},"原":{"docs":{},"理":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"方":{"docs":{},"式":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"有":{"docs":{},"称":{"docs":{},"为":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"简":{"docs":{},"称":{"docs":{},"为":{"docs":{},"d":{"docs":{},"f":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}},"又":{"docs":{},"称":{"docs":{},"为":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"简":{"docs":{},"称":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"。":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728}}}}}}},"t":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.045454545454545456}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.1},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.1346153846153846},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.1509433962264151},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.1509433962264151},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.12121212121212122},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.13793103448275862},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.11666666666666667},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.10810810810810811},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.1206896551724138},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.09322033898305085},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.12727272727272726},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.1095890410958904},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.16216216216216217},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0784313725490196},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.09375},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.10101010101010101},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.11235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.08450704225352113},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.09090909090909091},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.09523809523809523},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.03333333333333333}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"串":{"docs":{},"s":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"1":{"docs":{},"⩽":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"。":{"docs":{},"若":{"docs":{},"主":{"docs":{},"串":{"docs":{},"s":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"和":{"docs":{},"串":{"docs":{},"t":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"在":{"docs":{},"主":{"docs":{},"串":{"docs":{},"s":{"docs":{},"中":{"docs":{},"第":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"之":{"docs":{},"后":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"且":{"0":{"docs":{},"⩽":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"−":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"1":{"0":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.023255813953488372}},"+":{"1":{"1":{"docs":{},"⩽":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},"。":{"docs":{},"在":{"docs":{},"串":{"docs":{},"s":{"docs":{},"的":{"docs":{},"第":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"之":{"docs":{},"前":{"docs":{},"插":{"docs":{},"入":{"docs":{},"串":{"docs":{},"t":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"串":{"docs":{},"s":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}},"u":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.02608695652173913},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.041666666666666664},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.02727272727272727},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"s":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}},"r":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}},"c":{"docs":{},"k":{"2":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"[":{"docs":{},"+":{"docs":{},"+":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"2":{"docs":{},"]":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"docs":{}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"2":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},"docs":{}}}}}},"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.06060606060606061},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.06896551724137931},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.03333333333333333},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"栈":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"栈":{"docs":{},"s":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333}}}}}}}}},"[":{"docs":{},"+":{"docs":{},"+":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"]":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.016666666666666666},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}},")":{"docs":{},"：":{"docs":{},"串":{"docs":{},"s":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"由":{"docs":{},"串":{"docs":{},"s":{"docs":{},"复":{"docs":{},"制":{"docs":{},"得":{"docs":{},"串":{"docs":{},"t":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.033707865168539325},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087}}},",":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087}},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},";":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}},"k":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}},"n":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}},"q":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304}}}}}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}}}}}},"=":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"q":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"%":{"docs":{},"d":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.02531645569620253}}}}}},"&":{"docs":{},"g":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}},")":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"交":{"docs":{},"换":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"：":{"docs":{},"两":{"docs":{},"两":{"docs":{},"比":{"docs":{},"较":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"反":{"docs":{},"序":{"docs":{},"则":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"没":{"docs":{},"有":{"docs":{},"反":{"docs":{},"序":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"将":{"docs":{},"序":{"docs":{},"列":{"docs":{},"变":{"docs":{},"成":{"docs":{},"基":{"docs":{},"本":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"docs":{},"小":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"基":{"docs":{},"本":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"大":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"不":{"docs":{},"大":{"docs":{},"不":{"docs":{},"小":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"在":{"docs":{},"中":{"docs":{},"间":{"docs":{},"。":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"n":{"docs":{},"−":{"docs":{},"i":{"docs":{},"n":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}},"利":{"docs":{},"用":{"docs":{},"归":{"docs":{},"并":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"、":{"docs":{},"记":{"docs":{},"录":{"docs":{},"新":{"docs":{},"增":{"1":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"。":{"docs":{"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"：":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"趟":{"docs":{},"排":{"docs":{},"序":{"docs":{},"将":{"docs":{},"待":{"docs":{},"排":{"docs":{},"记":{"docs":{},"录":{"docs":{},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"均":{"docs":{},"比":{"docs":{},"另":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"小":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"分":{"docs":{},"别":{"docs":{},"对":{"docs":{},"这":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"记":{"docs":{},"录":{"docs":{},"继":{"docs":{},"续":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"已":{"docs":{},"达":{"docs":{},"到":{"docs":{},"整":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/排序/快速排序/快速排序算法/快速排序算法.html":{"ref":"算法/排序/快速排序/快速排序算法/快速排序算法.html","tf":0.5}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.05263157894736842},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533}},"(":{"docs":{},"l":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},"r":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}},"l":{"docs":{},",":{"docs":{"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.03608247422680412}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"(":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}},"t":{"1":{"docs":{},"t":{"docs":{},"_":{"1":{"docs":{},"t":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}},"docs":{}}}},"docs":{}}}},"2":{"docs":{},"t":{"docs":{},"_":{"2":{"docs":{},"t":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}},"docs":{}}}},"docs":{}}}},"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.08},"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":0.16666666666666666},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.13333333333333333},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.04477611940298507},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.07692307692307693},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.07547169811320754},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.07547169811320754},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.06060606060606061},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.06896551724137931},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.06666666666666667},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.05405405405405406},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.06896551724137931},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.046610169491525424},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.06363636363636363},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0684931506849315},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.0945945945945946},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.058823529411764705},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.0625},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.06060606060606061},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.06741573033707865},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.08450704225352113},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.03278688524590164},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.025}}}}}}}},")":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.033707865168539325}},"：":{"docs":{},"串":{"docs":{},"s":{"docs":{},"和":{"docs":{},"t":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"1":{"docs":{},"⩽":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"+":{"1":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"若":{"docs":{},"s":{"docs":{},">":{"docs":{},"t":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},">":{"0":{"docs":{},"；":{"docs":{},"若":{"docs":{},"s":{"docs":{},"=":{"docs":{},"t":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"=":{"0":{"docs":{},"；":{"docs":{},"若":{"docs":{},"s":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},";":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955}}}},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.023255813953488372},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.028985507246376812},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.06818181818181818}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406}}},";":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406}}}}},"docs":{}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"散":{"docs":{},"列":{"docs":{},"技":{"docs":{},"术":{"docs":{},"将":{"docs":{},"记":{"docs":{},"录":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"一":{"docs":{},"块":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"块":{"docs":{},"连":{"docs":{},"续":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"成":{"docs":{},"为":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"或":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"。":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"只":{"docs":{},"作":{"docs":{},"查":{"docs":{},"找":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"有":{"docs":{},"：":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"查":{"docs":{},"找":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"同":{"docs":{},"时":{"docs":{},"插":{"docs":{},"入":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"从":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"有":{"docs":{},"：":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"同":{"docs":{},"一":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"（":{"docs":{},"或":{"docs":{},"记":{"docs":{},"录":{"docs":{},"）":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}},"o":{"docs":{},"p":{"1":{"docs":{},";":{"docs":{"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655}}}},"2":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},";":{"docs":{"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},";":{"docs":{"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}}},"l":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}}}}}}}}}}},"r":{"1":{"docs":{},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}},"[":{"docs":{},"]":{"docs":{},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}},"s":{"docs":{},"]":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}}}},"2":{"docs":{},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}},"docs":{},"e":{"docs":{},"e":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.0211864406779661},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.01818181818181818},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0273972602739726},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.02702702702702703}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"树":{"docs":{},"t":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"t":{"docs":{},"为":{"docs":{},"空":{"docs":{},"树":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}},"）":{"docs":{},"是":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}},"docs":{}}}}}}},")":{"docs":{},"，":{"docs":{},"又":{"docs":{},"称":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"查":{"docs":{},"找":{"docs":{},"树":{"docs":{},"。":{"docs":{},"它":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"空":{"docs":{},"树":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"具":{"docs":{},"有":{"docs":{},"下":{"docs":{},"列":{"docs":{},"性":{"docs":{},"质":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"：":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"差":{"docs":{},"至":{"docs":{},"多":{"docs":{},"等":{"docs":{},"于":{"1":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"多":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"且":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"处":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"储":{"docs":{},"多":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"的":{"docs":{},"多":{"docs":{},"路":{"docs":{},"查":{"docs":{},"找":{"docs":{},"树":{"docs":{},"，":{"2":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"docs":{}}}}}}}}}}}}},"。":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}},"或":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.03773584905660377},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436}}}}},"[":{"docs":{},"]":{"docs":{},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}}},",":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"t":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}},";":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}},";":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}},",":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.19047619047619047}}}}}},"{":{"1":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.043478260869565216},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.06956521739130435},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.057692307692307696},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.05660377358490566},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.05660377358490566},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.06060606060606061},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.07407407407407407},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.06896551724137931},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.03333333333333333},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.05},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.05405405405405406},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.08333333333333333},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.05172413793103448},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.06557377049180328},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.0423728813559322},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.045454545454545456},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0547945205479452},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.06756756756756757},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0392156862745098},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.06329113924050633},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.041666666666666664},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.04040404040404041},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.0449438202247191},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.04225352112676056},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.08333333333333333},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.06521739130434782},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.06818181818181818},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.039473684210526314},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.06422018348623854},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.05013192612137203},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.04861111111111111},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.016129032258064516},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.11764705882352941},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.0975609756097561},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.07547169811320754},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.07142857142857142},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.06},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.05333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.039603960396039604},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.0449438202247191},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.047619047619047616},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.030927835051546393},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.04878048780487805},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.08045977011494253},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.08333333333333333},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0392156862745098},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.03278688524590164},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.05},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.034482758620689655}},"k":{"docs":{},"}":{"docs":{},"≠":{"docs":{},"∅":{"docs":{},"\\":{"docs":{},"{":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}},"e":{"docs":{},"y":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}},"a":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.06666666666666667}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}},"}":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.028985507246376812},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.034782608695652174},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.07407407407407407},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.06666666666666667},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.08333333333333333},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.06557377049180328},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.06329113924050633},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.08333333333333333},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.06818181818181818},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.02631578947368421},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.06422018348623854},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.047493403693931395},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.04861111111111111},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.11764705882352941},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.0975609756097561},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.07547169811320754},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.07142857142857142},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.06},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.05333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.04950495049504951},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.033707865168539325},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.020618556701030927},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.036585365853658534},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.06896551724137931},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.08333333333333333},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.13114754098360656},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.025},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.034482758620689655}},";":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.057692307692307696},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.05660377358490566},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.05660377358490566},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.06060606060606061},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.06896551724137931},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.05},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.05405405405405406},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.05172413793103448},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.038135593220338986},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.045454545454545456},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0547945205479452},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.06756756756756757},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0392156862745098},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.041666666666666664},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.04040404040404041},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.0449438202247191},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.04225352112676056},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"构":{"docs":{},"成":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"f":{"docs":{},"=":{"docs":{},"f":{"docs":{},"=":{"docs":{},"f":{"docs":{},"=":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"每":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"带":{"docs":{},"权":{"docs":{},"为":{"docs":{},"w":{"docs":{},"i":{"docs":{},"w":{"docs":{},"_":{"docs":{},"i":{"docs":{},"w":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"其":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"均":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"{":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"带":{"docs":{},"权":{"docs":{},"w":{"docs":{},"k":{"docs":{},"w":{"docs":{},"_":{"docs":{},"k":{"docs":{},"w":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"l":{"docs":{},"k":{"docs":{},"l":{"docs":{},"_":{"docs":{},"k":{"docs":{},"l":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"则":{"docs":{},"其":{"docs":{},"中":{"docs":{},"带":{"docs":{},"权":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"w":{"docs":{},"p":{"docs":{},"l":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"称":{"docs":{},"为":{"docs":{},"哈":{"docs":{},"夫":{"docs":{},"曼":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"就":{"docs":{},"称":{"docs":{},"为":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}},"需":{"docs":{},"确":{"docs":{},"定":{"1":{"1":{"1":{"docs":{},"，":{"2":{"2":{"2":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"排":{"docs":{},"列":{"docs":{},"p":{"1":{"docs":{},"p":{"docs":{},"_":{"1":{"docs":{},"p":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{},"p":{"docs":{},"_":{"2":{"docs":{},"p":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"p":{"docs":{},"n":{"docs":{},"p":{"docs":{},"_":{"docs":{},"n":{"docs":{},"p":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"满":{"docs":{},"足":{"docs":{},"k":{"docs":{},"p":{"1":{"docs":{},"⩽":{"docs":{},"k":{"docs":{},"p":{"2":{"docs":{},"⩽":{"docs":{},"k":{"docs":{},"_":{"docs":{},"{":{"docs":{},"p":{"docs":{},"_":{"1":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},";":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":5},"数据结构/串/顺序串/代码实现/代码实现.html":{"ref":"数据结构/串/顺序串/代码实现/代码实现.html","tf":5},"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":5},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":5},"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":5},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":5},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":5},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":5},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":5},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":5},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":5},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":5},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":5.012711864406779},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":5},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":5},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":5},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":5},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":5},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":5},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":5},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":5},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":5},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":5},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":5},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":5},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":5},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":5},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":5},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":5},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":5},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":5},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":5},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":5},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":5},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":5},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":5},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":5},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":5},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":5},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":5},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":5},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":5},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":5},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":5},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":5},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":5},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":5},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":5},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":5},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":5}}}},"：":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04}}}}}},"空":{"docs":{},"间":{"docs":{},"初":{"docs":{},"始":{"docs":{},"分":{"docs":{},"配":{"docs":{},"量":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04},"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}}}}}}}},"在":{"docs":{},"某":{"docs":{},"个":{"docs":{},"k":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},",":{"docs":{},"n":{"docs":{},")":{"docs":{},"k":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/数组/一维数组/代码实现/代码实现.html":{"ref":"数据结构/数组/一维数组/代码实现/代码实现.html","tf":0.04}}}}}}},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"对":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"先":{"docs":{},"取":{"docs":{},"平":{"docs":{},"方":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"抽":{"docs":{},"取":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"几":{"docs":{},"位":{"docs":{},"数":{"docs":{},"字":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"叫":{"docs":{},"做":{"docs":{},"设":{"docs":{},"置":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"，":{"docs":{},"完":{"docs":{},"美":{"docs":{},"地":{"docs":{},"消":{"docs":{},"除":{"docs":{},"了":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"中":{"docs":{},"都":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"循":{"docs":{},"环":{"docs":{},"控":{"docs":{},"制":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"否":{"docs":{},"越":{"docs":{},"界":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"在":{"docs":{},"于":{"docs":{},"前":{"docs":{},"面":{"docs":{},"首":{"docs":{},"先":{"docs":{},"对":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"取":{"docs":{},"了":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"抽":{"docs":{},"取":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"抽":{"docs":{},"取":{"docs":{},"不":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"使":{"docs":{},"得":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"不":{"docs":{},"产":{"docs":{},"生":{"docs":{},"聚":{"docs":{},"集":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"相":{"docs":{},"应":{"docs":{},"地":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"开":{"docs":{},"放":{"docs":{},"定":{"docs":{},"址":{"docs":{},"法":{"docs":{},"称":{"docs":{},"为":{"docs":{},"线":{"docs":{},"性":{"docs":{},"探":{"docs":{},"测":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"有":{"docs":{},"些":{"docs":{},"本":{"docs":{},"来":{"docs":{},"都":{"docs":{},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"义":{"docs":{},"词":{"docs":{},"却":{"docs":{},"需":{"docs":{},"要":{"docs":{},"争":{"docs":{},"夺":{"docs":{},"一":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"现":{"docs":{},"象":{"docs":{},"称":{"docs":{},"为":{"docs":{},"堆":{"docs":{},"积":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"堆":{"docs":{},"积":{"docs":{},"现":{"docs":{},"象":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"不":{"docs":{},"断":{"docs":{},"处":{"docs":{},"理":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"存":{"docs":{},"入":{"docs":{},"还":{"docs":{},"是":{"docs":{},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"都":{"docs":{},"会":{"docs":{},"大":{"docs":{},"大":{"docs":{},"降":{"docs":{},"低":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"与":{"docs":{},"链":{"docs":{},"表":{"docs":{},"相":{"docs":{},"结":{"docs":{},"合":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"方":{"docs":{},"法":{"docs":{},"称":{"docs":{},"为":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"（":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"是":{"docs":{},"基":{"docs":{},"础":{"docs":{},"的":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"引":{"docs":{},"擎":{"docs":{},"的":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"网":{"docs":{},"页":{"docs":{},"都":{"docs":{},"是":{"docs":{},"独":{"docs":{},"一":{"docs":{},"无":{"docs":{},"二":{"docs":{},"的":{"docs":{},"，":{"docs":{},"其":{"docs":{},"网":{"docs":{},"址":{"docs":{},"就":{"docs":{},"是":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"码":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"文":{"docs":{},"章":{"docs":{},"中":{"docs":{},"都":{"docs":{},"会":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"些":{"docs":{},"关":{"docs":{},"键":{"docs":{},"词":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"关":{"docs":{},"键":{"docs":{},"词":{"docs":{},"都":{"docs":{},"是":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"是":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"码":{"docs":{},"。":{"docs":{},"而":{"docs":{},"用":{"docs":{},"户":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"关":{"docs":{},"键":{"docs":{},"词":{"docs":{},"去":{"docs":{},"找":{"docs":{},"到":{"docs":{},"想":{"docs":{},"要":{"docs":{},"的":{"docs":{},"网":{"docs":{},"页":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"码":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"的":{"docs":{},"工":{"docs":{},"程":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"无":{"docs":{},"环":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}},"些":{"docs":{},"零":{"docs":{},"部":{"docs":{},"件":{"docs":{},"基":{"docs":{},"本":{"docs":{},"都":{"docs":{},"是":{"docs":{},"在":{"docs":{},"流":{"docs":{},"水":{"docs":{},"线":{"docs":{},"上":{"docs":{},"同":{"docs":{},"时":{"docs":{},"生":{"docs":{},"产":{"docs":{},"的":{"docs":{},"，":{"docs":{},"加":{"docs":{},"入":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"轮":{"docs":{},"子":{"docs":{},"需":{"docs":{},"要":{"0":{"docs":{},".":{"5":{"docs":{},"天":{"docs":{},"，":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"发":{"docs":{},"动":{"docs":{},"机":{"docs":{},"需":{"docs":{},"要":{"3":{"docs":{},"天":{"docs":{},"，":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"车":{"docs":{},"底":{"docs":{},"盘":{"docs":{},"需":{"docs":{},"要":{"2":{"docs":{},"天":{"docs":{},"，":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"外":{"docs":{},"壳":{"docs":{},"需":{"docs":{},"要":{"2":{"docs":{},"天":{"docs":{},"，":{"docs":{},"造":{"docs":{},"其":{"docs":{},"他":{"docs":{},"零":{"docs":{},"部":{"docs":{},"件":{"docs":{},"需":{"docs":{},"要":{"2":{"docs":{},"天":{"docs":{},"，":{"docs":{},"全":{"docs":{},"部":{"docs":{},"零":{"docs":{},"部":{"docs":{},"件":{"docs":{},"集":{"docs":{},"中":{"docs":{},"到":{"docs":{},"一":{"docs":{},"处":{"docs":{},"需":{"docs":{},"要":{"0":{"docs":{},".":{"5":{"docs":{},"天":{"docs":{},"，":{"docs":{},"组":{"docs":{},"装":{"docs":{},"成":{"docs":{},"车":{"docs":{},"需":{"docs":{},"要":{"2":{"docs":{},"天":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"在":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"厂":{"docs":{},"造":{"docs":{},"一":{"docs":{},"辆":{"docs":{},"车":{"docs":{},"，":{"docs":{},"最":{"docs":{},"短":{"docs":{},"需":{"docs":{},"要":{"docs":{},"多":{"docs":{},"少":{"docs":{},"时":{"docs":{},"间":{"docs":{},"呢":{"docs":{},"？":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"位":{"docs":{},"置":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"位":{"docs":{},"置":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"向":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},",":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"符":{"docs":{},"号":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}},"后":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"符":{"docs":{},"号":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"导":{"docs":{},"出":{"docs":{},"求":{"docs":{},"队":{"docs":{},"列":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"公":{"docs":{},"式":{"docs":{},"：":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"编":{"docs":{},"码":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"它":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"交":{"docs":{},"换":{"docs":{},"移":{"docs":{},"动":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"相":{"docs":{},"当":{"docs":{},"少":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"也":{"docs":{},"就":{"docs":{},"节":{"docs":{},"约":{"docs":{},"了":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"中":{"docs":{},"某":{"docs":{},"一":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"出":{"docs":{},"发":{"docs":{},"访":{"docs":{},"遍":{"docs":{},"途":{"docs":{},"中":{"docs":{},"其":{"docs":{},"余":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"且":{"docs":{},"使":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"仅":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"过":{"docs":{},"程":{"docs":{},"就":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"图":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"来":{"docs":{},"说":{"docs":{},"：":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}}}}}}}}},"v":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"开":{"docs":{},"始":{"docs":{},"一":{"docs":{},"直":{"docs":{},"到":{"docs":{},"v":{"docs":{},"[":{"8":{"docs":{},"]":{"docs":{},"[":{"8":{"docs":{},"]":{"docs":{},"为":{"docs":{},"止":{"docs":{},"，":{"docs":{},"以":{"docs":{},"v":{"1":{"docs":{},"为":{"docs":{},"中":{"docs":{},"转":{"docs":{},"点":{"docs":{},"对":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}}},"docs":{}}}},"则":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"或":{"docs":{},"动":{"docs":{},"态":{"docs":{},"增":{"docs":{},"加":{"docs":{},"容":{"docs":{},"量":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.046875}}}}}}}}}}}}},"取":{"docs":{},"出":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}}}}}},"两":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"权":{"docs":{},"值":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"结":{"docs":{},"点":{"docs":{},"n":{"1":{"docs":{},"n":{"docs":{},"_":{"1":{"docs":{},"n":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"是":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.1111111111111111}}}}}},"表":{"docs":{},"长":{"docs":{},"减":{"1":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}},"docs":{}},"加":{"1":{"docs":{"数据结构/数组/一维数组/难点操作/难点操作.html":{"ref":"数据结构/数组/一维数组/难点操作/难点操作.html","tf":0.05555555555555555}}},"docs":{}}},"达":{"docs":{},"式":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"，":{"docs":{},"将":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}},"：":{"9":{"9":{"9":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.012195121951219513}},"、":{"3":{"3":{"3":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}},"、":{"1":{"1":{"1":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"、":{"docs":{},"−":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.032520325203252036}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}},"\"":{"docs":{},"a":{"1":{"docs":{},"a":{"2":{"docs":{},"a":{"docs":{},"_":{"1":{"docs":{},"a":{"docs":{},"_":{"2":{"docs":{},"a":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"a":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"·":{"docs":{},"·":{"docs":{},"·":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"t":{"docs":{},"=":{"docs":{},"t":{"docs":{},"=":{"docs":{},"t":{"docs":{},"=":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}},"docs":{}},"b":{"1":{"docs":{},"b":{"2":{"docs":{},"b":{"docs":{},"_":{"1":{"docs":{},"b":{"docs":{},"_":{"2":{"docs":{},"b":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"b":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"·":{"docs":{},"·":{"docs":{},"·":{"docs":{},"b":{"docs":{},"m":{"docs":{},"b":{"docs":{},"_":{"docs":{},"m":{"docs":{},"b":{"docs":{},"​":{"docs":{},"m":{"docs":{},"​":{"docs":{},"​":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"当":{"docs":{},"满":{"docs":{},"足":{"docs":{},"以":{"docs":{},"下":{"docs":{},"条":{"docs":{},"件":{"docs":{},"之":{"docs":{},"一":{"docs":{},"时":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}},"docs":{}},",":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}},"p":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"p":{"docs":{},"_":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"_":{"docs":{},"{":{"docs":{},"k":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}},"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.04411764705882353},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.02631578947368421},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.04878048780487805},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.04597701149425287}},"o":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.04054054054054054}},"s":{"docs":{},")":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406}},"：":{"docs":{},"串":{"docs":{},"s":{"docs":{},"和":{"docs":{},"t":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"t":{"docs":{},"是":{"docs":{},"非":{"docs":{},"空":{"docs":{},"串":{"docs":{},"，":{"1":{"docs":{},"⩽":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"+":{"1":{"0":{"docs":{},"⩽":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"⩽":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"−":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"返":{"docs":{},"回":{"docs":{},"串":{"docs":{},"s":{"docs":{},"的":{"docs":{},"第":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"起":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.03488372093023256}}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.046511627906976744}}}}}}}},";":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}},"i":{"docs":{},"t":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.01818181818181818},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0273972602739726}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}},"t":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"(":{"docs":{},"*":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"s":{"docs":{},"q":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.038461538461538464},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}},";":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"%":{"docs":{},"d":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}},"c":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436}},"\"":{"docs":{},",":{"docs":{},"t":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353}}}}}}},"输":{"docs":{},"入":{"docs":{},"边":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"和":{"docs":{},"边":{"docs":{},"数":{"docs":{},"：":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}}}}}}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}},"各":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"间":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"如":{"docs":{},"下":{"docs":{},":":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}},"t":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"*":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"s":{"docs":{},"q":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}}}}}}}}}}},"t":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}},"=":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}},"q":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}},"[":{"0":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"0":{"1":{"2":{"2":{"2":{"2":{"2":{"2":{"2":{"1":{"1":{"2":{"4":{"4":{"4":{"4":{"4":{"4":{"4":{"4":{"4":{"3":{"4":{"4":{"6":{"6":{"6":{"2":{"2":{"2":{"3":{"4":{"5":{"3":{"3":{"3":{"4":{"4":{"4":{"4":{"4":{"5":{"7":{"7":{"7":{"3":{"3":{"3":{"3":{"3":{"7":{"6":{"7":{"7":{"6":{"6":{"6":{"6":{"6":{"5":{"6":{"7":{"8":{"7":{"7":{"7":{"7":{"7":{"7":{"7":{"7":{"8":{"docs":{},"]":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"[":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}},"​":{"docs":{},"⎣":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎡":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"4":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"4":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"4":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"3":{"docs":{},"​":{"6":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"7":{"docs":{},"​":{"5":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"6":{"docs":{},"​":{"3":{"docs":{},"​":{"7":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"6":{"docs":{},"​":{"3":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"2":{"docs":{},"​":{"4":{"docs":{},"​":{"6":{"docs":{},"​":{"3":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⎦":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎤":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644}}},"[":{"docs":{},"f":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}}}}}}}}}}}}},"c":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.020833333333333332}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}}}}}},"l":{"docs":{},",":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.020202020202020204}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}},")":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.045454545454545456}}}},",":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.015463917525773196}},";":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}},")":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}},";":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.015463917525773196}}}}}}}}}},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"​":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"​":{"docs":{},"⎣":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎡":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"3":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"4":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"5":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"6":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"7":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"8":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⎦":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎤":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"−":{"1":{"docs":{},"=":{"docs":{},"[":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"docs":{},"]":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"[":{"docs":{},"w":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}}}},"r":{"1":{"docs":{},"r":{"docs":{},"_":{"1":{"docs":{},"r":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"r":{"2":{"docs":{},"r":{"docs":{},"_":{"2":{"docs":{},"r":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"r":{"docs":{},"n":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"r":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.023746701846965697}},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.028985507246376812},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.02608695652173913},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.07407407407407407},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.08333333333333333},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.05660377358490566},"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.08333333333333333},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.04918032786885246},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.06451612903225806},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.09090909090909091},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.02631578947368421},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.045871559633027525},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.027777777777777776},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.016666666666666666},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}},";":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353}}}}}}},"a":{"docs":{},"r":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.03636363636363636}},"（":{"docs":{},"此":{"docs":{},"处":{"docs":{},"的":{"docs":{},"+":{"1":{"docs":{},"指":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"循":{"docs":{},"环":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"若":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"）":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"时":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}},";":{"docs":{"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},";":{"docs":{"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}}},",":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}}}}}}}}}}}}},"h":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},":":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0158311345646438}}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219}}}},"l":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.005277044854881266}},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}},"i":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}},"j":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}},"]":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}},";":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.015463917525773196}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}}}}},"p":{"1":{"docs":{},"r":{"docs":{},"_":{"docs":{},"{":{"docs":{},"p":{"docs":{},"_":{"1":{"docs":{},"}":{"docs":{},"r":{"docs":{},"​":{"docs":{},"p":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"r":{"docs":{},"p":{"2":{"docs":{},"r":{"docs":{},"_":{"docs":{},"{":{"docs":{},"p":{"docs":{},"_":{"2":{"docs":{},"}":{"docs":{},"r":{"docs":{},"​":{"docs":{},"p":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},"r":{"docs":{},"_":{"docs":{},"{":{"docs":{},"p":{"docs":{},"_":{"docs":{},"n":{"docs":{},"}":{"docs":{},"r":{"docs":{},"​":{"docs":{},"p":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}},"v":{"docs":{},"_":{"0":{"docs":{},"v":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"，":{"docs":{},"(":{"docs":{},"v":{"1":{"docs":{},"v":{"docs":{},"_":{"1":{"docs":{},"v":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}},"docs":{}}}},"docs":{}}},",":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}},"、":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}},"1":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.040697674418604654}},"v":{"docs":{},"_":{"1":{"docs":{},"v":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"，":{"docs":{},"(":{"docs":{},"v":{"2":{"docs":{},"v":{"docs":{},"_":{"2":{"docs":{},"v":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}},"docs":{}}}},"docs":{}}},"不":{"docs":{},"用":{"docs":{},"说":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}}}}}}}},"；":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"2":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.029069767441860465}},"v":{"docs":{},"_":{"2":{"docs":{},"v":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}},"docs":{}}}},"docs":{}}},"更":{"docs":{},"短":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"更":{"docs":{},"新":{"docs":{},"d":{"docs":{},"−":{"1":{"docs":{},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"d":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}},"docs":{}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"比":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}},"；":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"3":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.01744186046511628}},"v":{"docs":{},"_":{"3":{"docs":{},"v":{"docs":{},"​":{"3":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"这":{"docs":{},"四":{"docs":{},"个":{"docs":{},"阵":{"docs":{},"点":{"docs":{},"形":{"docs":{},"成":{"docs":{},"的":{"docs":{},"线":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}},"；":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"4":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.023255813953488372}},"；":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"6":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.011627906976744186}},"；":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"7":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}},"；":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"8":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842}},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"看":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"，":{"docs":{},"其":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"中":{"docs":{},"转":{"docs":{},"点":{"docs":{},"为":{"docs":{},"v":{"1":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"路":{"docs":{},"径":{"docs":{},"为":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}},"；":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.03278688524590164}},")":{"docs":{},"：":{"docs":{},"串":{"docs":{},"s":{"docs":{},"、":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"t":{"docs":{},"是":{"docs":{},"非":{"docs":{},"空":{"docs":{},"串":{"docs":{},"。":{"docs":{},"用":{"docs":{},"v":{"docs":{},"替":{"docs":{},"换":{"docs":{},"主":{"docs":{},"串":{"docs":{},"s":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"与":{"docs":{},"t":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"不":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"及":{"docs":{},"其":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"弧":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}},"在":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"增":{"docs":{},"添":{"docs":{},"新":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"的":{"docs":{},"值":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.033707865168539325},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0392156862745098},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.036585365853658534},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}},")":{"docs":{},"：":{"docs":{},"给":{"docs":{},"树":{"docs":{},"t":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"为":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.035211267605633804},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"≠":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"从":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"到":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"和":{"docs":{},"从":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"到":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"都":{"docs":{},"存":{"docs":{},"在":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"是":{"docs":{},"强":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"1":{"docs":{},"v":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{},"_":{"1":{"docs":{},"}":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{},"m":{"docs":{},"=":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{},"_":{"docs":{},"m":{"docs":{},"}":{"docs":{},"=":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"m":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"边":{"docs":{},"都":{"docs":{},"属":{"docs":{},"于":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"的":{"docs":{},"边":{"docs":{},"集":{"docs":{},"。":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"整":{"docs":{},"体":{"docs":{},"前":{"docs":{},"后":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"可":{"docs":{},"以":{"docs":{},"颠":{"docs":{},"倒":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"与":{"docs":{},"其":{"docs":{},"相":{"docs":{},"同":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}},">":{"docs":{},"与":{"docs":{},"其":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.036585365853658534},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}}}}}}}},"p":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"与":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"和":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"没":{"docs":{},"有":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"这":{"docs":{},"条":{"docs":{},"边":{"docs":{},"为":{"docs":{},"无":{"docs":{},"向":{"docs":{},"边":{"docs":{},"（":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"）":{"docs":{},"，":{"docs":{},"用":{"docs":{},"无":{"docs":{},"序":{"docs":{},"偶":{"docs":{},"对":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"(":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"依":{"docs":{},"附":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"和":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"：":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{},"表":{"docs":{},"示":{"docs":{},"。":{"docs":{},"有":{"docs":{},"序":{"docs":{},"偶":{"docs":{},"有":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"\\":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"上":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"i":{"docs":{},"，":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}},"r":{"docs":{},")":{"docs":{},"：":{"docs":{},"按":{"docs":{},"照":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"集":{"docs":{},"v":{"docs":{},"和":{"docs":{},"边":{"docs":{},"弧":{"docs":{},"集":{"docs":{},"v":{"docs":{},"r":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"构":{"docs":{},"造":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∈":{"docs":{},"v":{"docs":{},"、":{"docs":{},"v":{"docs":{},"i":{"docs":{},"≠":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},">":{"docs":{},"和":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"，":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}},"属":{"docs":{},"于":{"docs":{},"该":{"docs":{},"图":{"docs":{},"的":{"docs":{},"边":{"docs":{},"集":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"到":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"自":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"说":{"docs":{},"弧":{"docs":{},"\\":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.03125},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.02247191011235955},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521},"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}},")":{"docs":{},"：":{"docs":{},"即":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"k":{"docs":{},"v":{"docs":{},"_":{"docs":{},"k":{"docs":{},"v":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"最":{"docs":{},"早":{"docs":{},"发":{"docs":{},"生":{"docs":{},"时":{"docs":{},"间":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}},"晚":{"docs":{},"发":{"docs":{},"生":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"每":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"最":{"docs":{},"晚":{"docs":{},"需":{"docs":{},"要":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"超":{"docs":{},"出":{"docs":{},"此":{"docs":{},"时":{"docs":{},"间":{"docs":{},"将":{"docs":{},"会":{"docs":{},"延":{"docs":{},"误":{"docs":{},"整":{"docs":{},"个":{"docs":{},"工":{"docs":{},"期":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}}},"s":{"docs":{},";":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}},"l":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"i":{"docs":{},"和":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"串":{"docs":{},"相":{"docs":{},"等":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}},"栈":{"docs":{},"共":{"docs":{},"享":{"docs":{},"空":{"docs":{},"间":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":10}},"一":{"docs":{},"般":{"docs":{},"通":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"即":{"docs":{},"通":{"docs":{},"过":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"指":{"docs":{},"针":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"其":{"docs":{},"栈":{"docs":{},"底":{"docs":{},"分":{"docs":{},"别":{"docs":{},"在":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"0":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"串":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":10}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"仅":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"组":{"docs":{},"成":{"docs":{},"，":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"元":{"docs":{},"素":{"docs":{},"具":{"docs":{},"有":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"和":{"docs":{},"后":{"docs":{},"继":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}},"比":{"docs":{},"较":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"目":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{},"是":{"docs":{},"由":{"docs":{},"零":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"有":{"docs":{},"限":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"又":{"docs":{},"叫":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"记":{"docs":{},"为":{"docs":{},"s":{"docs":{},"=":{"docs":{},"s":{"docs":{},"=":{"docs":{},"s":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"1":{"docs":{},"a":{"2":{"docs":{},"a":{"docs":{},"_":{"1":{"docs":{},"a":{"docs":{},"_":{"2":{"docs":{},"a":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"a":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"·":{"docs":{},"·":{"docs":{},"·":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"\"":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"五":{"docs":{},".":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}},"四":{"docs":{},".":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186},"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444},"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":0.125},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}},"则":{"docs":{},"运":{"docs":{},"算":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"求":{"docs":{},"值":{"docs":{},"—":{"docs":{},"—":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"比":{"docs":{},"较":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}},"子":{"docs":{},"串":{"docs":{},"在":{"docs":{},"主":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"：":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{},"主":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"串":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"字":{"docs":{},"符":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"：":{"docs":{},"假":{"docs":{},"设":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"图":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"图":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"集":{"docs":{},"和":{"docs":{},"边":{"docs":{},"集":{"docs":{},"都":{"docs":{},"完":{"docs":{},"全":{"docs":{},"包":{"docs":{},"含":{"docs":{},"于":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"图":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"该":{"docs":{},"图":{"docs":{},"是":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"图":{"docs":{},"的":{"docs":{},"子":{"docs":{},"图":{"docs":{},"（":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"）":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"两":{"docs":{},"个":{"docs":{},"串":{"docs":{},"：":{"docs":{},"s":{"docs":{},"=":{"docs":{},"s":{"docs":{},"=":{"docs":{},"s":{"docs":{},"=":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}},"新":{"docs":{},"申":{"docs":{},"请":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"赋":{"docs":{},"值":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"边":{"docs":{},"设":{"docs":{},"置":{"docs":{},"权":{"docs":{},"值":{"docs":{},"，":{"docs":{},"并":{"docs":{},"进":{"docs":{},"行":{"docs":{},"对":{"docs":{},"称":{"docs":{},"操":{"docs":{},"作":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"从":{"docs":{},"二":{"docs":{},"者":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"能":{"docs":{},"完":{"docs":{},"成":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"串":{"docs":{},"或":{"docs":{},"许":{"docs":{},"在":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"以":{"docs":{},"及":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"等":{"docs":{},"类":{"docs":{},"似":{"docs":{},"操":{"docs":{},"作":{"docs":{},"上":{"docs":{},"有":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"，":{"docs":{},"但":{"docs":{},"总":{"docs":{},"体":{"docs":{},"的":{"docs":{},"优":{"docs":{},"越":{"docs":{},"性":{"docs":{},"比":{"docs":{},"链":{"docs":{},"式":{"docs":{},"串":{"docs":{},"要":{"docs":{},"好":{"docs":{},"。":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"只":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"使":{"docs":{},"用":{"docs":{},"链":{"docs":{},"式":{"docs":{},"串":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"多":{"docs":{},"放":{"docs":{},"几":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"的":{"docs":{},"建":{"docs":{},"立":{"docs":{},"过":{"docs":{},"程":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"那":{"docs":{},"么":{"docs":{},"顺":{"docs":{},"利":{"docs":{},"，":{"docs":{},"很":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"通":{"docs":{},"过":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"办":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"将":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"这":{"docs":{},"个":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"散":{"docs":{},"列":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"由":{"docs":{},"于":{"docs":{},"是":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"和":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"一":{"docs":{},"维":{"docs":{},"搞":{"docs":{},"不":{"docs":{},"定":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"和":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"。":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}},"修":{"docs":{},"改":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"更":{"docs":{},"新":{"docs":{},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"树":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"+":{"docs":{},"树":{"docs":{},"就":{"docs":{},"是":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"增":{"docs":{},"大":{"docs":{},"了":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"和":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"，":{"docs":{},"将":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"从":{"docs":{},"前":{"docs":{},"面":{"docs":{},"直":{"docs":{},"接":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"从":{"docs":{},"后":{"docs":{},"面":{"docs":{},"直":{"docs":{},"接":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"比":{"docs":{},"较":{"docs":{},"次":{"docs":{},"数":{"docs":{},"和":{"docs":{},"移":{"docs":{},"动":{"docs":{},"交":{"docs":{},"换":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"到":{"docs":{},"了":{"docs":{},"h":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"以":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"选":{"docs":{},"择":{"docs":{},"回":{"docs":{},"退":{"docs":{},"g":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"构":{"docs":{},"造":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"串":{"docs":{"数据结构/串/顺序串/顺序串.html":{"ref":"数据结构/串/顺序串/顺序串.html","tf":10}},"即":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"该":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"长":{"docs":{},"度":{"docs":{},"固":{"docs":{},"定":{"docs":{},"，":{"docs":{},"但":{"docs":{},"易":{"docs":{},"于":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{},"链":{"docs":{},"式":{"docs":{},"串":{"docs":{},"即":{"docs":{},"使":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"该":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"与":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"串":{"docs":{},"相":{"docs":{},"反":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},".":{"docs":{"数据结构/串/顺序串/顺序串.html":{"ref":"数据结构/串/顺序串/顺序串.html","tf":0.3333333333333333}}}}}}}}}}}}},"和":{"docs":{},"链":{"docs":{},"式":{"docs":{},"串":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"动":{"docs":{},"态":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"但":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"更":{"docs":{},"多":{"docs":{},"完":{"docs":{},"善":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"支":{"docs":{},"撑":{"docs":{},"。":{"docs":{"数据结构/串/串.html":{"ref":"数据结构/串/串.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":10}},"即":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"的":{"docs":{},"简":{"docs":{},"化":{"docs":{},"，":{"docs":{},"将":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{},"作":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"底":{"docs":{},"，":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"端":{"docs":{},"作":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"。":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"变":{"docs":{},"量":{"docs":{},"保":{"docs":{},"存":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304}}}},"与":{"docs":{},"链":{"docs":{},"栈":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"上":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},",":{"docs":{"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}}},"查":{"docs":{},"找":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/查找/顺序表查找/顺序表查找.html":{"ref":"算法/查找/顺序表查找/顺序表查找.html","tf":0.2}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"静":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"主":{"docs":{},"要":{"docs":{},"只":{"docs":{},"针":{"docs":{},"对":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"其":{"docs":{},"次":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"于":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"在":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"有":{"docs":{},"比":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"更":{"docs":{},"优":{"docs":{},"秀":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找.html":{"ref":"算法/查找/顺序表查找/顺序表查找.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"a":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"n":{"docs":{},"为":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"为":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/顺序表查找/顺序表查找.html":{"ref":"算法/查找/顺序表查找/顺序表查找.html","tf":10}},"算":{"docs":{},"法":{"docs":{"算法/查找/顺序表查找/顺序表查找算法/顺序表查找算法.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/顺序表查找算法.html","tf":10}},"主":{"docs":{},"要":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"docs":{},"从":{"docs":{},"表":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"往":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"找":{"docs":{},"到":{"docs":{},"指":{"docs":{},"定":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"未":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找算法/顺序表查找算法.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/顺序表查找算法.html","tf":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html","tf":10}}}},"、":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"查":{"docs":{},"找":{"docs":{},"（":{"docs":{},"二":{"docs":{},"分":{"docs":{},"、":{"docs":{},"插":{"docs":{},"值":{"docs":{},"、":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"）":{"docs":{},"以":{"docs":{},"及":{"docs":{},"线":{"docs":{},"性":{"docs":{},"索":{"docs":{},"引":{"docs":{},"查":{"docs":{},"找":{"docs":{},"（":{"docs":{},"稠":{"docs":{},"密":{"docs":{},"、":{"docs":{},"分":{"docs":{},"块":{"docs":{},"、":{"docs":{},"倒":{"docs":{},"排":{"docs":{},"）":{"docs":{},"都":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"静":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"而":{"docs":{},"言":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"好":{"docs":{},"地":{"docs":{},"解":{"docs":{},"决":{"docs":{},"查":{"docs":{},"找":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"其":{"docs":{},"性":{"docs":{},"能":{"docs":{},"就":{"docs":{},"不":{"docs":{},"见":{"docs":{},"得":{"docs":{},"有":{"docs":{},"那":{"docs":{},"么":{"docs":{},"好":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"0":{"docs":{},"&":{"2":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"docs":{}}},"1":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}},"&":{"7":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"docs":{}}},"3":{"docs":{},"&":{"0":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"6":{"docs":{},"&":{"0":{"docs":{},"&":{"2":{"docs":{},"&":{"7":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"5":{"docs":{},"&":{"1":{"docs":{},"&":{"2":{"docs":{},"&":{"0":{"docs":{},"&":{"3":{"docs":{},"&":{"6":{"docs":{},"&":{"9":{"docs":{},"&":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}},"6":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}},"7":{"docs":{},"&":{"4":{"docs":{},"&":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}},"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.011627906976744186}}}}}}}}}},"9":{"docs":{},"&":{"5":{"docs":{},"&":{"2":{"docs":{},"&":{"0":{"docs":{},"&":{"4":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.012195121951219513}},"&":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.03636363636363636},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.125},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.12790697674418605}}}}}}}},"g":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.02531645569620253}}},"i":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}},")":{"docs":{},";":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}},"j":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}},"w":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}},"p":{"docs":{},")":{"docs":{},")":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}}}}}},"=":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.07246376811594203},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.08695652173913043},"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.012195121951219513},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.08860759493670886},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.08333333333333333},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.0967741935483871},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.0967741935483871},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.13043478260869565},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.045454545454545456},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.13157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.10091743119266056},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.12928759894459102},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.0763888888888889},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.024193548387096774},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.058823529411764705},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.04878048780487805},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.09433962264150944},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.09523809523809523},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.1},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.12},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.07920792079207921},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.0449438202247191},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.07936507936507936},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.04639175257731959},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.0975609756097561},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.09195402298850575},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.13636363636363635},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.08333333333333333},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.08196721311475409},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.08333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.12931034482758622}},"=":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.12727272727272726},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.027522935779816515},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}}},"\\":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.029411764705882353},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.05263157894736842}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"{":{"docs":{},"k":{"docs":{},"}":{"docs":{},"≠":{"docs":{},"∅":{"docs":{},"表":{"docs":{},"示":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"k":{"docs":{},"集":{"docs":{},"合":{"docs":{},"不":{"docs":{},"是":{"docs":{},"空":{"docs":{},"集":{"docs":{},"。":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"%":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.05263157894736842}}},"\\":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.020833333333333332},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.05232558139534884}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"{":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"}":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.03125},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.023255813953488372}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}},"f":{"docs":{},"t":{"docs":{},"[":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.03125}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"}":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.03125},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.023255813953488372}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.03125},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.03488372093023256}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.03125},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.023255813953488372}}}}}}}},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}},"j":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.07317073170731707},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.05660377358490566},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.02666666666666667},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"=":{"1":{"docs":{},"\\":{"docs":{},"\\":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}},"docs":{}},"的":{"docs":{},"值":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"学":{"docs":{},"模":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456}}},"+":{"docs":{},"+":{"docs":{},")":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}},")":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}},"i":{"docs":{},"≠":{"docs":{},"j":{"docs":{},")":{"docs":{},"，":{"docs":{},"且":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"前":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"r":{"docs":{},"i":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"r":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"领":{"docs":{},"先":{"docs":{},"于":{"docs":{},"r":{"docs":{},"j":{"docs":{},"r":{"docs":{},"_":{"docs":{},"j":{"docs":{},"r":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"（":{"docs":{},"即":{"docs":{},"i":{"docs":{},"j":{"docs":{},"i":{"docs":{},"i":{"docs":{},"j":{"docs":{},"）":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"r":{"docs":{},"i":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"r":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"仍":{"docs":{},"领":{"docs":{},"先":{"docs":{},"于":{"docs":{},"r":{"docs":{},"j":{"docs":{},"r":{"docs":{},"_":{"docs":{},"j":{"docs":{},"r":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"所":{"docs":{},"用":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"；":{"docs":{},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"若":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"得":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"r":{"docs":{},"j":{"docs":{},"r":{"docs":{},"_":{"docs":{},"j":{"docs":{},"r":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"领":{"docs":{},"先":{"docs":{},"于":{"docs":{},"r":{"docs":{},"i":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"r":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"所":{"docs":{},"用":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"不":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353}}}},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}},";":{"docs":{"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},"k":{"1":{"docs":{},"k":{"docs":{},"_":{"1":{"docs":{},"k":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"k":{"2":{"docs":{},"k":{"docs":{},"_":{"2":{"docs":{},"k":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"k":{"docs":{},"n":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"k":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.043478260869565216},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.047619047619047616},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}},"+":{"1":{"docs":{},"}":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"_":{"docs":{},"{":{"docs":{},"j":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}},"docs":{},"+":{"docs":{},")":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}},";":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}}}},";":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.014492753623188406},"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.017391304347826087},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},"\\":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.07142857142857142},"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}},"|":{"docs":{},"(":{"1":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"​":{"docs":{},"⎩":{"docs":{},"​":{"docs":{},"⎪":{"docs":{},"​":{"docs":{},"⎨":{"docs":{},"​":{"docs":{},"⎪":{"docs":{},"​":{"docs":{},"⎧":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"{":{"docs":{},"k":{"docs":{},"∣":{"docs":{},"(":{"1":{"docs":{},"k":{"docs":{},"j":{"docs":{},")":{"docs":{},"&":{"docs":{},"&":{"docs":{},"(":{"docs":{},"p":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"​":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"=":{"docs":{},"p":{"docs":{},"​":{"docs":{},"j":{"docs":{},"−":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"​":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"}":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"j":{"docs":{},"=":{"1":{"docs":{},"​":{"docs":{},"{":{"docs":{},"k":{"docs":{},"}":{"docs":{},"≠":{"docs":{},"∅":{"docs":{},"​":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},")":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}},",":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}},"e":{"docs":{},"y":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},"+":{"docs":{},"b":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}},"_":{"2":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"≠":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"却":{"docs":{},"有":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"1":{"docs":{},")":{"docs":{},"=":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"2":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"1":{"docs":{},")":{"docs":{},"=":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"2":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"=":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"现":{"docs":{},"象":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"为":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"1":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"1":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"和":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"2":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"2":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"称":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"同":{"docs":{},"义":{"docs":{},"词":{"docs":{},"（":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"）":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}},")":{"docs":{"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.08333333333333333},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.020833333333333332}},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"识":{"docs":{},"别":{"docs":{},"多":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"（":{"docs":{},"或":{"docs":{},"记":{"docs":{},"录":{"docs":{},"）":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}},"若":{"docs":{},"一":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"可":{"docs":{},"以":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"地":{"docs":{},"标":{"docs":{},"志":{"docs":{},"一":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"此":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"为":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101}}}},";":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"a":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.06818181818181818},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}},"⩽":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"[":{"docs":{},"m":{"2":{"docs":{},"]":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"1":{"2":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"docs":{}}}},"docs":{}},"docs":{}}}}}},"docs":{}}},"​":{"docs":{},"[":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"m":{"docs":{},"​":{"docs":{},"​":{"docs":{},"]":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}},"_":{"docs":{},"{":{"docs":{},"p":{"docs":{},"_":{"2":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"k":{"docs":{},"​":{"docs":{},"p":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⩽":{"docs":{},"k":{"docs":{},"​":{"docs":{},"p":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⩽":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{},"n":{"docs":{},"}":{"docs":{},"⩽":{"docs":{},"k":{"docs":{},"​":{"docs":{},"p":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"非":{"docs":{},"递":{"docs":{},"减":{"docs":{},"（":{"docs":{},"或":{"docs":{},"非":{"docs":{},"递":{"docs":{},"增":{"docs":{},"）":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"得":{"docs":{},"序":{"docs":{},"列":{"docs":{},"成":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"按":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"{":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"k":{"docs":{},"m":{"docs":{},"p":{"docs":{},"算":{"docs":{},"法":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"定":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"：":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"和":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"x":{"docs":{},"，":{"docs":{},"在":{"docs":{},"子":{"docs":{},"串":{"docs":{},"和":{"docs":{},"主":{"docs":{},"串":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"5":{"docs":{},"时":{"docs":{},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"产":{"docs":{},"生":{"docs":{},"差":{"docs":{},"异":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"按":{"docs":{},"照":{"docs":{},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"k":{"docs":{},"m":{"docs":{},"p":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"i":{"docs":{},"依":{"docs":{},"旧":{"docs":{},"指":{"docs":{},"向":{"5":{"docs":{},"，":{"docs":{},"j":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"4":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"开":{"docs":{},"始":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"依":{"docs":{},"旧":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"j":{"docs":{},"又":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"3":{"docs":{},"。":{"docs":{},"然":{"docs":{},"而":{"docs":{},"由":{"docs":{},"于":{"docs":{},"子":{"docs":{},"串":{"docs":{},"中":{"docs":{},"前":{"5":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"是":{"docs":{},"a":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"第":{"docs":{},"五":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"与":{"docs":{},"主":{"docs":{},"串":{"docs":{},"的":{"docs":{},"第":{"docs":{},"五":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"说":{"docs":{},"明":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"前":{"docs":{},"面":{"docs":{},"四":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"也":{"docs":{},"都":{"docs":{},"和":{"docs":{},"主":{"docs":{},"串":{"docs":{},"的":{"docs":{},"第":{"docs":{},"五":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"按":{"docs":{},"照":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"k":{"docs":{},"m":{"docs":{},"p":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"依":{"docs":{},"然":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"多":{"docs":{},"余":{"docs":{},"操":{"docs":{},"作":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"下":{"docs":{},"是":{"docs":{},"改":{"docs":{},"进":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"写":{"docs":{},"入":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.017241379310344827}},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"获":{"docs":{},"得":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"上":{"docs":{},"的":{"docs":{},"等":{"docs":{},"级":{"docs":{},"然":{"docs":{},"后":{"docs":{},"退":{"docs":{},"出":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"就":{"docs":{},"能":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"按":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"好":{"docs":{"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}},"…":{"docs":{},"…":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"为":{"docs":{},"根":{"docs":{},"，":{"docs":{},"将":{"docs":{},"第":{"docs":{},"二":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"接":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"处":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"的":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}}},"尾":{"docs":{},"的":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}}}}}}}},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"起":{"docs":{},"始":{"docs":{},"点":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"看":{"docs":{},"待":{"docs":{},"插":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"若":{"docs":{},"已":{"docs":{},"存":{"docs":{},"在":{"docs":{},"则":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"插":{"docs":{},"入":{"docs":{},"该":{"docs":{},"值":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"若":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"下":{"docs":{},"一":{"docs":{},"步":{"docs":{"算法/查找/二叉排序树/插入操作/插入操作.html":{"ref":"算法/查找/二叉排序树/插入操作/插入操作.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"方":{"docs":{},"法":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"减":{"docs":{},"小":{"docs":{},"的":{"docs":{},"边":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}},"伪":{"docs":{},"码":{"docs":{},"描":{"docs":{},"述":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}},"但":{"docs":{},"实":{"docs":{},"际":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"朴":{"docs":{},"素":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"许":{"docs":{},"多":{"docs":{},"无":{"docs":{},"用":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"如":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"和":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"前":{"docs":{},"面":{"docs":{},"五":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"第":{"docs":{},"六":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"时":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"按":{"docs":{},"照":{"docs":{},"朴":{"docs":{},"素":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"主":{"docs":{},"串":{"docs":{},"将":{"docs":{},"从":{"docs":{},"b":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"子":{"docs":{},"串":{"docs":{},"将":{"docs":{},"从":{"docs":{},"a":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"而":{"docs":{},"主":{"docs":{},"串":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"a":{"docs":{},"和":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"而":{"docs":{},"刚":{"docs":{},"刚":{"docs":{},"前":{"docs":{},"五":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"和":{"docs":{},"主":{"docs":{},"串":{"docs":{},"比":{"docs":{},"较":{"docs":{},"过":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"和":{"docs":{},"主":{"docs":{},"串":{"docs":{},"的":{"docs":{},"第":{"2":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"，":{"docs":{},"如":{"docs":{},"上":{"docs":{},"亿":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"，":{"docs":{},"那":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"索":{"docs":{},"引":{"docs":{},"也":{"docs":{},"得":{"docs":{},"有":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"长":{"docs":{},"度":{"docs":{},"规":{"docs":{},"模":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"内":{"docs":{},"存":{"docs":{},"有":{"docs":{},"限":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"反":{"docs":{},"复":{"docs":{},"去":{"docs":{},"访":{"docs":{},"问":{"docs":{},"磁":{"docs":{},"盘":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"性":{"docs":{},"能":{"docs":{},"反":{"docs":{},"而":{"docs":{},"大":{"docs":{},"大":{"docs":{},"下":{"docs":{},"降":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"比":{"docs":{},"较":{"docs":{},"次":{"docs":{},"数":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"主":{"docs":{},"串":{"docs":{},"s":{"docs":{},"和":{"docs":{},"要":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"t":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"存":{"docs":{},"在":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"与":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"中":{"docs":{},"：":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"权":{"docs":{},"值":{"docs":{},"{":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"分":{"docs":{},"数":{"docs":{},"a":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"场":{"docs":{},"景":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"=":{"docs":{},"k":{"docs":{},"j":{"docs":{},"(":{"1":{"docs":{},"⩽":{"docs":{},"i":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"k":{"docs":{},"_":{"docs":{},"i":{"docs":{},"=":{"docs":{},"k":{"docs":{},"_":{"docs":{},"j":{"docs":{},"(":{"1":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}},"含":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"{":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}},"匹":{"docs":{},"配":{"docs":{},"部":{"docs":{},"分":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}},"朴":{"docs":{},"素":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"子":{"docs":{},"串":{"docs":{},"内":{"docs":{},"容":{"docs":{},"写":{"docs":{},"入":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}},"经":{"docs":{},"验":{"docs":{},"：":{"docs":{},"若":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"表":{"docs":{},"长":{"docs":{},"为":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"为":{"docs":{},"小":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"表":{"docs":{},"长":{"docs":{},"（":{"docs":{},"最":{"docs":{},"好":{"docs":{},"接":{"docs":{},"近":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"）":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"质":{"docs":{},"数":{"docs":{},"或":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"小":{"docs":{},"于":{"2":{"0":{"docs":{},"质":{"docs":{},"因":{"docs":{},"子":{"docs":{},"的":{"docs":{},"合":{"docs":{},"数":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"特":{"docs":{},"点":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"总":{"docs":{},"结":{"docs":{},"出":{"docs":{},"以":{"docs":{},"下":{"docs":{},"五":{"docs":{},"种":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"形":{"docs":{},"态":{"docs":{},"：":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"权":{"docs":{},"值":{"docs":{},"{":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"阵":{"docs":{},"点":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{},"知":{"docs":{},"道":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"边":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}},"块":{"docs":{},"首":{"docs":{},"指":{"docs":{},"针":{"docs":{},"找":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"块":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"块":{"docs":{},"中":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"关":{"docs":{},"键":{"docs":{},"码":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"得":{"docs":{},"到":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"p":{"docs":{},"可":{"docs":{},"以":{"docs":{},"找":{"docs":{},"出":{"docs":{},"从":{"docs":{},"某":{"docs":{},"点":{"docs":{},"到":{"docs":{},"某":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644}}}}},"只":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}},"既":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"又":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"：":{"docs":{},"a":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}},"用":{"docs":{},"循":{"docs":{},"环":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"对":{"docs":{},"比":{"docs":{},"两":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"若":{"docs":{},"相":{"docs":{},"等":{"docs":{},"则":{"docs":{},"将":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{},"若":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"则":{"docs":{},"将":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"退":{"docs":{},"回":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"退":{"docs":{},"回":{"docs":{},"到":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"开":{"docs":{},"始":{"docs":{},"查":{"docs":{},"找":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"函":{"docs":{},"数":{"docs":{},"得":{"docs":{},"到":{"docs":{},"每":{"docs":{},"次":{"docs":{},"的":{"docs":{},"位":{"docs":{},"移":{"docs":{},"量":{"docs":{},"：":{"docs":{},"f":{"docs":{},"i":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"+":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"定":{"docs":{},"位":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}},"途":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456},"数据结构/图/边集数组/边集数组.html":{"ref":"数据结构/图/边集数组/边集数组.html","tf":0.16666666666666666}}},"通":{"docs":{},"俗":{"docs":{},"的":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"前":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"位":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"改":{"docs":{},"变":{"docs":{},"这":{"docs":{},"个":{"docs":{},"位":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"创":{"docs":{},"建":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"指":{"docs":{},"向":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"主":{"docs":{},"串":{"docs":{},"开":{"docs":{},"始":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"指":{"docs":{},"向":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/串/顺序串/难点操作/难点操作.html":{"ref":"数据结构/串/顺序串/难点操作/难点操作.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"申":{"docs":{},"请":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"l":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"被":{"docs":{},"指":{"docs":{},"向":{"docs":{},"备":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"静":{"docs":{},"态":{"docs":{},"链":{"docs":{},"表":{"docs":{},"找":{"docs":{},"到":{"docs":{},"位":{"docs":{},"序":{"docs":{},"待":{"docs":{},"删":{"docs":{},"除":{"docs":{},"位":{"docs":{},"序":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}},"介":{"docs":{},"绍":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"队":{"docs":{},"列":{"docs":{},"相":{"docs":{},"比":{"docs":{},"于":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"栈":{"docs":{},"更":{"docs":{},"多":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"队":{"docs":{},"列":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"断":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"后":{"docs":{},"面":{"docs":{},"堆":{"docs":{},"积":{"docs":{},"，":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"个":{"docs":{},"个":{"docs":{},"减":{"docs":{},"少":{"docs":{},"，":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"在":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"上":{"docs":{},"无":{"docs":{},"法":{"docs":{},"存":{"docs":{},"放":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"但":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"数":{"docs":{},"组":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"部":{"docs":{},"分":{"docs":{},"还":{"docs":{},"留":{"docs":{},"有":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"空":{"docs":{},"位":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"显":{"docs":{},"然":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"栈":{"docs":{},"可":{"docs":{},"行":{"docs":{},"而":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"可":{"docs":{},"行":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"栈":{"docs":{},"栈":{"docs":{},"底":{"docs":{},"部":{"docs":{},"分":{"docs":{},"一":{"docs":{},"直":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"前":{"docs":{},"端":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"简":{"docs":{},"化":{"docs":{},"成":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"带":{"docs":{},"权":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"位":{"docs":{},"置":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"标":{"docs":{},"志":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"哨":{"docs":{},"兵":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"有":{"docs":{},"权":{"docs":{},"值":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"docs":{},"a":{"5":{"docs":{},"a":{"5":{"docs":{},"a":{"5":{"docs":{},"，":{"docs":{},"e":{"1":{"0":{"docs":{},"e":{"1":{"0":{"docs":{},"e":{"1":{"0":{"docs":{},"，":{"docs":{},"b":{"1":{"5":{"docs":{},"b":{"1":{"5":{"docs":{},"b":{"1":{"5":{"docs":{},"，":{"docs":{},"d":{"3":{"0":{"docs":{},"d":{"3":{"0":{"docs":{},"d":{"3":{"0":{"docs":{},"，":{"docs":{},"c":{"4":{"0":{"docs":{},"c":{"4":{"0":{"docs":{},"c":{"4":{"0":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{},"好":{"docs":{},"它":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"，":{"docs":{},"即":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"和":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"是":{"docs":{},"先":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"用":{"docs":{},"以":{"docs":{},"保":{"docs":{},"存":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"头":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"连":{"docs":{},"接":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"：":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"分":{"docs":{},"别":{"docs":{},"保":{"docs":{},"存":{"docs":{},"与":{"docs":{},"边":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"不":{"docs":{},"用":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"边":{"docs":{},"表":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"一":{"docs":{},"下":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"吧":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}},"以":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"表":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"下":{"docs":{},"标":{"docs":{},"找":{"docs":{},"到":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"中":{"docs":{},"改":{"docs":{},"下":{"docs":{},"标":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"待":{"docs":{},"查":{"docs":{},"表":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"待":{"docs":{},"查":{"docs":{},"表":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"到":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"查":{"docs":{},"出":{"docs":{},"值":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"用":{"docs":{},"待":{"docs":{},"查":{"docs":{},"表":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"来":{"docs":{},"填":{"docs":{},"充":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"方":{"docs":{},"式":{"docs":{},"与":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"很":{"docs":{},"像":{"docs":{},"（":{"docs":{},"但":{"docs":{},"不":{"docs":{},"同":{"docs":{},"）":{"docs":{},"，":{"docs":{},"当":{"docs":{},"比":{"docs":{},"结":{"docs":{},"点":{"docs":{},"小":{"docs":{},"时":{"docs":{},"就":{"docs":{},"进":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"比":{"docs":{},"结":{"docs":{},"点":{"docs":{},"大":{"docs":{},"就":{"docs":{},"进":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"树":{"docs":{},"的":{"docs":{},"构":{"docs":{},"建":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"的":{"docs":{},"话":{"docs":{},"（":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"）":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"每":{"docs":{},"次":{"docs":{},"判":{"docs":{},"断":{"docs":{},"都":{"docs":{},"会":{"docs":{},"筛":{"docs":{},"选":{"docs":{},"掉":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"找":{"docs":{},"到":{"docs":{},"待":{"docs":{},"查":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"查":{"docs":{},"找":{"docs":{},"速":{"docs":{},"率":{"docs":{},"还":{"docs":{},"是":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"意":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"依":{"docs":{},"次":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"存":{"docs":{},"在":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"开":{"docs":{},"始":{"docs":{},"就":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"若":{"docs":{},"比":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"小":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"反":{"docs":{},"之":{"docs":{},"进":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"若":{"docs":{},"进":{"docs":{},"入":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"保":{"docs":{},"存":{"docs":{},"值":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"与":{"docs":{},"该":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"然":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"构":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"变":{"docs":{},"量":{"docs":{},"i":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{},"j":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"比":{"docs":{},"i":{"docs":{},"位":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"的":{"docs":{},"就":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"站":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"在":{"docs":{},"i":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"上":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"之":{"docs":{},"处":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"在":{"docs":{},"于":{"docs":{},"对":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{},"可":{"docs":{},"见":{"docs":{},"两":{"docs":{},"者":{"docs":{},"在":{"docs":{},"全":{"docs":{},"图":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"上":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"优":{"docs":{},"劣":{"docs":{},"之":{"docs":{},"分":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"选":{"docs":{},"择":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"起":{"docs":{},"点":{"docs":{},"为":{"docs":{},"a":{"docs":{},"，":{"docs":{},"每":{"docs":{},"走":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"就":{"docs":{},"做":{"docs":{},"上":{"docs":{},"标":{"docs":{},"记":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"图":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"a":{"docs":{},"。":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111}}}}}}}}}}}},"权":{"docs":{},"值":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"边":{"docs":{},"h":{"docs":{},"e":{"docs":{},"，":{"docs":{},"其":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"还":{"docs":{},"未":{"docs":{},"被":{"docs":{},"连":{"docs":{},"通":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"将":{"docs":{},"其":{"docs":{},"相":{"docs":{},"连":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"v":{"0":{"docs":{},"处":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"去":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"即":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}},"假":{"docs":{},"设":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"每":{"docs":{},"个":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"d":{"docs":{},"−":{"1":{"docs":{},"d":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"d":{"docs":{},"−":{"1":{"docs":{},"d":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}},"docs":{}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"下":{"docs":{},"这":{"docs":{},"个":{"docs":{},"图":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"在":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"使":{"docs":{},"用":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"更":{"docs":{},"加":{"docs":{},"方":{"docs":{},"便":{"docs":{},"；":{"docs":{},"然":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"来":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"在":{"docs":{},"算":{"docs":{},"法":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"始":{"docs":{},"终":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"入":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"原":{"docs":{},"来":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"表":{"docs":{},"结":{"docs":{},"点":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"入":{"docs":{},"度":{"docs":{},"域":{"docs":{},"i":{"docs":{},"n":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html","tf":0.25}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":10}},"的":{"docs":{},"删":{"docs":{},"除":{"docs":{},"标":{"docs":{},"准":{"docs":{},"语":{"docs":{},"句":{"docs":{},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"标":{"docs":{},"准":{"docs":{},"语":{"docs":{},"句":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"循":{"docs":{},"环":{"docs":{},"链":{"docs":{},"表":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/双向循环链表/双向循环链表.html":{"ref":"数据结构/链表/双向循环链表/双向循环链表.html","tf":10}},"类":{"docs":{},"型":{"docs":{"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}}}}},"链":{"docs":{},"表":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/双向链表/双向链表.html":{"ref":"数据结构/链表/双向链表/双向链表.html","tf":10}},"即":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"多":{"docs":{},"增":{"docs":{},"设":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"指":{"docs":{},"向":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/链表/双向链表/双向链表.html":{"ref":"数据结构/链表/双向链表/双向链表.html","tf":0.5}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886}}}}}}},"亲":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}},"：":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"这":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"表":{"docs":{},"示":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"数据结构/树/普通树/普通树.html":{"ref":"数据结构/树/普通树/普通树.html","tf":0.25}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"树":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}},"定":{"docs":{},"义":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}},"：":{"docs":{},"若":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"，":{"docs":{},"则":{"docs":{},"其":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"i":{"docs":{},"/":{"2":{"docs":{},"i":{"docs":{},"/":{"2":{"docs":{},"i":{"docs":{},"/":{"2":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},":":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}},"兼":{"docs":{},"链":{"docs":{},"表":{"docs":{"数据结构/链表/单链表/代码实现/代码实现.html":{"ref":"数据结构/链表/单链表/代码实现/代码实现.html","tf":0.03333333333333333}}}}},",":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}}}},"结":{"docs":{},"点":{"docs":{},":":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}},"插":{"docs":{},"法":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}},"循":{"docs":{},"环":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.03125}},"链":{"docs":{},"表":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/循环链表/循环链表.html":{"ref":"数据结构/链表/循环链表/循环链表.html","tf":10}},"类":{"docs":{},"型":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232}}}}}},"队":{"docs":{},"列":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":10}},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}},"：":{"docs":{},"即":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"头":{"docs":{},"尾":{"docs":{},"相":{"docs":{},"接":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"当":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"后":{"docs":{},"，":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"头":{"docs":{},"部":{"docs":{},"开":{"docs":{},"始":{"docs":{},"存":{"docs":{},"储":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":10}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894}}}}}}}}}}}}}}},"地":{"docs":{},"址":{"docs":{},"法":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":10}},"即":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"链":{"docs":{},"式":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}}}},"队":{"docs":{},"列":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":10}},"类":{"docs":{},"型":{"docs":{"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827}}}},"结":{"docs":{},"构":{"docs":{},"定":{"docs":{},"义":{"docs":{"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827}}}}}}}},"式":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},"指":{"docs":{},"针":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"链":{"docs":{},"表":{"docs":{"数据结构/链表/链表.html":{"ref":"数据结构/链表/链表.html","tf":0.008849557522123894},"数据结构/链表/静态链表/静态链表.html":{"ref":"数据结构/链表/静态链表/静态链表.html","tf":10}},"类":{"docs":{},"型":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}},"已":{"docs":{},"满":{"docs":{},"的":{"docs":{},"标":{"docs":{},"志":{"docs":{},"是":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"申":{"docs":{},"请":{"docs":{},"内":{"docs":{},"存":{"docs":{},"之":{"docs":{},"前":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"验":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}},"表":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.029850746268656716},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}},",":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"]":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"配":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},",":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"任":{"docs":{},"何":{"docs":{},"结":{"docs":{},"点":{"docs":{},"或":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}},"稳":{"docs":{},"定":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.024193548387096774}}}},"论":{"docs":{},"是":{"docs":{},"在":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"还":{"docs":{},"是":{"docs":{},"最":{"docs":{},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"中":{"docs":{},"，":{"docs":{},"其":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"是":{"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","tf":0.16666666666666666}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"如":{"docs":{},"果":{"docs":{},"图":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"和":{"docs":{},"边":{"docs":{},"非":{"docs":{},"常":{"docs":{},"多":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"在":{"docs":{},"短":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"选":{"docs":{},"择":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"就":{"docs":{},"要":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"斟":{"docs":{},"酌":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"不":{"docs":{},"受":{"docs":{},"限":{"docs":{},"制":{"docs":{},",":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}},"：":{"docs":{},"若":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"+":{"1":{"docs":{},"；":{"docs":{},"若":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"栈":{"1":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"即":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"1":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"栈":{"2":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}}}}}}}}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}}}}}},"docs":{}}}}},"指":{"docs":{},"针":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}},"即":{"docs":{},"为":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"(":{"docs":{},"a":{"1":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}},"docs":{}}}}}}},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"带":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}}}},"在":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"，":{"docs":{},"让":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"（":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"的":{"docs":{},"前":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"让":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"数据结构/链表/双向循环链表/双向循环链表.html":{"ref":"数据结构/链表/双向循环链表/双向循环链表.html","tf":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"docs":{},"该":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"是":{"docs":{},"否":{"docs":{},"发":{"docs":{},"生":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"总":{"docs":{},"之":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"为":{"docs":{},"多":{"docs":{},"少":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"放":{"docs":{},"到":{"docs":{},"对":{"docs":{},"应":{"docs":{},"地":{"docs":{},"址":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"再":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"表":{"docs":{},"，":{"docs":{},"当":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"产":{"docs":{},"生":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"表":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"时":{"docs":{},"，":{"docs":{},"先":{"docs":{},"通":{"docs":{},"过":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"在":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"找":{"docs":{},"到":{"docs":{},"，":{"docs":{},"再":{"docs":{},"到":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"表":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"来":{"docs":{},"作":{"docs":{},"为":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"先":{"docs":{},"来":{"docs":{},"看":{"docs":{},"两":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"吧":{"docs":{},"：":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"旦":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"就":{"docs":{},"去":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"足":{"docs":{},"够":{"docs":{},"大":{"docs":{},"，":{"docs":{},"空":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"地":{"docs":{},"址":{"docs":{},"总":{"docs":{},"能":{"docs":{},"找":{"docs":{},"到":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"记":{"docs":{},"录":{"docs":{},"存":{"docs":{},"入":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}},"使":{"docs":{},"树":{"docs":{},"中":{"docs":{},"某":{"docs":{},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"也":{"docs":{},"要":{"docs":{},"区":{"docs":{},"分":{"docs":{},"它":{"docs":{},"是":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"还":{"docs":{},"是":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"某":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"其":{"docs":{},"按":{"docs":{},"照":{"docs":{},"某":{"docs":{},"两":{"docs":{},"种":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"方":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"推":{"docs":{},"断":{"docs":{},"其":{"docs":{},"原":{"docs":{},"本":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"或":{"docs":{},"推":{"docs":{},"断":{"docs":{},"用":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"要":{"docs":{},"能":{"docs":{},"够":{"docs":{},"体":{"docs":{},"现":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"与":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"左":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"等":{"docs":{},"。":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"1":{"2":{"1":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"查":{"docs":{},"找":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":10}},"操":{"docs":{},"作":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":10}},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"高":{"docs":{"数据结构/链表/单链表/单链表.html":{"ref":"数据结构/链表/单链表/单链表.html","tf":0.043478260869565216}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"中":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"其":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"等":{"docs":{},"于":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"（":{"docs":{},"或":{"docs":{},"记":{"docs":{},"录":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"删":{"docs":{},"除":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}},"表":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}},"并":{"docs":{},"删":{"docs":{},"除":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}}}}},"询":{"docs":{},"某":{"docs":{},"个":{"docs":{},"“":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"”":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.02666666666666667},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.0297029702970297},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.041237113402061855},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.03125},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},"[":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.037037037037037035},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.05}},"+":{"docs":{},"+":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.041666666666666664}}}},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}},"=":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}},")":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}},";":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.03125},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}},"=":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}},"q":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}},"s":{"docs":{},";":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}}}}},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"q":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}},")":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.021551724137931036}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"1":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}},"+":{"1":{"docs":{},"=":{"docs":{},"=":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}},"docs":{}},"=":{"docs":{},"=":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}},"]":{"docs":{},"=":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}}}},"2":{"docs":{},")":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},";":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}}},"=":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}}}}}}}}},"]":{"docs":{},"=":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666}}}}}}},"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.05555555555555555},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517}}}}},"]":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517}},";":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517}}}},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.03773584905660377}}},"=":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}},"s":{"docs":{},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164}},")":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}},"+":{"1":{"docs":{},")":{"docs":{},"%":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}}}}}}}}}}},"docs":{}},"=":{"docs":{},"(":{"docs":{},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}},"=":{"docs":{},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}},"]":{"docs":{},";":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}},";":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}},")":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}},"+":{"1":{"docs":{},")":{"docs":{},"%":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}},"=":{"docs":{},"=":{"docs":{},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}}}}}}}}}}}}},"docs":{}},"=":{"docs":{},"(":{"docs":{},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}},"=":{"docs":{},"p":{"docs":{},")":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}},"q":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}},"s":{"docs":{},";":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}},"]":{"docs":{},"=":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.02631578947368421},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219}},")":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}},";":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},",":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},";":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.02666666666666667},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}},";":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.04},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}},";":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}}}},"j":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.04},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.02666666666666667}},"]":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02}},";":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}},")":{"docs":{"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"]":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808}}}}},"]":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.020618556701030927}}}},"s":{"docs":{},"]":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802}},";":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.020618556701030927}},";":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.015463917525773196}}},")":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},")":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.020618556701030927}}},";":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}}},",":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.02247191011235955},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744}}}},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.02631578947368421},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0079155672823219}},")":{"docs":{},";":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.04411764705882353},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},",":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},";":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.03669724770642202},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.010554089709762533}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}},";":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.019801980198019802}}},")":{"docs":{},";":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.031746031746031744},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.02531645569620253}},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}},"p":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"]":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}},"j":{"docs":{},"]":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}},"]":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}},")":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}},";":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}}},"b":{"docs":{},"f":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.05804749340369393}},")":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.0158311345646438}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},"[":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"]":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888}}}}}}}}}}}},"=":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},")":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}},";":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}}}}}}}}},"作":{"docs":{},"为":{"docs":{},"返":{"docs":{},"回":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}},"声":{"docs":{},"明":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"p":{"docs":{},"指":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},",":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},",":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"p":{"docs":{},"和":{"docs":{},"q":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"变":{"docs":{},"量":{"docs":{},"i":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},",":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}}}}}},"整":{"docs":{},"表":{"docs":{},"创":{"docs":{},"建":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}},"删":{"docs":{},"除":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"新":{"docs":{},"结":{"docs":{},"点":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}},"树":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"极":{"docs":{},"小":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"子":{"docs":{},"图":{"docs":{},"，":{"docs":{},"它":{"docs":{},"含":{"docs":{},"有":{"docs":{},"图":{"docs":{},"中":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"但":{"docs":{},"只":{"docs":{},"有":{"docs":{},"足":{"docs":{},"以":{"docs":{},"构":{"docs":{},"成":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"的":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},"n":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"森":{"docs":{},"林":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"森":{"docs":{},"林":{"docs":{},"由":{"docs":{},"若":{"docs":{},"干":{"docs":{},"棵":{"docs":{},"有":{"docs":{},"向":{"docs":{},"树":{"docs":{},"组":{"docs":{},"成":{"docs":{},"，":{"docs":{},"含":{"docs":{},"有":{"docs":{},"图":{"docs":{},"中":{"docs":{},"全":{"docs":{},"部":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"但":{"docs":{},"只":{"docs":{},"有":{"docs":{},"足":{"docs":{},"以":{"docs":{},"构":{"docs":{},"成":{"docs":{},"若":{"docs":{},"干":{"docs":{},"棵":{"docs":{},"不":{"docs":{},"相":{"docs":{},"交":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"树":{"docs":{},"的":{"docs":{},"弧":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"l":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}}}}}}},"待":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"指":{"docs":{},"向":{"docs":{},"待":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{},"j":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"从":{"docs":{},"i":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"选":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"让":{"docs":{},"其":{"docs":{},"与":{"docs":{},"i":{"docs":{},"位":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"读":{"docs":{},"取":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}},"入":{"docs":{},"对":{"docs":{},"应":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}},"q":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}},"随":{"docs":{},"机":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"数":{"docs":{},"字":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"p":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"p":{"docs":{"数据结构/链表/单链表/难点操作/难点操作.html":{"ref":"数据结构/链表/单链表/难点操作/难点操作.html","tf":0.015625}}}}}}}}}}}}}}}},"数":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}},"下":{"docs":{},"标":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}},"j":{"docs":{},"和":{"docs":{},"权":{"docs":{},"w":{"docs":{},":":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}},"权":{"docs":{},"值":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"边":{"docs":{},"是":{"1":{"7":{"docs":{},"，":{"docs":{},"可":{"docs":{},"是":{"docs":{},"此":{"docs":{},"时":{"docs":{},"g":{"docs":{},"f":{"docs":{},"已":{"docs":{},"经":{"docs":{},"间":{"docs":{},"接":{"docs":{},"连":{"docs":{},"通":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"再":{"docs":{},"找":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"会":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"建":{"docs":{},"立":{"docs":{},"得":{"docs":{},"大":{"docs":{},"一":{"docs":{},"些":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"空":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"便":{"docs":{},"于":{"docs":{},"插":{"docs":{},"入":{"docs":{},"时":{"docs":{},"不":{"docs":{},"至":{"docs":{},"于":{"docs":{},"溢":{"docs":{},"出":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"另":{"docs":{},"外":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"作":{"docs":{},"为":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"元":{"docs":{},"素":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"不":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"把":{"docs":{},"未":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"称":{"docs":{},"为":{"docs":{},"备":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"而":{"docs":{},"数":{"docs":{},"组":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"即":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"就":{"docs":{},"存":{"docs":{},"放":{"docs":{},"备":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"并":{"docs":{},"充":{"docs":{},"当":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"让":{"docs":{},"已":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{},"而":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"则":{"docs":{},"存":{"docs":{},"放":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"当":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"排":{"docs":{},"序":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"最":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"先":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"交":{"docs":{},"换":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}},"链":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358}}}}}}}},"关":{"docs":{},"联":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}},"比":{"docs":{},"于":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"最":{"docs":{},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"法":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"从":{"docs":{},"它":{"docs":{},"的":{"docs":{},"正":{"docs":{},"向":{"docs":{},"比":{"docs":{},"较":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"逆":{"docs":{},"向":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"其":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"路":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}},"类":{"docs":{},"型":{"docs":{"数据结构/链表/静态链表/代码实现/代码实现.html":{"ref":"数据结构/链表/静态链表/代码实现/代码实现.html","tf":0.014925373134328358},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}},"指":{"docs":{},"针":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00847457627118644},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},"类":{"docs":{},"型":{"docs":{"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827}}}}}},"定":{"docs":{},"义":{"docs":{"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662}}}},"拥":{"docs":{},"有":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"个":{"docs":{},"数":{"docs":{},"称":{"docs":{},"为":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}},"的":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"：":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}},"双":{"docs":{},"亲":{"docs":{},"：":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"根":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}},"子":{"docs":{},"孙":{"docs":{},"：":{"docs":{},"以":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"根":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"一":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"孩":{"docs":{},"子":{"docs":{},"：":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}},"层":{"docs":{},"次":{"docs":{},"：":{"docs":{},"从":{"docs":{},"根":{"docs":{},"开":{"docs":{},"始":{"docs":{},"定":{"docs":{},"义":{"docs":{},"起":{"docs":{},"，":{"docs":{},"根":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"根":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"度":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}},"祖":{"docs":{},"先":{"docs":{},"：":{"docs":{},"从":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"根":{"docs":{},"到":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"所":{"docs":{},"经":{"docs":{},"分":{"docs":{},"支":{"docs":{},"上":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"数":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}},"数":{"docs":{},"量":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}},"数":{"docs":{},"组":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}},"所":{"docs":{},"在":{"docs":{},"层":{"docs":{},"号":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"数":{"docs":{},"目":{"docs":{},"称":{"docs":{},"为":{"docs":{},"b":{"docs":{},"树":{"docs":{},"的":{"docs":{},"阶":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"，":{"docs":{},"即":{"2":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"1":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}},"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.05454545454545454},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.04878048780487805},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.03773584905660377},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.04},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.05333333333333334},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.0449438202247191},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.015463917525773196},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.03278688524590164},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}},"+":{"docs":{},"+":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.016260162601626018}}},"j":{"docs":{},";":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}}},"f":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}},"l":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}},"i":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.02531645569620253},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","tf":0.06666666666666667},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.024390243902439025},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.034482758620689655},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","tf":0.045454545454545456},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.01293103448275862}}},"j":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},"k":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}},"v":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.03278688524590164}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}},"q":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.01834862385321101}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.03636363636363636}},"+":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}},"；":{"docs":{},"当":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"时":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}},";":{"docs":{"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"a":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}},"×":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"+":{"docs":{},"b":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.029411764705882353}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.029411764705882353}},"\\":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}},"n":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},")":{"docs":{},"=":{"docs":{},"\\":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"{":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}},"{":{"0":{"docs":{},"n":{"docs":{},"=":{"0":{"1":{"docs":{},"n":{"docs":{},"=":{"1":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"+":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"2":{"docs":{},")":{"docs":{},"n":{"docs":{},">":{"1":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}}}}},"docs":{}}}}}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}},"​":{"docs":{},"⎩":{"docs":{},"​":{"docs":{},"⎪":{"docs":{},"​":{"docs":{},"⎨":{"docs":{},"​":{"docs":{},"⎪":{"docs":{},"​":{"docs":{},"⎧":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"+":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"2":{"docs":{},")":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"n":{"docs":{},"=":{"0":{"docs":{},"​":{"docs":{},"n":{"docs":{},"=":{"1":{"docs":{},"​":{"docs":{},"n":{"docs":{},">":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"+":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},")":{"docs":{},"\\":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},")":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776},"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616},"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"g":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"：":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}}}}}}}},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"(":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"+":{"docs":{},"d":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.03636363636363636},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.05660377358490566}},";":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886}}}}}},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}}}},",":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728}}},";":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","tf":0.041666666666666664}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}},"e":{"docs":{},";":{"docs":{"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.022727272727272728},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.021108179419525065},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},"，":{"docs":{},"由":{"docs":{},"定":{"docs":{},"义":{"docs":{},"可":{"docs":{},"知":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"因":{"docs":{},"子":{"docs":{},"可":{"docs":{},"正":{"docs":{},"可":{"docs":{},"负":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"要":{"docs":{},"求":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"因":{"docs":{},"子":{"docs":{},"的":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"最":{"docs":{},"多":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"称":{"docs":{},"该":{"docs":{},"树":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"拟":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"函":{"docs":{},"数":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"函":{"docs":{},"数":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"待":{"docs":{},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"序":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"指":{"docs":{},"向":{"docs":{},"现":{"docs":{},"在":{"docs":{},"申":{"docs":{},"请":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"三":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"接":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"处":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"1":{"docs":{},"n":{"docs":{},"_":{"1":{"docs":{},"n":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"看":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"体":{"docs":{},"，":{"docs":{},"其":{"docs":{},"权":{"docs":{},"值":{"docs":{},"为":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"权":{"docs":{},"值":{"docs":{},"之":{"docs":{},"和":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"：":{"docs":{},"n":{"1":{"1":{"5":{"docs":{},"n":{"docs":{},"_":{"1":{"1":{"5":{"docs":{},"n":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"1":{"5":{"docs":{},"，":{"docs":{},"b":{"1":{"5":{"docs":{},"b":{"1":{"5":{"docs":{},"b":{"1":{"5":{"docs":{},"，":{"docs":{},"d":{"3":{"0":{"docs":{},"d":{"3":{"0":{"docs":{},"d":{"3":{"0":{"docs":{},"，":{"docs":{},"c":{"4":{"0":{"docs":{},"c":{"4":{"0":{"docs":{},"c":{"4":{"0":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"到":{"docs":{},"其":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"结":{"docs":{},"点":{"docs":{},"到":{"docs":{},"其":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"数据结构/链表/静态链表/难点操作/难点操作.html":{"ref":"数据结构/链表/静态链表/难点操作/难点操作.html","tf":0.008695652173913044}}}}}}},"找":{"docs":{},"到":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"同":{"docs":{},"样":{"docs":{},"以":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"将":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"该":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}},"尾":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"以":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"将":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"该":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"二":{"docs":{},"小":{"docs":{},"的":{"docs":{},"边":{"docs":{},"i":{"docs":{},"c":{"docs":{},"，":{"docs":{},"也":{"docs":{},"并":{"docs":{},"未":{"docs":{},"相":{"docs":{},"连":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"将":{"docs":{},"其":{"docs":{},"相":{"docs":{},"连":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"：":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"依":{"docs":{},"附":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"依":{"docs":{},"附":{"docs":{},"于":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"f":{"docs":{},"[":{"docs":{},"k":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}},"让":{"docs":{},"变":{"docs":{},"量":{"docs":{},"i":{"docs":{},"站":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"变":{"docs":{},"量":{"docs":{},"j":{"docs":{},"从":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"往":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"如":{"docs":{},"上":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"第":{"docs":{},"二":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"到":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"往":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"j":{"docs":{},"和":{"docs":{},"j":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"以":{"docs":{},"上":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"将":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"与":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"每":{"docs":{},"个":{"docs":{},"点":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"以":{"docs":{},"v":{"0":{"docs":{},"为":{"docs":{},"中":{"docs":{},"转":{"docs":{},"点":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"其":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"否":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"与":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"与":{"docs":{},"上":{"docs":{},"述":{"docs":{},"操":{"docs":{},"作":{"docs":{},"相":{"docs":{},"似":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"比":{"docs":{},"较":{"docs":{},"完":{"docs":{},"并":{"docs":{},"交":{"docs":{},"换":{"docs":{},"完":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"然":{"docs":{},"没":{"docs":{},"有":{"docs":{},"未":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"退":{"docs":{},"回":{"docs":{},"到":{"docs":{},"f":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"v":{"1":{"docs":{},"处":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"去":{"docs":{},"第":{"docs":{},"三":{"docs":{},"层":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"即":{"docs":{},"v":{"1":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842}}},"docs":{}}}}}}}}}}}}}}}}}},"4":{"docs":{},"处":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"去":{"docs":{},"第":{"docs":{},"四":{"docs":{},"层":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"即":{"docs":{},"v":{"4":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}},"以":{"docs":{},"v":{"1":{"docs":{},"为":{"docs":{},"中":{"docs":{},"转":{"docs":{},"点":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"为":{"docs":{},"中":{"docs":{},"转":{"docs":{},"点":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"相":{"docs":{},"比":{"docs":{},"于":{"docs":{},"以":{"docs":{},"更":{"docs":{},"新":{"docs":{},"后":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"是":{"docs":{},"否":{"docs":{},"又":{"docs":{},"有":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"就":{"docs":{},"同":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"图":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"d":{"docs":{},"−":{"1":{"docs":{},"d":{"docs":{},"^":{"docs":{},"{":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}},"docs":{}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"让":{"docs":{},"这":{"docs":{},"个":{"docs":{},"查":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"值":{"docs":{},"取":{"docs":{},"代":{"docs":{},"列":{"docs":{},"号":{"docs":{},"，":{"docs":{},"即":{"docs":{},"查":{"docs":{},"看":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"，":{"docs":{},"其":{"docs":{},"值":{"docs":{},"为":{"2":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"此":{"docs":{},"时":{"docs":{},"路":{"docs":{},"径":{"docs":{},"为":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"看":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"4":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"路":{"docs":{},"径":{"docs":{},"为":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"3":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"3":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"3":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"6":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"路":{"docs":{},"径":{"docs":{},"为":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"4":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"4":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"4":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"3":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"路":{"docs":{},"径":{"docs":{},"为":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"6":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"6":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"6":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"7":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"路":{"docs":{},"径":{"docs":{},"为":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"7":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"7":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"7":{"docs":{},"]":{"docs":{},"[":{"docs":{},"v":{"8":{"docs":{},"]":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"8":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"路":{"docs":{},"径":{"docs":{},"为":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}},"求":{"docs":{},"出":{"docs":{},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}},"h":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.020833333333333332}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},",":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.0297029702970297}}}},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},")":{"docs":{},"：":{"docs":{},"对":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"调":{"docs":{},"用":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}},",":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}},")":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0392156862745098},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.020618556701030927}},";":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.02577319587628866}}}}}}},",":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},"e":{"docs":{},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}}}},"x":{"docs":{},";":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}},"y":{"docs":{},";":{"docs":{"数据结构/链表/循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/循环链表/代码实现/代码实现.html","tf":0.019230769230769232},"数据结构/链表/双向链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"ref":"数据结构/链表/双向循环链表/代码实现/代码实现.html","tf":0.018867924528301886},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"ref":"数据结构/栈/顺序栈/代码实现/代码实现.html","tf":0.030303030303030304},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"ref":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","tf":0.034482758620689655},"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666},"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.017241379310344827},"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662},"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}},"跳":{"docs":{},"表":{"docs":{"数据结构/跳表/跳表.html":{"ref":"数据结构/跳表/跳表.html","tf":11}}}},"所":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"直":{"docs":{},"接":{"docs":{},"找":{"docs":{},"到":{"docs":{},"其":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"单":{"docs":{},"单":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"+":{"docs":{},"散":{"docs":{},"列":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"我":{"docs":{},"们":{"docs":{},"每":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"得":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"对":{"docs":{},"其":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"就":{"docs":{},"快":{"docs":{},"多":{"docs":{},"了":{"docs":{},"。":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"优":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"有":{"docs":{},"了":{"docs":{},"循":{"docs":{},"环":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"给":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"添":{"docs":{},"加":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"下":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"docs":{},"在":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"再":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"作":{"docs":{},"为":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"同":{"docs":{},"样":{"docs":{},"连":{"docs":{},"接":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"保":{"docs":{},"存":{"docs":{},"以":{"docs":{},"表":{"docs":{},"头":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"链":{"docs":{},"起":{"docs":{},"来":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跟":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"条":{"docs":{},"新":{"docs":{},"的":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"，":{"docs":{},"但":{"docs":{},"上":{"docs":{},"面":{"docs":{},"说":{"docs":{},"过":{"docs":{},"了":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"访":{"docs":{},"问":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"与":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"之":{"docs":{},"后":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"是":{"docs":{},"b":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"按":{"docs":{},"照":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"原":{"docs":{},"则":{"docs":{},"先":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"c":{"docs":{},"、":{"docs":{},"d":{"docs":{},"、":{"docs":{},"e":{"docs":{},"、":{"docs":{},"f":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"上":{"docs":{},"面":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"想":{"docs":{},"找":{"docs":{},"到":{"docs":{},"某":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"且":{"docs":{},"对":{"docs":{},"图":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"查":{"docs":{},"找":{"docs":{},"频":{"docs":{},"率":{"docs":{},"并":{"docs":{},"不":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"迪":{"docs":{},"杰":{"docs":{},"斯":{"docs":{},"特":{"docs":{},"拉":{"docs":{},"算":{"docs":{},"法":{"docs":{},"更":{"docs":{},"适":{"docs":{},"合":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"对":{"docs":{},"图":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"查":{"docs":{},"找":{"docs":{},"频":{"docs":{},"率":{"docs":{},"很":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"弗":{"docs":{},"洛":{"docs":{},"伊":{"docs":{},"德":{"docs":{},"算":{"docs":{},"法":{"docs":{},"明":{"docs":{},"显":{"docs":{},"更":{"docs":{},"适":{"docs":{},"合":{"docs":{},"。":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"只":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"或":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"称":{"docs":{},"为":{"docs":{},"斜":{"docs":{},"树":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"只":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"左":{"docs":{},"斜":{"docs":{},"树":{"docs":{},"；":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"只":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"右":{"docs":{},"斜":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"支":{"docs":{},"结":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"docs":{},"下":{"docs":{},"列":{"docs":{},"信":{"docs":{},"息":{"docs":{},"数":{"docs":{},"据":{"docs":{},"(":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"，":{"docs":{},"a":{"0":{"docs":{},"a":{"docs":{},"_":{"0":{"docs":{},"a":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"k":{"1":{"docs":{},"k":{"docs":{},"_":{"1":{"docs":{},"k":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"a":{"1":{"docs":{},"a":{"docs":{},"_":{"1":{"docs":{},"a":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"k":{"2":{"docs":{},"k":{"docs":{},"_":{"2":{"docs":{},"k":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"a":{"2":{"docs":{},"a":{"docs":{},"_":{"2":{"docs":{},"a":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"k":{"docs":{},"n":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"k":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"：":{"docs":{},"k":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"k":{"docs":{},"_":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"k":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"，":{"2":{"2":{"2":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"n":{"docs":{},")":{"docs":{},"n":{"docs":{},")":{"docs":{},"n":{"docs":{},")":{"docs":{},"为":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"且":{"docs":{},"k":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"k":{"docs":{},"_":{"docs":{},"i":{"docs":{},"k":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"，":{"2":{"2":{"2":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"n":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"仅":{"docs":{},"含":{"docs":{},"有":{"docs":{},"其":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"（":{"docs":{},"或":{"docs":{},"最":{"docs":{},"小":{"docs":{},"）":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"位":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"层":{"docs":{},"次":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}}}}}}}}}},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"docs":{},"全":{"docs":{},"部":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"及":{"docs":{},"指":{"docs":{},"向":{"docs":{},"含":{"docs":{},"这":{"docs":{},"些":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"本":{"docs":{},"身":{"docs":{},"依":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"自":{"docs":{},"小":{"docs":{},"而":{"docs":{},"大":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"链":{"docs":{},"接":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"层":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}}},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"位":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"上":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"将":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{},"将":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"或":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"应":{"docs":{},"该":{"docs":{},"分":{"docs":{},"以":{"docs":{},"下":{"docs":{},"四":{"docs":{},"种":{"docs":{},"情":{"docs":{},"形":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"：":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"上":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"处":{"docs":{},"删":{"docs":{},"除":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"到":{"docs":{},"整":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"的":{"docs":{},"其":{"docs":{},"他":{"docs":{},"结":{"docs":{},"点":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"该":{"docs":{},"树":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"来":{"docs":{},"找":{"docs":{},"到":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"直":{"docs":{},"接":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"或":{"docs":{},"直":{"docs":{},"接":{"docs":{},"后":{"docs":{},"继":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"让":{"docs":{},"它":{"docs":{},"们":{"docs":{},"来":{"docs":{},"补":{"docs":{},"位":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"谓":{"docs":{},"归":{"docs":{},"并":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"先":{"docs":{},"从":{"docs":{},"单":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"组":{"docs":{},"，":{"docs":{},"与":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"又":{"docs":{},"将":{"docs":{},"两":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"不":{"docs":{},"断":{"docs":{},"像":{"docs":{},"这":{"docs":{},"样":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"就":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},")":{"docs":{},"，":{"docs":{},"也":{"docs":{},"叫":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{},"散":{"docs":{},"列":{"docs":{},"技":{"docs":{},"术":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"所":{"docs":{},"说":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"对":{"docs":{},"应":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}},"是":{"docs":{},"否":{"docs":{},"均":{"docs":{},"匀":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}},"技":{"docs":{},"术":{"docs":{},"是":{"docs":{},"在":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"位":{"docs":{},"置":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"之":{"docs":{},"间":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"对":{"docs":{},"应":{"docs":{},"关":{"docs":{},"系":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"对":{"docs":{},"应":{"docs":{},"一":{"docs":{},"个":{"docs":{},"存":{"docs":{},"储":{"docs":{},"位":{"docs":{},"置":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"既":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"存":{"docs":{},"储":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"查":{"docs":{},"找":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"与":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"、":{"docs":{},"树":{"docs":{},"、":{"docs":{},"图":{"docs":{},"等":{"docs":{},"结":{"docs":{},"构":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"散":{"docs":{},"列":{"docs":{},"技":{"docs":{},"术":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"什":{"docs":{},"么":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"与":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"有":{"docs":{},"关":{"docs":{},"联":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"散":{"docs":{},"列":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"面":{"docs":{},"向":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"适":{"docs":{},"合":{"docs":{},"的":{"docs":{},"求":{"docs":{},"解":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"查":{"docs":{},"找":{"docs":{},"与":{"docs":{},"给":{"docs":{},"定":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"查":{"docs":{},"找":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"简":{"docs":{},"化":{"docs":{},"了":{"docs":{},"比":{"docs":{},"较":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"就":{"docs":{},"会":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"高":{"docs":{},"。":{"docs":{},"但":{"docs":{},"散":{"docs":{},"列":{"docs":{},"技":{"docs":{},"术":{"docs":{},"不":{"docs":{},"具":{"docs":{},"备":{"docs":{},"很":{"docs":{},"多":{"docs":{},"常":{"docs":{},"规":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":10}},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},")":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":10}}}}}}}}},"中":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"与":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"内":{"docs":{},"容":{"docs":{},"直":{"docs":{},"接":{"docs":{},"相":{"docs":{},"关":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"其":{"docs":{},"通":{"docs":{},"过":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"求":{"docs":{},"得":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"一":{"docs":{},"般":{"docs":{},"也":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"而":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"直":{"docs":{},"接":{"docs":{},"找":{"docs":{},"到":{"docs":{},"它":{"docs":{},"在":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"的":{"docs":{},"用":{"docs":{},"法":{"docs":{},"。":{"docs":{"数据结构/散列表/散列表.html":{"ref":"数据结构/散列表/散列表.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}},"查":{"docs":{},"找":{"docs":{},"与":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"散":{"docs":{},"列":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"直":{"docs":{},"接":{"docs":{},"相":{"docs":{},"关":{"docs":{},"，":{"docs":{},"其":{"docs":{},"过":{"docs":{},"程":{"docs":{},"主":{"docs":{},"要":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"装":{"docs":{},"填":{"docs":{},"因":{"docs":{},"子":{"docs":{},"：":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"装":{"docs":{},"填":{"docs":{},"因":{"docs":{},"子":{"docs":{},"(":{"docs":{},"α":{"docs":{},"\\":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"α":{"docs":{},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"docs":{},"填":{"docs":{},"入":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"个":{"docs":{},"数":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},"即":{"docs":{},"通":{"docs":{},"过":{"docs":{},"建":{"docs":{},"立":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"以":{"docs":{},"及":{"docs":{},"处":{"docs":{},"理":{"docs":{},"散":{"docs":{},"列":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"对":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"求":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"直":{"docs":{},"接":{"docs":{},"以":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"为":{"docs":{},"地":{"docs":{},"址":{"docs":{},"直":{"docs":{},"接":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"若":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"记":{"docs":{},"录":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{"算法/查找/散列表查找/散列表查找.html":{"ref":"算法/查找/散列表查找/散列表查找.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":10}}}}}},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"装":{"docs":{},"填":{"docs":{},"因":{"docs":{},"子":{"docs":{},"越":{"docs":{},"大":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"产":{"docs":{},"生":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"就":{"docs":{},"越":{"docs":{},"大":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"降":{"docs":{},"低":{"docs":{},"装":{"docs":{},"填":{"docs":{},"因":{"docs":{},"子":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"增":{"docs":{},"大":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"让":{"docs":{},"散":{"docs":{},"列":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"往":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"靠":{"docs":{},"近":{"docs":{},"。":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"长":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}},"地":{"docs":{},"址":{"docs":{},"分":{"docs":{},"布":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"：":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"让":{"docs":{},"散":{"docs":{},"列":{"docs":{},"地":{"docs":{},"址":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"降":{"docs":{},"低":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"有":{"docs":{},"效":{"docs":{},"利":{"docs":{},"用":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"%":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.029411764705882353},"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.10526315789473684},"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.03636363636363636},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.020833333333333332}},"d":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}},"\"":{"docs":{},",":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.02531645569620253},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}},",":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"这":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"对":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"直":{"docs":{},"接":{"docs":{},"取":{"docs":{},"模":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"在":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"、":{"docs":{},"平":{"docs":{},"方":{"docs":{},"取":{"docs":{},"中":{"docs":{},"后":{"docs":{},"再":{"docs":{},"取":{"docs":{},"模":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"件":{"docs":{},"的":{"docs":{},"最":{"docs":{},"早":{"docs":{},"发":{"docs":{},"生":{"docs":{},"时":{"docs":{},"间":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"(":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}},"晚":{"docs":{},"发":{"docs":{},"生":{"docs":{},"时":{"docs":{},"间":{"docs":{},"l":{"docs":{},"t":{"docs":{},"v":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}},"决":{"docs":{},"策":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}},"原":{"docs":{},"则":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}},"：":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414},"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}},"理":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333},"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842},"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111},"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/二叉排序树/插入操作/插入操作.html":{"ref":"算法/查找/二叉排序树/插入操作/插入操作.html","tf":0.16666666666666666},"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616},"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667},"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705},"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}},"本":{"docs":{},"的":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"更":{"docs":{},"新":{"docs":{},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}},"平":{"docs":{},"方":{"docs":{},"取":{"docs":{},"中":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"(":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"树":{"docs":{},")":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":10}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}},"也":{"docs":{},"叫":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"树":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"其":{"docs":{},"发":{"docs":{},"明":{"docs":{},"者":{"docs":{},"名":{"docs":{},"字":{"docs":{},"命":{"docs":{},"名":{"docs":{},"的":{"docs":{},"（":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"高":{"docs":{},"度":{"docs":{},"（":{"docs":{},"深":{"docs":{},"度":{"docs":{},"）":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"上":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"高":{"docs":{},"度":{"docs":{},"减":{"docs":{},"去":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"高":{"docs":{},"度":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"值":{"docs":{},"称":{"docs":{},"为":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"因":{"docs":{},"子":{"docs":{},"b":{"docs":{},"f":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"构":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"当":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"先":{"docs":{},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"因":{"docs":{},"为":{"docs":{},"插":{"docs":{},"入":{"docs":{},"而":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"了":{"docs":{},"树":{"docs":{},"的":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"性":{"docs":{},"。":{"docs":{},"若":{"docs":{},"是":{"docs":{},"，":{"docs":{},"则":{"docs":{},"找":{"docs":{},"出":{"docs":{},"最":{"docs":{},"小":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"在":{"docs":{},"保":{"docs":{},"持":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"特":{"docs":{},"性":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"下":{"docs":{},"，":{"docs":{},"调":{"docs":{},"整":{"docs":{},"最":{"docs":{},"小":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"各":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"使":{"docs":{},"之":{"docs":{},"成":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"均":{"docs":{},"情":{"docs":{},"况":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}},"总":{"docs":{},"结":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}},"以":{"docs":{},"上":{"docs":{},"两":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"取":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"线":{"docs":{},"性":{"docs":{},"函":{"docs":{},"数":{"docs":{},"值":{"docs":{},"为":{"docs":{},"散":{"docs":{},"列":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"即":{"docs":{},"：":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"时":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/排序/归并排序/非递归归并排序/非递归归并排序.html":{"ref":"算法/排序/归并排序/非递归归并排序/非递归归并排序.html","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}},"折":{"docs":{},"叠":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}},"是":{"docs":{},"将":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"先":{"docs":{},"分":{"docs":{},"成":{"docs":{},"几":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"这":{"docs":{},"几":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"求":{"docs":{},"和":{"docs":{},"所":{"docs":{},"得":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"抽":{"docs":{},"取":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"所":{"docs":{},"得":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"作":{"docs":{},"为":{"docs":{},"地":{"docs":{},"址":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"在":{"docs":{},"于":{"docs":{},"选":{"docs":{},"择":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"，":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"如":{"docs":{},"果":{"docs":{},"选":{"docs":{},"得":{"docs":{},"不":{"docs":{},"好":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"能":{"docs":{},"产":{"docs":{},"生":{"docs":{},"同":{"docs":{},"义":{"docs":{},"词":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.013157894736842105}},"方":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":10},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}},"线":{"docs":{},"索":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/线索二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/线索二叉树/难点操作/难点操作.html","tf":0.25}}}}}}},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"并":{"docs":{},"非":{"docs":{},"为":{"docs":{},"了":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"提":{"docs":{},"高":{"docs":{},"查":{"docs":{},"找":{"docs":{},"和":{"docs":{},"插":{"docs":{},"入":{"docs":{},"删":{"docs":{},"除":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"代":{"docs":{},"价":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"称":{"docs":{},"为":{"docs":{},"最":{"docs":{},"小":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"会":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"此":{"docs":{},"网":{"docs":{},"的":{"docs":{},"全":{"docs":{},"部":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"被":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"它":{"docs":{},"是":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"的":{"docs":{},"a":{"docs":{},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"出":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"少":{"docs":{},"了":{"docs":{},"，":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"a":{"docs":{},"o":{"docs":{},"v":{"docs":{},"网":{"docs":{},"。":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"散":{"docs":{},"列":{"docs":{},"地":{"docs":{},"址":{"docs":{},"所":{"docs":{},"需":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"很":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"会":{"docs":{},"耗":{"docs":{},"费":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"这":{"docs":{},"对":{"docs":{},"于":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"地":{"docs":{},"查":{"docs":{},"找":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"大":{"docs":{},"大":{"docs":{},"降":{"docs":{},"低":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"了":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"超":{"docs":{},"过":{"docs":{},"其":{"docs":{},"他":{"docs":{},"查":{"docs":{},"找":{"docs":{},"技":{"docs":{},"术":{"docs":{},"与":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"频":{"docs":{},"率":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}},"号":{"docs":{},"表":{"docs":{},"：":{"docs":{},"存":{"docs":{},"储":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"号":{"docs":{},"（":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"该":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"为":{"docs":{},"最":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"散":{"docs":{},"列":{"docs":{},"表":{"docs":{},"长":{"docs":{},"为":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"公":{"docs":{},"式":{"docs":{},"为":{"docs":{},"：":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"弧":{"docs":{},"的":{"docs":{},"权":{"docs":{},"重":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}},"边":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"最":{"docs":{},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"法":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"将":{"docs":{},"部":{"docs":{},"分":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"替":{"docs":{},"换":{"docs":{},"到":{"docs":{},"了":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"其":{"docs":{},"整":{"docs":{},"体":{"docs":{},"有":{"docs":{},"序":{"docs":{},"程":{"docs":{},"度":{"docs":{},"是":{"docs":{},"在":{"docs":{},"逐":{"docs":{},"渐":{"docs":{},"增":{"docs":{},"加":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"全":{"docs":{},"熵":{"docs":{},"减":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"向":{"docs":{},"最":{"docs":{},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"那":{"docs":{},"样":{"docs":{},"有":{"docs":{},"时":{"docs":{},"还":{"docs":{},"会":{"docs":{},"让":{"docs":{},"比":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"跑":{"docs":{},"到":{"docs":{},"后":{"docs":{},"面":{"docs":{},"去":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"的":{"docs":{},"交":{"docs":{},"换":{"docs":{},"次":{"docs":{},"数":{"docs":{},"比":{"docs":{},"最":{"docs":{},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"少":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"。":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"适":{"docs":{},"用":{"docs":{},"：":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"而":{"docs":{},"位":{"docs":{},"数":{"docs":{},"又":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"位":{"docs":{},"数":{"docs":{},"比":{"docs":{},"较":{"docs":{},"多":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"实":{"docs":{},"现":{"docs":{},"直":{"docs":{},"到":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"且":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"若":{"docs":{},"干":{"docs":{},"位":{"docs":{},"分":{"docs":{},"布":{"docs":{},"较":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"折":{"docs":{},"叠":{"docs":{},"法":{"docs":{},"事":{"docs":{},"先":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"适":{"docs":{},"合":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"位":{"docs":{},"数":{"docs":{},"较":{"docs":{},"多":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"较":{"docs":{},"小":{"docs":{},"且":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"得":{"docs":{},"到":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"值":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"该":{"docs":{},"随":{"docs":{},"机":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"即":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"=":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"是":{"docs":{},"随":{"docs":{},"机":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"当":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"构":{"docs":{},"造":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{"数据结构/散列表/构造方法/构造方法.html":{"ref":"数据结构/散列表/构造方法/构造方法.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"原":{"docs":{},"理":{"docs":{},"可":{"docs":{},"以":{"docs":{},"对":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"进":{"docs":{},"行":{"docs":{},"完":{"docs":{},"全":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"非":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"，":{"docs":{},"则":{"docs":{},"对":{"docs":{},"它":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"分":{"docs":{},"量":{"docs":{},"分":{"docs":{},"别":{"docs":{},"进":{"docs":{},"行":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"后":{"docs":{},"，":{"docs":{},"若":{"docs":{},"图":{"docs":{},"中":{"docs":{},"尚":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"未":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"则":{"docs":{},"另":{"docs":{},"选":{"docs":{},"图":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"未":{"docs":{},"曾":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"作":{"docs":{},"起":{"docs":{},"始":{"docs":{},"点":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"上":{"docs":{},"述":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"图":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.0625},"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.06557377049180328},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.05504587155963303}},"^":{"2":{"docs":{},"−":{"docs":{},"q":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"(":{"docs":{},"q":{"docs":{},"⩽":{"docs":{},"m":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"q":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.05405405405405406},"数据结构/队列/链队列/代码实现/代码实现.html":{"ref":"数据结构/队列/链队列/代码实现/代码实现.html","tf":0.034482758620689655},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"q":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"q":{"docs":{},")":{"docs":{},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.03278688524590164}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.041666666666666664}}}}}}}}},",":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},"(":{"docs":{},"l":{"docs":{},",":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}}},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.005154639175257732}}}}}}}}}},"docs":{},"(":{"docs":{},"l":{"docs":{},",":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}}}},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}}}}}},";":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.022988505747126436}}}},"公":{"docs":{},"共":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"区":{"docs":{},"法":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}},"再":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"法":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"有":{"docs":{},"上":{"docs":{},"述":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"困":{"docs":{},"难":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"再":{"docs":{},"给":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"将":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"指":{"docs":{},"针":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"中":{"docs":{},"取":{"docs":{},"两":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"权":{"docs":{},"值":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"结":{"docs":{},"点":{"docs":{},"n":{"2":{"docs":{},"n":{"docs":{},"_":{"2":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"逐":{"docs":{},"步":{"docs":{},"将":{"docs":{},"a":{"docs":{},"b":{"docs":{},"、":{"docs":{},"a":{"docs":{},"f":{"docs":{},"、":{"docs":{},"b":{"docs":{},"i":{"docs":{},"、":{"docs":{},"b":{"docs":{},"g":{"docs":{},"、":{"docs":{},"h":{"docs":{},"d":{"docs":{},"相":{"docs":{},"连":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"冲":{"docs":{},"突":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":10}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}}},"散":{"docs":{},"列":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"公":{"docs":{},"式":{"docs":{},"是":{"docs":{},"：":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"也":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"放":{"docs":{},"定":{"docs":{},"址":{"docs":{},"法":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}},"改":{"docs":{},"善":{"docs":{},"这":{"docs":{},"种":{"docs":{},"堆":{"docs":{},"积":{"docs":{},"现":{"docs":{},"象":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}},"变":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}}},"进":{"docs":{},"过":{"docs":{},"的":{"docs":{},"求":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}}}}}},"此":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"很":{"docs":{},"多":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"绝":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"保":{"docs":{},"障":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"带":{"docs":{},"来":{"docs":{},"了":{"docs":{},"查":{"docs":{},"找":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"损":{"docs":{},"耗":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"大":{"docs":{},"量":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"。":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"传":{"docs":{},"输":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"为":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"已":{"docs":{},"连":{"docs":{},"通":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"再":{"docs":{},"看":{"docs":{},"与":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"相":{"docs":{},"连":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"边":{"docs":{},"：":{"docs":{},"b":{"docs":{},"c":{"docs":{},"、":{"docs":{},"b":{"docs":{},"i":{"docs":{},"、":{"docs":{},"b":{"docs":{},"g":{"docs":{},"和":{"docs":{},"a":{"docs":{},"f":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"权":{"docs":{},"值":{"docs":{},"更":{"docs":{},"小":{"docs":{},"的":{"docs":{},"a":{"docs":{},"f":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{},"它":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"两":{"docs":{},"条":{"docs":{},"边":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"a":{"docs":{},"b":{"docs":{},"和":{"docs":{},"a":{"docs":{},"f":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"权":{"docs":{},"值":{"docs":{},"更":{"docs":{},"小":{"docs":{},"的":{"docs":{},"a":{"docs":{},"b":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}},"端":{"docs":{},"点":{"docs":{},"为":{"docs":{},"b":{"docs":{},"和":{"docs":{},"f":{"docs":{},"，":{"docs":{},"则":{"docs":{},"看":{"docs":{},"与":{"docs":{},"b":{"docs":{},"和":{"docs":{},"f":{"docs":{},"相":{"docs":{},"连":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"边":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"连":{"docs":{},"通":{"docs":{},"时":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"得":{"docs":{},"到":{"docs":{},"该":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"该":{"docs":{},"路":{"docs":{},"径":{"docs":{},"与":{"docs":{},"用":{"docs":{},"迪":{"docs":{},"杰":{"docs":{},"斯":{"docs":{},"特":{"docs":{},"拉":{"docs":{},"算":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"散":{"docs":{},"列":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"数据结构/散列表/处理冲突/处理冲突.html":{"ref":"数据结构/散列表/处理冲突/处理冲突.html","tf":0.017543859649122806}}}}}}}}}}}}}},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"：":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"标":{"docs":{},"志":{"docs":{},"变":{"docs":{},"量":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"，":{"docs":{},"当":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142},"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}},")":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045},"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"ref":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","tf":0.02},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.0297029702970297}}},"×":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"×":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}}}}}}}}},"÷":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"÷":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}}}}}}},"−":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.032520325203252036}},"、":{"3":{"3":{"3":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"、":{"docs":{},"×":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"×":{"docs":{},"、":{"docs":{},"+":{"docs":{},"+":{"docs":{},"+":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"、":{"1":{"0":{"1":{"0":{"1":{"0":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}},"、":{"2":{"2":{"2":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"、":{"docs":{},"÷":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"÷":{"docs":{},"、":{"docs":{},"+":{"docs":{},"+":{"docs":{},"+":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"，":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"取":{"docs":{},"出":{"1":{"1":{"1":{"docs":{},"、":{"3":{"3":{"3":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"2":{"2":{"2":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"9":{"9":{"9":{"docs":{},"、":{"2":{"2":{"2":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}},"例":{"docs":{},"：":{"docs":{},"将":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"9":{"docs":{},"+":{"docs":{},"(":{"3":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"×":{"3":{"docs":{},"+":{"1":{"0":{"docs":{},"÷":{"2":{"9":{"docs":{},"+":{"docs":{},"(":{"3":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}}},"docs":{}}}},"docs":{}}}}},"计":{"docs":{},"算":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"：":{"9":{"9":{"9":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"先":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"作":{"docs":{},"为":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"运":{"docs":{},"算":{"docs":{},"对":{"docs":{},"象":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}},"依":{"docs":{},"次":{"docs":{},"后":{"docs":{},"根":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"每":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"再":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"边":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"无":{"docs":{},"穷":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.012658227848101266}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"依":{"docs":{},"次":{"docs":{},"先":{"docs":{},"根":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"根":{"docs":{},"的":{"docs":{},"每":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}},"森":{"docs":{},"林":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"依":{"docs":{},"次":{"docs":{},"先":{"docs":{},"根":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"根":{"docs":{},"的":{"docs":{},"每":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"再":{"docs":{},"依":{"docs":{},"次":{"docs":{},"用":{"docs":{},"同":{"docs":{},"样":{"docs":{},"方":{"docs":{},"式":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"后":{"docs":{},"根":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"该":{"docs":{},"树":{"docs":{},"的":{"docs":{},"每":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"依":{"docs":{},"次":{"docs":{},"用":{"docs":{},"同":{"docs":{},"样":{"docs":{},"方":{"docs":{},"式":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"结":{"docs":{},"论":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"按":{"docs":{},"照":{"docs":{},"以":{"docs":{},"下":{"docs":{},"结":{"docs":{},"构":{"docs":{},"构":{"docs":{},"造":{"docs":{},"这":{"docs":{},"个":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"兔":{"docs":{},"子":{"docs":{},"对":{"docs":{},"数":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}},"出":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"弹":{"docs":{},"栈":{"docs":{},"：":{"docs":{},"即":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}},"队":{"docs":{},"列":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}},"：":{"docs":{},"删":{"docs":{},"除":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}},"度":{"docs":{},"：":{"docs":{},"以":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"为":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"称":{"docs":{},"为":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"的":{"docs":{},"出":{"docs":{},"度":{"docs":{},"（":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"）":{"docs":{},"，":{"docs":{},"记":{"docs":{},"为":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"表":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"用":{"docs":{},"于":{"docs":{},"保":{"docs":{},"存":{"docs":{},"以":{"docs":{},"表":{"docs":{},"头":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"作":{"docs":{},"为":{"docs":{},"链":{"docs":{},"连":{"docs":{},"接":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"以":{"docs":{},"表":{"docs":{},"头":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"链":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.020202020202020204}}}}}}},"同":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"。":{"docs":{},"元":{"docs":{},"素":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"元":{"docs":{},"素":{"docs":{},"具":{"docs":{},"有":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"和":{"docs":{},"后":{"docs":{},"继":{"docs":{},"关":{"docs":{},"系":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"。":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"最":{"docs":{},"小":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"作":{"docs":{},"为":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"左":{"docs":{},"侧":{"docs":{},"运":{"docs":{},"算":{"docs":{},"对":{"docs":{},"象":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}},"缀":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"括":{"docs":{},"号":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"书":{"docs":{},"写":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"也":{"docs":{},"叫":{"docs":{},"作":{"docs":{},"逆":{"docs":{},"波":{"docs":{},"兰":{"docs":{},"表":{"docs":{},"示":{"docs":{},"。":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"都":{"docs":{},"是":{"docs":{},"在":{"docs":{},"要":{"docs":{},"运":{"docs":{},"算":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"出":{"docs":{},"现":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"达":{"docs":{},"式":{"docs":{},"为":{"docs":{},"：":{"9":{"9":{"9":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}},"常":{"docs":{},"规":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"方":{"docs":{},"法":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}},"引":{"docs":{},"例":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"兔":{"docs":{},"子":{"docs":{},"在":{"docs":{},"出":{"docs":{},"生":{"docs":{},"两":{"docs":{},"个":{"docs":{},"月":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"有":{"docs":{},"繁":{"docs":{},"殖":{"docs":{},"能":{"docs":{},"力":{"docs":{},"，":{"docs":{},"一":{"docs":{},"对":{"docs":{},"兔":{"docs":{},"子":{"docs":{},"每":{"docs":{},"个":{"docs":{},"月":{"docs":{},"能":{"docs":{},"生":{"docs":{},"出":{"docs":{},"一":{"docs":{},"对":{"docs":{},"小":{"docs":{},"兔":{"docs":{},"子":{"docs":{},"来":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"所":{"docs":{},"有":{"docs":{},"兔":{"docs":{},"子":{"docs":{},"都":{"docs":{},"不":{"docs":{},"死":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"一":{"docs":{},"年":{"docs":{},"以":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"繁":{"docs":{},"殖":{"docs":{},"多":{"docs":{},"少":{"docs":{},"对":{"docs":{},"兔":{"docs":{},"子":{"docs":{},"呢":{"docs":{},"？":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666},"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705},"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555},"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842},"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776},"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125},"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664},"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616},"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05},"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1},"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091},"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111},"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693},"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625},"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{},"不":{"docs":{},"进":{"docs":{},"行":{"docs":{},"表":{"docs":{},"示":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":10}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"在":{"docs":{},"于":{"docs":{},"：":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}}}},"是":{"docs":{},"限":{"docs":{},"定":{"docs":{},"仅":{"docs":{},"在":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"进":{"docs":{},"行":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}},"条":{"docs":{},"件":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":10.004065040650406}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}},"从":{"docs":{},"栈":{"docs":{},"底":{"docs":{},"开":{"docs":{},"始":{"docs":{},")":{"docs":{},"：":{"docs":{},"空":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}},"底":{"docs":{},"：":{"docs":{},"与":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"相":{"docs":{},"对":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"端":{"docs":{},"称":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"底":{"docs":{},"（":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"）":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}},"docs":{}}}}}}}},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}},"引":{"docs":{},"入":{"docs":{},"简":{"docs":{},"化":{"docs":{},"了":{"docs":{},"程":{"docs":{},"序":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"划":{"docs":{},"分":{"docs":{},"了":{"docs":{},"不":{"docs":{},"同":{"docs":{},"关":{"docs":{},"注":{"docs":{},"层":{"docs":{},"次":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"思":{"docs":{},"考":{"docs":{},"范":{"docs":{},"围":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"，":{"docs":{},"更":{"docs":{},"加":{"docs":{},"聚":{"docs":{},"焦":{"docs":{},"于":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"核":{"docs":{},"心":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"抽":{"docs":{},"象":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}},"长":{"docs":{},"度":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}}}},"顶":{"docs":{},"：":{"docs":{},"允":{"docs":{},"许":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{},"称":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"（":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"）":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}}}}}}}}},"：":{"docs":{},"+":{"docs":{},"+":{"docs":{},"+":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.016260162601626018}},"、":{"docs":{},"(":{"docs":{},"(":{"docs":{},"(":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}},"、":{"docs":{},"−":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}}}}}},"×":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"×":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}}}}}}}}},"÷":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"÷":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}}}}}}}}}}},"空":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}},"满":{"docs":{},"：":{"docs":{},"若":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"是":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"1":{"docs":{},"+":{"1":{"docs":{},"=":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"2":{"docs":{},"时":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"满":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}}},"docs":{}}}}}},"docs":{}}},"docs":{}}}}}}}},"符":{"docs":{},"号":{"docs":{},"(":{"docs":{},"(":{"docs":{},"(":{"docs":{},"，":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}},")":{"docs":{},")":{"docs":{},")":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"依":{"docs":{},"次":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"并":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"(":{"docs":{},"(":{"docs":{},"(":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"低":{"docs":{},"于":{"docs":{},"×":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"×":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"×":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"×":{"docs":{},"；":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"不":{"docs":{},"高":{"docs":{},"于":{"docs":{},"+":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"+":{"docs":{},"+":{"docs":{},"+":{"docs":{},"；":{"docs":{},"入":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"取":{"docs":{},"出":{"5":{"5":{"5":{"docs":{},"、":{"1":{"5":{"1":{"5":{"1":{"5":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"2":{"0":{"2":{"0":{"2":{"0":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"2":{"0":{"2":{"0":{"2":{"0":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"6":{"6":{"6":{"docs":{},"、":{"9":{"9":{"9":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"1":{"5":{"1":{"5":{"1":{"5":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"1":{"5":{"1":{"5":{"1":{"5":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"×":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"×":{"docs":{},"，":{"docs":{},"入":{"docs":{},"栈":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}},"取":{"docs":{},"出":{"3":{"3":{"3":{"docs":{},"、":{"2":{"2":{"2":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"6":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"9":{"9":{"9":{"docs":{},"、":{"6":{"6":{"6":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"÷":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"÷":{"docs":{},"，":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}},"取":{"docs":{},"出":{"2":{"2":{"2":{"docs":{},"、":{"1":{"0":{"1":{"0":{"1":{"0":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"5":{"5":{"5":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"1":{"5":{"1":{"5":{"1":{"5":{"docs":{},"、":{"5":{"5":{"5":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"−":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}}}}},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"月":{"docs":{},"数":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"规":{"docs":{},"则":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}},"：":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.008130081300813009}},"若":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"空":{"docs":{},"操":{"docs":{},"作":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"先":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"再":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"空":{"docs":{},"操":{"docs":{},"作":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"先":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"后":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"访":{"docs":{},"问":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"是":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"树":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"从":{"docs":{},"上":{"docs":{},"而":{"docs":{},"下":{"docs":{},"逐":{"docs":{},"层":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"层":{"docs":{},"中":{"docs":{},"，":{"docs":{},"按":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"对":{"docs":{},"结":{"docs":{},"点":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"（":{"docs":{},"注":{"docs":{},"意":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"先":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"，":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"是":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}},"进":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"压":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"：":{"docs":{},"即":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886}}}}}},"递":{"docs":{},"归":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}},"方":{"docs":{},"法":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}},"实":{"docs":{},"现":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}}}},"遍":{"docs":{},"历":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176},"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":10}},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"取":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"2":{"0":{"2":{"0":{"2":{"0":{"docs":{},"。":{"docs":{},"栈":{"docs":{},"：":{"docs":{},"空":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"输":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/栈/栈.html":{"ref":"数据结构/栈/栈.html","tf":0.0040650406504065045}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}},"方":{"docs":{},"法":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}},"过":{"docs":{},"程":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616},"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}},"概":{"docs":{},"念":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}},"实":{"docs":{},"现":{"docs":{"数据结构/栈/顺序栈/顺序栈.html":{"ref":"数据结构/栈/顺序栈/顺序栈.html","tf":0.08333333333333333},"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}},";":{"docs":{"数据结构/栈/顺序栈/难点操作/难点操作.html":{"ref":"数据结构/栈/顺序栈/难点操作/难点操作.html","tf":0.018518518518518517},"数据结构/栈/链栈/难点操作/难点操作.html":{"ref":"数据结构/栈/链栈/难点操作/难点操作.html","tf":0.018867924528301886},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","tf":0.010309278350515464}}},"且":{"docs":{},"该":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"注":{"docs":{},"意":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667},"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125}}}},"该":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"时":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"都":{"docs":{},"是":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"需":{"docs":{},"求":{"docs":{},"有":{"docs":{},"相":{"docs":{},"反":{"docs":{},"关":{"docs":{},"系":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"增":{"docs":{},"长":{"docs":{},"时":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"在":{"docs":{},"缩":{"docs":{},"短":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"数据结构/栈/两栈共享空间/两栈共享空间.html":{"ref":"数据结构/栈/两栈共享空间/两栈共享空间.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"将":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"与":{"docs":{},"之":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"留":{"docs":{},"余":{"docs":{},"数":{"docs":{},"法":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}},"]":{"docs":{},";":{"docs":{"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"ref":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","tf":0.016666666666666666},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}}},"均":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"空":{"docs":{},"间":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"栈":{"docs":{},"需":{"docs":{},"要":{"docs":{},"事":{"docs":{},"先":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"空":{"docs":{},"间":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"的":{"docs":{},"优":{"docs":{},"势":{"docs":{},"是":{"docs":{},"存":{"docs":{},"取":{"docs":{},"时":{"docs":{},"定":{"docs":{},"位":{"docs":{},"很":{"docs":{},"方":{"docs":{},"便":{"docs":{},"，":{"docs":{},"而":{"docs":{},"链":{"docs":{},"栈":{"docs":{},"则":{"docs":{},"要":{"docs":{},"求":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"有":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"，":{"docs":{},"这":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"但":{"docs":{},"对":{"docs":{},"于":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"无":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{"数据结构/栈/链栈/链栈.html":{"ref":"数据结构/栈/链栈/链栈.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"由":{"docs":{},"于":{"docs":{},"对":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"总":{"docs":{},"是":{"docs":{},"对":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"起":{"docs":{},"见":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"而":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"：":{"docs":{},"把":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"作":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"结":{"docs":{},"构":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"数据结构/栈/链栈/代码实现/代码实现.html":{"ref":"数据结构/栈/链栈/代码实现/代码实现.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"是":{"docs":{},"由":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"和":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{},"合":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"比":{"docs":{},"较":{"docs":{},"困":{"docs":{},"难":{"docs":{},"，":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"想":{"docs":{},"到":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"构":{"docs":{},"来":{"docs":{},"分":{"docs":{},"别":{"docs":{},"存":{"docs":{},"储":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"是":{"docs":{},"有":{"docs":{},"方":{"docs":{},"向":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"行":{"docs":{},"数":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"列":{"docs":{},"数":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"们":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"都":{"docs":{},"是":{"docs":{},"由":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"它":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"它":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"还":{"docs":{},"好":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"性":{"docs":{},"能":{"docs":{},"一":{"docs":{},"般":{"docs":{},"；":{"docs":{},"而":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"和":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"其":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"插":{"docs":{},"入":{"docs":{},"时":{"docs":{},"就":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"大":{"docs":{},"块":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"还":{"docs":{},"好":{"docs":{},"，":{"docs":{},"但":{"docs":{},"链":{"docs":{},"表":{"docs":{},"又":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"查":{"docs":{},"找":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"之":{"docs":{},"前":{"docs":{},"需":{"docs":{},"要":{"docs":{},"不":{"docs":{},"断":{"docs":{},"地":{"docs":{},"从":{"docs":{},"外":{"docs":{},"存":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"读":{"docs":{},"入":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"保":{"docs":{},"持":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"保":{"docs":{},"存":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"整":{"docs":{},"个":{"docs":{},"树":{"docs":{},"的":{"docs":{},"规":{"docs":{},"模":{"docs":{},"就":{"docs":{},"会":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"计":{"docs":{},"算":{"docs":{},"机":{"docs":{},"进":{"docs":{},"行":{"docs":{},"读":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"也":{"docs":{},"会":{"docs":{},"相":{"docs":{},"应":{"docs":{},"地":{"docs":{},"变":{"docs":{},"多":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"它":{"docs":{},"就":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"空":{"docs":{},"间":{"docs":{},"上":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"损":{"docs":{},"耗":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"通":{"docs":{},"过":{"docs":{},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"性":{"docs":{},"能":{"docs":{},"上":{"docs":{},"还":{"docs":{},"会":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"提":{"docs":{},"高":{"docs":{},"。":{"docs":{"算法/排序/归并排序/非递归归并排序/非递归归并排序.html":{"ref":"算法/排序/归并排序/非递归归并排序/非递归归并排序.html","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{"数据结构/队列/循环队列/难点操作/难点操作.html":{"ref":"数据结构/队列/循环队列/难点操作/难点操作.html","tf":0.020833333333333332}},"：":{"docs":{},"插":{"docs":{},"入":{"docs":{},"元":{"docs":{},"素":{"docs":{},"到":{"docs":{},"队":{"docs":{},"尾":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"数据结构/队列/链队列/难点操作/难点操作.html":{"ref":"数据结构/队列/链队列/难点操作/难点操作.html","tf":0.01639344262295082}}}}},"度":{"docs":{},"：":{"docs":{},"以":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"为":{"docs":{},"头":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"称":{"docs":{},"为":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"的":{"docs":{},"入":{"docs":{},"度":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"）":{"docs":{},"，":{"docs":{},"记":{"docs":{},"为":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"表":{"docs":{},"的":{"docs":{},"链":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.020202020202020204}}}}}}},"队":{"docs":{},"列":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":10}},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}},"是":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"在":{"docs":{},"一":{"docs":{},"端":{"docs":{},"进":{"docs":{},"行":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},",":{"docs":{},"而":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"端":{"docs":{},"进":{"docs":{},"行":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},".":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}},"链":{"docs":{},"式":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"即":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"的":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"只":{"docs":{},"能":{"docs":{},"尾":{"docs":{},"进":{"docs":{},"头":{"docs":{},"出":{"docs":{},"，":{"docs":{},"简":{"docs":{},"称":{"docs":{},"为":{"docs":{},"链":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"或":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}},"长":{"docs":{},"度":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}},"类":{"docs":{},"型":{"docs":{"数据结构/队列/循环队列/代码实现/代码实现.html":{"ref":"数据结构/队列/循环队列/代码实现/代码实现.html","tf":0.02702702702702703}}}}},"头":{"docs":{},"：":{"docs":{},"允":{"docs":{},"许":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}},"尾":{"docs":{},"：":{"docs":{},"允":{"docs":{},"许":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{"数据结构/队列/队列.html":{"ref":"数据结构/队列/队列.html","tf":0.027777777777777776}}}}}}}}}}}},"保":{"docs":{},"留":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"位":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}},"存":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}},"当":{"docs":{},"前":{"docs":{},"结":{"docs":{},"点":{"docs":{},"所":{"docs":{},"有":{"docs":{},"信":{"docs":{},"息":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}}}},"树":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}},"弧":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"头":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}},"尾":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}}}},"完":{"docs":{},"全":{"docs":{},"存":{"docs":{},"满":{"docs":{},"数":{"docs":{},"组":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"完":{"docs":{},"全":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"满":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"不":{"docs":{},"论":{"docs":{},"是":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"还":{"docs":{},"是":{"docs":{},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"满":{"docs":{},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"都":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"即":{"docs":{},"都":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{},"由":{"docs":{},"于":{"docs":{},"对":{"docs":{},"于":{"docs":{},"单":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"很":{"docs":{},"好":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"用":{"docs":{},"单":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"思":{"docs":{},"考":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{},"当":{"docs":{},"删":{"docs":{},"除":{"docs":{},"结":{"docs":{},"点":{"docs":{},"后":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"按":{"docs":{},"照":{"docs":{},"情":{"docs":{},"况":{"docs":{},"二":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"接":{"docs":{},"上":{"docs":{},"去":{"docs":{},"，":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"将":{"docs":{},"这":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"重":{"docs":{},"新":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"是":{"docs":{},"当":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"数":{"docs":{},"量":{"docs":{},"过":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"很":{"docs":{},"明":{"docs":{},"显":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"是":{"docs":{},"很":{"docs":{},"低":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"用":{"docs":{},"作":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"或":{"docs":{},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}},"二":{"docs":{},"种":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"将":{"docs":{},"队":{"docs":{},"列":{"docs":{},"空":{"docs":{},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{},"满":{"docs":{},"区":{"docs":{},"别":{"docs":{},"开":{"docs":{},"。":{"docs":{"数据结构/队列/循环队列/循环队列.html":{"ref":"数据结构/队列/循环队列/循环队列.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{},"为":{"docs":{},"了":{"docs":{},"不":{"docs":{},"大":{"docs":{},"幅":{"docs":{},"度":{"docs":{},"移":{"docs":{},"动":{"docs":{},"这":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"直":{"docs":{},"接":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"或":{"docs":{},"直":{"docs":{},"接":{"docs":{},"后":{"docs":{},"继":{"docs":{},"，":{"docs":{},"让":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"来":{"docs":{},"替":{"docs":{},"代":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"两":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"接":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"上":{"docs":{},"。":{"docs":{},"用":{"docs":{},"于":{"docs":{},"替":{"docs":{},"换":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"和":{"docs":{},"单":{"docs":{},"子":{"docs":{},"树":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"按":{"docs":{},"照":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"用":{"docs":{},"于":{"docs":{},"替":{"docs":{},"换":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"进":{"docs":{},"行":{"docs":{},"删":{"docs":{},"除":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"不":{"docs":{},"设":{"docs":{},"置":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"为":{"docs":{},"空":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"数据结构/队列/链队列/链队列.html":{"ref":"数据结构/队列/链队列/链队列.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"分":{"docs":{},"成":{"docs":{},"森":{"docs":{},"林":{"docs":{},"：":{"docs":{},"看":{"docs":{},"其":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"有":{"docs":{},"无":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"有":{"docs":{},"就":{"docs":{},"是":{"docs":{},"森":{"docs":{},"林":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"某":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"到":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"弧":{"docs":{},"，":{"docs":{},"则":{"docs":{},"按":{"docs":{},"照":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"查":{"docs":{},"找":{"docs":{},"值":{"docs":{},"，":{"docs":{},"若":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"则":{"docs":{},"有":{"docs":{},"弧":{"docs":{},"，":{"docs":{},"为":{"0":{"docs":{},"则":{"docs":{},"无":{"docs":{},"弧":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"线":{"docs":{},"：":{"docs":{},"若":{"docs":{},"某":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"…":{"docs":{},"…":{"docs":{},"，":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"这":{"docs":{},"些":{"docs":{},"结":{"docs":{},"点":{"docs":{},"与":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"连":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"建":{"docs":{},"立":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"包":{"docs":{},"含":{"docs":{},"任":{"docs":{},"意":{"docs":{},"项":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"是":{"docs":{},"一":{"docs":{},"串":{"docs":{},"数":{"docs":{},"字":{"docs":{},"编":{"docs":{},"号":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"去":{"docs":{},"线":{"docs":{},"：":{"docs":{},"删":{"docs":{},"除":{"docs":{},"原":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"与":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"连":{"docs":{},"线":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"/":{"docs":{},"终":{"docs":{},"端":{"docs":{},"结":{"docs":{},"点":{"docs":{},"：":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}},"docs":{}}}}}}}}}}},"子":{"docs":{},"只":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"最":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"最":{"docs":{},"下":{"docs":{},"两":{"docs":{},"层":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}},"堂":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"：":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"层":{"docs":{},"则":{"docs":{},"该":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"互":{"docs":{},"为":{"docs":{},"堂":{"docs":{},"兄":{"docs":{},"弟":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"着":{"docs":{},"查":{"docs":{},"看":{"docs":{},"分":{"docs":{},"离":{"docs":{},"后":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"其":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"断":{"docs":{},"开":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"来":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"如":{"docs":{},"何":{"docs":{},"找":{"docs":{},"到":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"有":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"指":{"docs":{},"针":{"docs":{},"那":{"docs":{},"么":{"docs":{},"查":{"docs":{},"找":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"就":{"docs":{},"得":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"再":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"长":{"docs":{},"子":{"docs":{},"（":{"docs":{},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"）":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"没":{"docs":{},"有":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"长":{"docs":{},"子":{"docs":{},"域":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}},"是":{"docs":{},"再":{"docs":{},"建":{"docs":{},"立":{"docs":{},"两":{"docs":{},"个":{"docs":{},"标":{"docs":{},"志":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"示":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"当":{"docs":{},"标":{"docs":{},"志":{"docs":{},"为":{"0":{"docs":{},"时":{"docs":{},"，":{"docs":{},"该":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"为":{"1":{"docs":{},"时":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"或":{"docs":{},"后":{"docs":{},"继":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"称":{"docs":{},"为":{"docs":{},"根":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"；":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"树":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"将":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"各":{"docs":{},"子":{"docs":{},"树":{"docs":{},"看":{"docs":{},"成":{"docs":{},"从":{"docs":{},"左":{"docs":{},"至":{"docs":{},"右":{"docs":{},"是":{"docs":{},"有":{"docs":{},"次":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"互":{"docs":{},"换":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"该":{"docs":{},"树":{"docs":{},"为":{"docs":{},"有":{"docs":{},"序":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/有序表查找/有序表查找.html":{"ref":"算法/查找/有序表查找/有序表查找.html","tf":10}},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"与":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"它":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"优":{"docs":{},"秀":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"如":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"插":{"docs":{},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{},"和":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"查":{"docs":{},"找":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/有序表查找.html":{"ref":"算法/查找/有序表查找/有序表查找.html","tf":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.020833333333333332}},"：":{"0":{"docs":{},"⩽":{"docs":{},"e":{"docs":{},"⩽":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"0":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{},"e":{"docs":{},"=":{"docs":{},"∑":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},")":{"docs":{},"=":{"docs":{},"∑":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},")":{"docs":{},"e":{"docs":{},"=":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"}":{"docs":{},"^":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},")":{"docs":{},"=":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"}":{"docs":{},"^":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},")":{"docs":{},"e":{"docs":{},"=":{"docs":{},"∑":{"docs":{},"​":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"=":{"docs":{},"∑":{"docs":{},"​":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}},"如":{"docs":{},"果":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"是":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"到":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"整":{"docs":{},"体":{"docs":{},"前":{"docs":{},"后":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"能":{"docs":{},"颠":{"docs":{},"倒":{"docs":{},"，":{"docs":{},"且":{"docs":{},"任":{"docs":{},"意":{"docs":{},"前":{"docs":{},"后":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"都":{"docs":{},"属":{"docs":{},"于":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"的":{"docs":{},"边":{"docs":{},"集":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"排":{"docs":{},"在":{"docs":{},"前":{"docs":{},"的":{"docs":{},"作":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"排":{"docs":{},"在":{"docs":{},"后":{"docs":{},"的":{"docs":{},"作":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"都":{"docs":{},"是":{"docs":{},"有":{"docs":{},"向":{"docs":{},"边":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"该":{"docs":{},"图":{"docs":{},"为":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"（":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"弧":{"docs":{},"\\":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"和":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"一":{"docs":{},"条":{"docs":{},"弧":{"docs":{},"\\":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"的":{"docs":{},"度":{"docs":{},"为":{"docs":{},"：":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"=":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"+":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"=":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"+":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"t":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"=":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"+":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"度":{"docs":{},"即":{"docs":{},"为":{"docs":{},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"列":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"之":{"docs":{},"和":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}},"出":{"docs":{},"度":{"docs":{},"即":{"docs":{},"为":{"docs":{},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"行":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"之":{"docs":{},"和":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"全":{"docs":{},"图":{"docs":{},"：":{"docs":{},"在":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"都":{"docs":{},"存":{"docs":{},"在":{"docs":{},"方":{"docs":{},"向":{"docs":{},"相":{"docs":{},"反":{"docs":{},"的":{"docs":{},"两":{"docs":{},"条":{"docs":{},"弧":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"该":{"docs":{},"图":{"docs":{},"为":{"docs":{},"有":{"docs":{},"向":{"docs":{},"完":{"docs":{},"全":{"docs":{},"图":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"树":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"恰":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"度":{"docs":{},"均":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"则":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"向":{"docs":{},"树":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"：":{"docs":{},"若":{"docs":{},"从":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"到":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"边":{"docs":{},"有":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"这":{"docs":{},"条":{"docs":{},"边":{"docs":{},"为":{"docs":{},"有":{"docs":{},"向":{"docs":{},"边":{"docs":{},"，":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"（":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"）":{"docs":{},"，":{"docs":{},"用":{"docs":{},"有":{"docs":{},"序":{"docs":{},"偶":{"docs":{},"\\":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},",":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"，":{"docs":{},"再":{"docs":{},"思":{"docs":{},"考":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"一":{"docs":{},"条":{"docs":{},"弧":{"docs":{},"对":{"docs":{},"于":{"docs":{},"其":{"docs":{},"所":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"对":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"出":{"docs":{},"边":{"docs":{},"，":{"docs":{},"对":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"来":{"docs":{},"说":{"docs":{},"则":{"docs":{},"是":{"docs":{},"入":{"docs":{},"边":{"docs":{},"，":{"docs":{},"刚":{"docs":{},"刚":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"，":{"docs":{},"其":{"docs":{},"后":{"docs":{},"续":{"docs":{},"跟":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"对":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"链":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"出":{"docs":{},"边":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{},"所":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"来":{"docs":{},"说":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"条":{"docs":{},"入":{"docs":{},"边":{"docs":{},"，":{"docs":{},"其":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"即":{"docs":{},"为":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":10}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}},"是":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"、":{"docs":{},"森":{"docs":{},"林":{"docs":{},"和":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"转":{"docs":{},"化":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}},"与":{"docs":{},"森":{"docs":{},"林":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}},"内":{"docs":{},"各":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}},"是":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"若":{"docs":{},"干":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"。":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"及":{"docs":{},"层":{"docs":{},"次":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"顶":{"docs":{},"端":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}},"的":{"docs":{},"度":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}},"深":{"docs":{},"度":{"docs":{},"/":{"docs":{},"高":{"docs":{},"度":{"docs":{},"：":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"层":{"docs":{},"次":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"及":{"docs":{},"若":{"docs":{},"干":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"。":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}},"总":{"docs":{},"结":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"未":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/堆/代码实现/代码实现.html":{"ref":"数据结构/树/堆/代码实现/代码实现.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}},"带":{"docs":{},"权":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"带":{"docs":{},"权":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"之":{"docs":{},"和":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"从":{"docs":{},"树":{"docs":{},"根":{"docs":{},"到":{"docs":{},"每":{"docs":{},"一":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"之":{"docs":{},"和":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}},"类":{"docs":{},"型":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}},"定":{"docs":{},"义":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}},"森":{"docs":{},"林":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}},"：":{"docs":{},"是":{"docs":{},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},"⩾":{"0":{"docs":{},")":{"docs":{},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},"\\":{"docs":{},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"数据结构/树/树.html":{"ref":"数据结构/树/树.html","tf":0.008620689655172414}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"主":{"docs":{},"要":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"树":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{"数据结构/树/普通树/普通树.html":{"ref":"数据结构/树/普通树/普通树.html","tf":0.25}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555},"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842},"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}},"孩":{"docs":{},"子":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}},"：":{"docs":{},"引":{"docs":{},"入":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"表":{"docs":{},"示":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"数据结构/树/普通树/普通树.html":{"ref":"数据结构/树/普通树/普通树.html","tf":0.25}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"法":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}},"：":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"用":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"如":{"docs":{},"何":{"docs":{},"实":{"docs":{},"现":{"docs":{},"树":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"数据结构/树/普通树/普通树.html":{"ref":"数据结构/树/普通树/普通树.html","tf":0.25}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}},"普":{"docs":{},"通":{"docs":{},"树":{"docs":{"数据结构/树/普通树/普通树.html":{"ref":"数据结构/树/普通树/普通树.html","tf":10}}}},"里":{"docs":{},"姆":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},")":{"docs":{},"算":{"docs":{},"法":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":10}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"从":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"逐":{"docs":{},"渐":{"docs":{},"完":{"docs":{},"善":{"docs":{},"这":{"docs":{},"个":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"，":{"docs":{},"而":{"docs":{},"克":{"docs":{},"鲁":{"docs":{},"斯":{"docs":{},"卡":{"docs":{},"尔":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"先":{"docs":{},"选":{"docs":{},"出":{"docs":{},"权":{"docs":{},"值":{"docs":{},"最":{"docs":{},"低":{"docs":{},"的":{"docs":{},"边":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"找":{"docs":{},"出":{"docs":{},"第":{"docs":{},"二":{"docs":{},"小":{"docs":{},"的":{"docs":{},"边":{"docs":{},"，":{"docs":{},"并":{"docs":{},"判":{"docs":{},"断":{"docs":{},"可":{"docs":{},"选":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"选":{"docs":{},"。":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.02142857142857143}},"o":{"docs":{},"x":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.012711864406779662}},";":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}},"o":{"docs":{},"l":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","tf":0.045454545454545456},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","tf":0.02631578947368421},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.013192612137203167}},"e":{"docs":{},";":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}},"h":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}},"e":{"docs":{},";":{"docs":{"数据结构/树/线索二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/线索二叉树/代码实现/代码实现.html","tf":0.013513513513513514}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.09090909090909091},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.09523809523809523}},"e":{"docs":{},",":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}}}}}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903}}}}}}}}}}}}}},"i":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.1}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.1}}}}}}},"f":{"docs":{},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}}}}}},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.036939313984168866},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}}}},"树":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":10}},"(":{"docs":{},"b":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}},"也":{"docs":{},"有":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"b":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"往":{"docs":{},"返":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"多":{"docs":{},"次":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"必":{"docs":{},"须":{"docs":{},"得":{"docs":{},"在":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"的":{"docs":{},"页":{"docs":{},"面":{"docs":{},"之":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"多":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{},"如":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"去":{"docs":{},"第":{"docs":{},"一":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"回":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"到":{"docs":{},"第":{"docs":{},"二":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"第":{"docs":{},"二":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"回":{"docs":{},"到":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"又":{"docs":{},"重":{"docs":{},"新":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"树":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":10}},"是":{"docs":{},"应":{"docs":{},"文":{"docs":{},"件":{"docs":{},"系":{"docs":{},"统":{"docs":{},"所":{"docs":{},"需":{"docs":{},"而":{"docs":{},"出":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"b":{"docs":{},"树":{"docs":{},"的":{"docs":{},"变":{"docs":{},"形":{"docs":{},"树":{"docs":{},"。":{"docs":{},"在":{"docs":{},"b":{"docs":{},"+":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"分":{"docs":{},"支":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"会":{"docs":{},"被":{"docs":{},"当":{"docs":{},"做":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"该":{"docs":{},"分":{"docs":{},"支":{"docs":{},"节":{"docs":{},"点":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"后":{"docs":{},"继":{"docs":{},"者":{"docs":{},"（":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"中":{"docs":{},"再":{"docs":{},"次":{"docs":{},"列":{"docs":{},"出":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"会":{"docs":{},"保":{"docs":{},"存":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"后":{"docs":{},"一":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B+树/B+树.html":{"ref":"算法/查找/多路查找树/B+树/B+树.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"0":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","tf":0.029411764705882353}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","tf":0.018867924528301886}}}}}}}}}},"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"排":{"docs":{},"列":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"以":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"作":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"n":{"docs":{},"个":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"，":{"docs":{},"采":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"放":{"docs":{},"进":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"包":{"docs":{},"括":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"和":{"docs":{},"多":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"用":{"docs":{},"于":{"docs":{},"指":{"docs":{},"向":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"如":{"docs":{},"何":{"docs":{},"确":{"docs":{},"定":{"docs":{},"？":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"一":{"docs":{},"是":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"树":{"docs":{},"的":{"docs":{},"度":{"docs":{},"，":{"docs":{},"即":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"树":{"docs":{},"中":{"docs":{},"各":{"docs":{},"结":{"docs":{},"点":{"docs":{},"度":{"docs":{},"相":{"docs":{},"差":{"docs":{},"不":{"docs":{},"大":{"docs":{},"时":{"docs":{},"很":{"docs":{},"好":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"各":{"docs":{},"结":{"docs":{},"点":{"docs":{},"度":{"docs":{},"相":{"docs":{},"差":{"docs":{},"很":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"明":{"docs":{},"显":{"docs":{},"地":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"空":{"docs":{},"间":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"度":{"docs":{},"域":{"docs":{},"，":{"docs":{},"用":{"docs":{},"以":{"docs":{},"保":{"docs":{},"存":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"子":{"docs":{},"域":{"docs":{},"个":{"docs":{},"数":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"度":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"减":{"docs":{},"少":{"docs":{},"空":{"docs":{},"间":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"还":{"docs":{},"要":{"docs":{},"维":{"docs":{},"护":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"运":{"docs":{},"算":{"docs":{},"上":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"时":{"docs":{},"间":{"docs":{},"上":{"docs":{},"的":{"docs":{},"损":{"docs":{},"耗":{"docs":{},"。":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"进":{"docs":{},"入":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}},"的":{"docs":{},"外":{"docs":{},"存":{"docs":{},"（":{"docs":{},"如":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"）":{"docs":{},"，":{"docs":{},"是":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"相":{"docs":{},"等":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"页":{"docs":{},"面":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"读":{"docs":{},"写":{"docs":{},"的":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"页":{"docs":{},"面":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"一":{"docs":{},"页":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"2":{"1":{"docs":{},"~":{"2":{"1":{"4":{"docs":{},"b":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"从":{"docs":{},"v":{"0":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}},"docs":{}}}}}},"是":{"docs":{},"由":{"1":{"docs":{},"和":{"2":{"docs":{},"可":{"docs":{},"以":{"docs":{},"求":{"docs":{},"得":{"3":{"docs":{},"和":{"4":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"根":{"docs":{},"据":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"是":{"docs":{},"否":{"docs":{},"与":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"相":{"docs":{},"等":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"a":{"docs":{},"k":{"docs":{},"a":{"docs":{},"_":{"docs":{},"k":{"docs":{},"a":{"docs":{},"​":{"docs":{},"k":{"docs":{},"​":{"docs":{},"​":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"关":{"docs":{},"键":{"docs":{},"活":{"docs":{},"动":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}}}},"那":{"docs":{},"么":{"docs":{},"如":{"docs":{},"何":{"docs":{},"找":{"docs":{},"到":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"，":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"指":{"docs":{},"针":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"数据结构/树/普通树/代码实现/代码实现.html":{"ref":"数据结构/树/普通树/代码实现/代码实现.html","tf":0.00423728813559322}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"传":{"docs":{},"输":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"为":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"建":{"docs":{},"立":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"包":{"docs":{},"括":{"docs":{},"与":{"docs":{},"该":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"以":{"docs":{},"及":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"用":{"docs":{},"于":{"docs":{},"指":{"docs":{},"向":{"docs":{},"与":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"都":{"docs":{},"能":{"docs":{},"构":{"docs":{},"造":{"docs":{},"得":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"一":{"docs":{},"点":{"docs":{},"吗":{"docs":{},"？":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{},"表":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"兼":{"docs":{},"顾":{"docs":{},"查":{"docs":{},"找":{"docs":{},"、":{"docs":{},"插":{"docs":{},"入":{"docs":{},"、":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"答":{"docs":{},"案":{"docs":{},"是":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"0":{"0":{"0":{"1":{"1":{"0":{"1":{"0":{"1":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"]":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"1":{"1":{"0":{"1":{"0":{"1":{"1":{"0":{"1":{"1":{"0":{"1":{"0":{"docs":{},"]":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},",":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}},"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"不":{"docs":{},"大":{"docs":{},"于":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"整":{"docs":{},"数":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"6":{"9":{"docs":{},"∞":{"3":{"docs":{},"∞":{"docs":{},"∞":{"2":{"docs":{},"∞":{"docs":{},"∞":{"5":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"1":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"∞":{"docs":{},"]":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"2":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}},"docs":{}}}}}},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"，":{"docs":{},"若":{"docs":{},"有":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"都":{"docs":{},"在":{"docs":{},"右":{"docs":{},"部":{"docs":{},"连":{"docs":{},"续":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"索":{"docs":{},"引":{"docs":{"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":10}},"与":{"docs":{},"其":{"docs":{},"他":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"是":{"docs":{},"：":{"docs":{},"其":{"docs":{},"他":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"还":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"来":{"docs":{},"查":{"docs":{},"找":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"而":{"docs":{},"倒":{"docs":{},"排":{"docs":{},"索":{"docs":{},"引":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"来":{"docs":{},"查":{"docs":{},"找":{"docs":{},"所":{"docs":{},"有":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"属":{"docs":{},"性":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"结":{"docs":{},"构":{"docs":{},"是":{"docs":{},"：":{"docs":{"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111}}}}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"2":{"docs":{},"n":{"docs":{},"]":{"docs":{},"+":{"1":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"2":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"体":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"开":{"docs":{},"始":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"值":{"docs":{},"与":{"docs":{},"查":{"docs":{},"找":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"，":{"docs":{},"一":{"docs":{},"是":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"途":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"下":{"docs":{},"标":{"docs":{},"；":{"docs":{},"二":{"docs":{},"是":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"提":{"docs":{},"前":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"了":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"下":{"docs":{},"标":{"0":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html","tf":0.2}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"有":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"次":{"docs":{},"序":{"docs":{},"不":{"docs":{},"能":{"docs":{},"任":{"docs":{},"意":{"docs":{},"颠":{"docs":{},"倒":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}},"孩":{"docs":{},"子":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},"：":{"docs":{},"即":{"docs":{},"实":{"docs":{},"际":{"docs":{},"树":{"docs":{},"的":{"docs":{},"长":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"时":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"一":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"，":{"docs":{},"其":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"为":{"docs":{},"结":{"docs":{},"点":{"2":{"docs":{},"i":{"2":{"docs":{},"i":{"2":{"docs":{},"i":{"docs":{},"。":{"docs":{},"当":{"2":{"docs":{},"i":{"docs":{},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},">":{"docs":{},"n":{"docs":{},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"无":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"平":{"docs":{},"衡":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"处":{"docs":{},"理":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}},"旋":{"docs":{},"操":{"docs":{},"作":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}},"斜":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}},"最":{"docs":{},"下":{"docs":{},"层":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"一":{"docs":{},"定":{"docs":{},"集":{"docs":{},"中":{"docs":{},"在":{"docs":{},"左":{"docs":{},"部":{"docs":{},"连":{"docs":{},"续":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}},"大":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}},"关":{"docs":{},"键":{"docs":{},"码":{"docs":{},"：":{"docs":{},"它":{"docs":{},"存":{"docs":{},"储":{"docs":{},"每":{"docs":{},"一":{"docs":{},"块":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"就":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"得":{"docs":{},"在":{"docs":{},"它":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"块":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"也":{"docs":{},"能":{"docs":{},"比":{"docs":{},"这":{"docs":{},"一":{"docs":{},"块":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"要":{"docs":{},"大":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}},"好":{"docs":{},"情":{"docs":{},"况":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}},"简":{"docs":{},"排":{"docs":{},"序":{"docs":{},"法":{"docs":{"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":10}}}}}},"后":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"顶":{"docs":{},"向":{"docs":{},"下":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"即":{"docs":{},"：":{"docs":{},"a":{"docs":{},"、":{"docs":{},"b":{"docs":{},"、":{"docs":{},"f":{"docs":{},"、":{"docs":{},"c":{"docs":{},"、":{"docs":{},"i":{"docs":{},"、":{"docs":{},"g":{"docs":{},"、":{"docs":{},"e":{"docs":{},"、":{"docs":{},"d":{"docs":{},"、":{"docs":{},"h":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"v":{"6":{"docs":{},"处":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"去":{"docs":{},"第":{"docs":{},"五":{"docs":{},"层":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"即":{"docs":{},"v":{"6":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}},"小":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":10}}}}}},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":10}}}}}},"深":{"docs":{},"度":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},"为":{"docs":{},"k":{"docs":{},"k":{"docs":{},"k":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"至":{"docs":{},"多":{"docs":{},"有":{"2":{"docs":{},"k":{"docs":{},"−":{"1":{"2":{"docs":{},"^":{"docs":{},"k":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"更":{"docs":{},"适":{"docs":{},"合":{"docs":{},"目":{"docs":{},"标":{"docs":{},"比":{"docs":{},"较":{"docs":{},"明":{"docs":{},"确":{"docs":{},"，":{"docs":{},"以":{"docs":{},"找":{"docs":{},"到":{"docs":{},"目":{"docs":{},"标":{"docs":{},"为":{"docs":{},"主":{"docs":{},"要":{"docs":{},"目":{"docs":{},"的":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":10}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"它":{"docs":{},"从":{"docs":{},"图":{"docs":{},"中":{"docs":{},"某":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"此":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"v":{"docs":{},"的":{"docs":{},"未":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"出":{"docs":{},"发":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"图":{"docs":{},"，":{"docs":{},"直":{"docs":{},"至":{"docs":{},"图":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{},"v":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"。":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"满":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}}}}},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"2":{"docs":{"数据结构/树/二叉树/二叉树.html":{"ref":"数据结构/树/二叉树/二叉树.html","tf":0.01639344262295082}}},"docs":{}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/归并排序/非递归归并排序/非递归归并排序.html":{"ref":"算法/排序/归并排序/非递归归并排序/非递归归并排序.html","tf":10}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}}}},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},"：":{"docs":{},"若":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"，":{"docs":{},"且":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"结":{"docs":{},"点":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"结":{"docs":{},"点":{"docs":{},"即":{"docs":{},"为":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"结":{"docs":{},"点":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}},"孩":{"docs":{},"子":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}},"：":{"docs":{},"即":{"docs":{},"实":{"docs":{},"际":{"docs":{},"树":{"docs":{},"的":{"docs":{},"右":{"docs":{},"兄":{"docs":{},"弟":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"时":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"一":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"，":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"为":{"docs":{},"结":{"docs":{},"点":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"。":{"docs":{},"当":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},">":{"docs":{},"n":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},">":{"docs":{},"n":{"docs":{},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"结":{"docs":{},"点":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"无":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"平":{"docs":{},"衡":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"处":{"docs":{},"理":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}}}},"旋":{"docs":{},"操":{"docs":{},"作":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}}}},"状":{"docs":{},"态":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/树/二叉树/代码实现/代码实现.html":{"ref":"数据结构/树/二叉树/代码实现/代码实现.html","tf":0.00909090909090909}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}},"已":{"docs":{},"知":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"续":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"1":{"docs":{},"：":{"docs":{},"要":{"docs":{},"是":{"docs":{},"子":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},"2":{"docs":{},"：":{"docs":{},"子":{"docs":{},"图":{"docs":{},"要":{"docs":{},"是":{"docs":{},"连":{"docs":{},"通":{"docs":{},"的":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}},"3":{"docs":{},"：":{"docs":{},"连":{"docs":{},"通":{"docs":{},"子":{"docs":{},"图":{"docs":{},"含":{"docs":{},"有":{"docs":{},"极":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}},"4":{"docs":{},"：":{"docs":{},"具":{"docs":{},"有":{"docs":{},"极":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"子":{"docs":{},"图":{"docs":{},"包":{"docs":{},"含":{"docs":{},"依":{"docs":{},"附":{"docs":{},"于":{"docs":{},"这":{"docs":{},"些":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"边":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143},"算法/查找/有序表查找/二分查找/二分查找.html":{"ref":"算法/查找/有序表查找/二分查找/二分查找.html","tf":0.14285714285714285},"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}},"：":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}},"已":{"docs":{},"知":{"docs":{},"前":{"docs":{},"序":{"docs":{},"和":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/树/二叉树/难点操作/难点操作.html":{"ref":"数据结构/树/二叉树/难点操作/难点操作.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}},"强":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"每":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"都":{"docs":{},"有":{"docs":{},"两":{"docs":{},"条":{"docs":{},"方":{"docs":{},"向":{"docs":{},"相":{"docs":{},"反":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"强":{"docs":{},"调":{"docs":{},"是":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"图":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"构":{"docs":{},"成":{"docs":{},"单":{"docs":{},"向":{"docs":{},"闭":{"docs":{},"环":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"此":{"docs":{},"时":{"docs":{},"也":{"docs":{},"是":{"docs":{},"强":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"没":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"没":{"docs":{},"有":{"docs":{},"先":{"docs":{},"后":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"要":{"docs":{},"求":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":10}},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":10},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}},"对":{"docs":{},"原":{"docs":{},"始":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"状":{"docs":{},"态":{"docs":{},"并":{"docs":{},"不":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"最":{"docs":{},"好":{"docs":{},"、":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"和":{"docs":{},"平":{"docs":{},"均":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"均":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":0.14285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":0.14285714285714285}}}}}}}}}}}}}}},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"（":{"docs":{},"以":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"为":{"docs":{},"例":{"docs":{},"）":{"docs":{},"：":{"docs":{},"将":{"docs":{},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"构":{"docs":{},"造":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"整":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"就":{"docs":{},"是":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"将":{"docs":{},"它":{"docs":{},"移":{"docs":{},"走":{"docs":{},"（":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{},"其":{"docs":{},"与":{"docs":{},"堆":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},"n":{"docs":{"算法/排序/堆排序/堆排序算法/堆排序算法.html":{"ref":"算法/排序/堆排序/堆排序算法/堆排序算法.html","tf":0.2}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/排序/堆排序/堆排序算法/堆排序算法.html":{"ref":"算法/排序/堆排序/堆排序算法/堆排序算法.html","tf":10}}}}}},"建":{"docs":{},"立":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}},"调":{"docs":{},"整":{"docs":{"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"ref":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","tf":0.009900990099009901}}}}},"序":{"docs":{},"号":{"docs":{},"：":{"docs":{},"即":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"中":{"docs":{},"间":{"docs":{},"某":{"docs":{},"个":{"docs":{},"序":{"docs":{},"号":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"下":{"docs":{},"标":{"docs":{},"不":{"docs":{},"保":{"docs":{},"存":{"docs":{},"值":{"docs":{},"。":{"docs":{"数据结构/树/堆/堆.html":{"ref":"数据结构/树/堆/堆.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"展":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}},"按":{"docs":{},"照":{"docs":{},"上":{"docs":{},"述":{"docs":{},"规":{"docs":{},"则":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"链":{"docs":{},"表":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"索":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"程":{"docs":{},"一":{"docs":{},"直":{"docs":{},"回":{"docs":{},"退":{"docs":{},"到":{"docs":{},"d":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"标":{"docs":{},"记":{"docs":{},"完":{"docs":{},"i":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"再":{"docs":{},"继":{"docs":{},"续":{"docs":{},"回":{"docs":{},"退":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"原":{"docs":{},"则":{"docs":{},"一":{"docs":{},"直":{"docs":{},"往":{"docs":{},"前":{"docs":{},"走":{"docs":{},"：":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"始":{"docs":{},"终":{"docs":{},"向":{"docs":{},"右":{"docs":{},"手":{"docs":{},"边":{"docs":{},"走":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"序":{"docs":{},"排":{"docs":{},"好":{"docs":{},"的":{"docs":{},"图":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{"数据结构/树/线索二叉树/线索二叉树.html":{"ref":"数据结构/树/线索二叉树/线索二叉树.html","tf":0.045454545454545456}}}},"w":{"1":{"docs":{},"w":{"docs":{},"_":{"1":{"docs":{},"w":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}}}}}},"docs":{}}}},"docs":{}}}},"2":{"docs":{},"w":{"docs":{},"_":{"2":{"docs":{},"w":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"，":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}}}}}},"docs":{}}}},"docs":{}}}},"docs":{},"n":{"docs":{},"w":{"docs":{},"_":{"docs":{},"n":{"docs":{},"w":{"docs":{},"​":{"docs":{},"n":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.014285714285714285}}}}}}}}}}},")":{"docs":{},"：":{"docs":{},"在":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"弧":{"docs":{},"\\":{"docs":{},"，":{"docs":{},"若":{"docs":{},"g":{"docs":{},"是":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"对":{"docs":{},"称":{"docs":{},"弧":{"docs":{},"\\":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}},"增":{"docs":{},"添":{"docs":{},"弧":{"docs":{},"\\":{"docs":{},"，":{"docs":{},"若":{"docs":{},"g":{"docs":{},"是":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"增":{"docs":{},"添":{"docs":{},"对":{"docs":{},"称":{"docs":{},"弧":{"docs":{},"\\":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}},";":{"docs":{"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"ref":"数据结构/图/邻接矩阵/难点操作/难点操作.html","tf":0.02531645569620253}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505}},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","tf":0.03225806451612903},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","tf":0.03225806451612903}}}}},"n":{"docs":{"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"ref":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","tf":0.021739130434782608}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"ref":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","tf":0.013333333333333334}}}}}},"p":{"docs":{},")":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}},"!":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"q":{"docs":{},")":{"docs":{},")":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"2":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}},"docs":{"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}}}}},"a":{"docs":{},"y":{"docs":{"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1}}}},",":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","tf":0.0196078431372549},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}},"占":{"docs":{},"比":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}},"哈":{"docs":{},"夫":{"docs":{},"曼":{"docs":{},"树":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":10}}},"编":{"docs":{},"码":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}},"即":{"docs":{},"将":{"docs":{},"原":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"按":{"docs":{},"照":{"docs":{},"出":{"docs":{},"现":{"docs":{},"频":{"docs":{},"率":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"排":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"出":{"docs":{},"现":{"docs":{},"越":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"其":{"docs":{},"编":{"docs":{},"码":{"docs":{},"就":{"docs":{},"越":{"docs":{},"短":{"docs":{},"，":{"docs":{},"成":{"docs":{},"功":{"docs":{},"达":{"docs":{},"到":{"docs":{},"了":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"带":{"docs":{},"权":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"从":{"docs":{},"该":{"docs":{},"结":{"docs":{},"点":{"docs":{},"到":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"与":{"docs":{},"结":{"docs":{},"点":{"docs":{},"上":{"docs":{},"权":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"：":{"docs":{},"哈":{"docs":{},"夫":{"docs":{},"曼":{"docs":{},"编":{"docs":{},"码":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}},"想":{"docs":{},"象":{"docs":{},"一":{"docs":{},"个":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"把":{"docs":{},"学":{"docs":{},"生":{"docs":{},"考":{"docs":{},"试":{"docs":{},"的":{"docs":{},"分":{"docs":{},"数":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"等":{"docs":{},"级":{"docs":{},"，":{"docs":{},"加":{"docs":{},"入":{"docs":{},"满":{"docs":{},"分":{"docs":{},"为":{"1":{"0":{"0":{"docs":{},"分":{"docs":{},"，":{"docs":{},"等":{"docs":{},"级":{"docs":{},"按":{"docs":{},"照":{"docs":{},"十":{"docs":{},"分":{"docs":{},"一":{"docs":{},"个":{"docs":{},"档":{"docs":{},"次":{"docs":{},"，":{"9":{"0":{"docs":{},"分":{"docs":{},"以":{"docs":{},"上":{"docs":{},"为":{"docs":{},"a":{"docs":{},"，":{"8":{"0":{"docs":{},"分":{"docs":{},"以":{"docs":{},"上":{"docs":{},"为":{"docs":{},"b":{"docs":{},"，":{"7":{"0":{"docs":{},"分":{"docs":{},"以":{"docs":{},"上":{"docs":{},"为":{"docs":{},"c":{"docs":{},"，":{"6":{"0":{"docs":{},"分":{"docs":{},"以":{"docs":{},"上":{"docs":{},"为":{"docs":{},"d":{"docs":{},"，":{"6":{"0":{"docs":{},"分":{"docs":{},"以":{"docs":{},"下":{"docs":{},"为":{"docs":{},"e":{"docs":{},"。":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"法":{"docs":{},"是":{"docs":{},"：":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"说":{"docs":{},"明":{"docs":{},"数":{"docs":{},"组":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"序":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"了":{"docs":{"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"路":{"docs":{},"径":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"路":{"docs":{},"径":{"docs":{},"上":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"数":{"docs":{},"目":{"docs":{},"即":{"docs":{},"为":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"从":{"docs":{},"树":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"构":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"：":{"docs":{},"即":{"docs":{},"路":{"docs":{},"径":{"docs":{},"上":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}},"上":{"docs":{},"各":{"docs":{},"个":{"docs":{},"活":{"docs":{},"动":{"docs":{},"所":{"docs":{},"持":{"docs":{},"续":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"之":{"docs":{},"和":{"docs":{},"称":{"docs":{},"为":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"从":{"docs":{},"源":{"docs":{},"点":{"docs":{},"到":{"docs":{},"汇":{"docs":{},"点":{"docs":{},"具":{"docs":{},"有":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"在":{"docs":{},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{},"上":{"docs":{},"的":{"docs":{},"活":{"docs":{},"动":{"docs":{},"叫":{"docs":{},"关":{"docs":{},"键":{"docs":{},"活":{"docs":{},"动":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"：":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}},"步":{"docs":{},"骤":{"2":{"docs":{},"和":{"3":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"只":{"docs":{},"含":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"哈":{"docs":{},"夫":{"docs":{},"曼":{"docs":{},"树":{"docs":{"数据结构/树/哈夫曼树/哈夫曼树.html":{"ref":"数据结构/树/哈夫曼树/哈夫曼树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"上":{"docs":{},"述":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"以":{"docs":{},"v":{"8":{"docs":{},"为":{"docs":{},"中":{"docs":{},"转":{"docs":{},"点":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"新":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"u":{"docs":{},")":{"docs":{},"：":{"docs":{},"若":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"u":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}},";":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}}}}}}}},"回":{"docs":{},"路":{"docs":{},"（":{"docs":{},"环":{"docs":{},"）":{"docs":{},"：":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"称":{"docs":{},"为":{"docs":{},"回":{"docs":{},"路":{"docs":{},"或":{"docs":{},"环":{"docs":{},"（":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":10},"算法/图/图.html":{"ref":"算法/图/图.html","tf":10}},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},")":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}},"是":{"docs":{},"由":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"有":{"docs":{},"穷":{"docs":{},"非":{"docs":{},"空":{"docs":{},"集":{"docs":{},"合":{"docs":{},"和":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"边":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{},"g":{"docs":{},"（":{"docs":{},"v":{"docs":{},"，":{"docs":{},"e":{"docs":{},"）":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"，":{"docs":{},"g":{"docs":{},"表":{"docs":{},"示":{"docs":{},"一":{"docs":{},"个":{"docs":{},"图":{"docs":{},"，":{"docs":{},"v":{"docs":{},"是":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"e":{"docs":{},"是":{"docs":{},"图":{"docs":{},"g":{"docs":{},"中":{"docs":{},"边":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"（":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}},"特":{"docs":{},"点":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"多":{"docs":{},"条":{"docs":{},"边":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"沿":{"docs":{},"着":{"docs":{},"某":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"后":{"docs":{},"，":{"docs":{},"有":{"docs":{},"回":{"docs":{},"到":{"docs":{},"原":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"而":{"docs":{},"有":{"docs":{},"些":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"。":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"不":{"docs":{},"定":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"用":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"称":{"docs":{},"为":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"边":{"docs":{},"表":{"docs":{},"，":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"则":{"docs":{},"称":{"docs":{},"为":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"作":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"点":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"，":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{},"可":{"docs":{},"以":{"docs":{},"较":{"docs":{},"容":{"docs":{},"易":{"docs":{},"地":{"docs":{},"读":{"docs":{},"取":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"更":{"docs":{},"加":{"docs":{},"方":{"docs":{},"便":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"存":{"docs":{},"储":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"于":{"docs":{},"查":{"docs":{},"找":{"docs":{},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"边":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"础":{"docs":{},"概":{"docs":{},"念":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}},"本":{"docs":{},"方":{"docs":{},"法":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}},"概":{"docs":{},"念":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}},"思":{"docs":{},"想":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}},"路":{"docs":{"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html","tf":0.25}}}}}},"弧":{"docs":{},"头":{"docs":{},"：":{"docs":{},"在":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"，":{"docs":{},"v":{"docs":{},"j":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"v":{"docs":{},"​":{"docs":{},"j":{"docs":{},"​":{"docs":{},"​":{"docs":{},"称":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"（":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"）":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尾":{"docs":{},"：":{"docs":{},"在":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"，":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"称":{"docs":{},"为":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"（":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"）":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}},"结":{"docs":{},"点":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}},"或":{"docs":{},"边":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}},"类":{"docs":{},"型":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}}},"边":{"docs":{},"数":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}}},"强":{"docs":{},"连":{"docs":{},"通":{"docs":{},"分":{"docs":{},"量":{"docs":{},"：":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{},"极":{"docs":{},"大":{"docs":{},"强":{"docs":{},"连":{"docs":{},"通":{"docs":{},"子":{"docs":{},"图":{"docs":{},"称":{"docs":{},"做":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"强":{"docs":{},"连":{"docs":{},"通":{"docs":{},"分":{"docs":{},"量":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"：":{"docs":{},"在":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"对":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"、":{"docs":{},"v":{"docs":{},"j":{"docs":{},"∈":{"docs":{},"v":{"docs":{},"v":{"docs":{},"_":{"docs":{},"j":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"质":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}},"：":{"docs":{},"含":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"无":{"docs":{},"向":{"docs":{},"完":{"docs":{},"全":{"docs":{},"图":{"docs":{},"有":{"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"2":{"docs":{},"{":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}},"有":{"docs":{},"向":{"docs":{},"完":{"docs":{},"全":{"docs":{},"图":{"docs":{},"有":{"docs":{},"n":{"docs":{},"×":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"分":{"docs":{},"析":{"docs":{"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"ref":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","tf":0.06666666666666667}}}}}},"权":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}},"：":{"docs":{},"有":{"docs":{},"些":{"docs":{},"图":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"具":{"docs":{},"有":{"docs":{},"与":{"docs":{},"它":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"与":{"docs":{},"图":{"docs":{},"的":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"数":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"权":{"docs":{},"（":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"）":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"稀":{"docs":{},"疏":{"docs":{},"图":{"docs":{},"：":{"docs":{},"有":{"docs":{},"很":{"docs":{},"少":{"docs":{},"条":{"docs":{},"边":{"docs":{},"或":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"图":{"docs":{},"称":{"docs":{},"为":{"docs":{},"稀":{"docs":{},"疏":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}},"稠":{"docs":{},"密":{"docs":{},"图":{"docs":{},"：":{"docs":{},"与":{"docs":{},"稀":{"docs":{},"疏":{"docs":{},"图":{"docs":{},"相":{"docs":{},"反":{"docs":{},"的":{"docs":{},"称":{"docs":{},"为":{"docs":{},"稠":{"docs":{},"密":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":10}},"是":{"docs":{},"指":{"docs":{},"在":{"docs":{},"线":{"docs":{},"性":{"docs":{},"索":{"docs":{},"引":{"docs":{},"中":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"对":{"docs":{},"应":{"docs":{},"一":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{},"项":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"索":{"docs":{},"引":{"docs":{},"项":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"关":{"docs":{},"键":{"docs":{},"码":{"docs":{},"有":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761},"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}},"：":{"docs":{},"带":{"docs":{},"权":{"docs":{},"的":{"docs":{},"图":{"docs":{},"通":{"docs":{},"常":{"docs":{},"称":{"docs":{},"为":{"docs":{},"网":{"docs":{},"（":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"）":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}},"数":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"具":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"和":{"docs":{},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{},"条":{"docs":{},"边":{"docs":{},"的":{"docs":{},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"在":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"用":{"docs":{},"边":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"边":{"docs":{},"集":{"docs":{},"可":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{},"在":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"具":{"docs":{},"有":{"docs":{},"线":{"docs":{},"性":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"在":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"，":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"两":{"docs":{},"层":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"具":{"docs":{},"有":{"docs":{},"层":{"docs":{},"次":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}},"数":{"docs":{},"组":{"docs":{"数据结构/图/边集数组/边集数组.html":{"ref":"数据结构/图/边集数组/边集数组.html","tf":10}},"关":{"docs":{},"注":{"docs":{},"的":{"docs":{},"是":{"docs":{},"边":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"在":{"docs":{},"边":{"docs":{},"集":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"度":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"整":{"docs":{},"个":{"docs":{},"边":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"并":{"docs":{},"不":{"docs":{},"高":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"更":{"docs":{},"适":{"docs":{},"合":{"docs":{},"对":{"docs":{},"边":{"docs":{},"依":{"docs":{},"次":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"适":{"docs":{},"合":{"docs":{},"对":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"数据结构/图/边集数组/边集数组.html":{"ref":"数据结构/图/边集数组/边集数组.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"由":{"docs":{},"两":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"；":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"边":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"边":{"docs":{},"数":{"docs":{},"组":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"由":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{},"的":{"docs":{},"起":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{},"、":{"docs":{},"终":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{},"和":{"docs":{},"权":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{"数据结构/图/边集数组/边集数组.html":{"ref":"数据结构/图/边集数组/边集数组.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}},"结":{"docs":{},"点":{"docs":{},"类":{"docs":{},"型":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}},"表":{"docs":{},"指":{"docs":{},"针":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}},"类":{"docs":{},"型":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}},"连":{"docs":{},"通":{"docs":{},"分":{"docs":{},"量":{"docs":{},"：":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{},"极":{"docs":{},"大":{"docs":{},"连":{"docs":{},"通":{"docs":{},"子":{"docs":{},"图":{"docs":{},"称":{"docs":{},"为":{"docs":{},"连":{"docs":{},"通":{"docs":{},"分":{"docs":{},"量":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"图":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"集":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"是":{"docs":{},"连":{"docs":{},"通":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"是":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"在":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"从":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"到":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{},"和":{"docs":{},"v":{"docs":{},"′":{"docs":{},"v":{"docs":{},"'":{"docs":{},"v":{"docs":{},"​":{"docs":{},"′":{"docs":{},"​":{"docs":{},"​":{"docs":{},"是":{"docs":{},"连":{"docs":{},"通":{"docs":{},"的":{"docs":{},"。":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},"矩":{"docs":{},"阵":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":10},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}},"的":{"docs":{},"d":{"docs":{},"f":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}},"b":{"docs":{},"f":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}}},"表":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":10}},"指":{"docs":{},"针":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}},"类":{"docs":{},"型":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.020833333333333332}}}},"的":{"docs":{},"创":{"docs":{},"建":{"docs":{"数据结构/图/邻接表/难点操作/难点操作.html":{"ref":"数据结构/图/邻接表/难点操作/难点操作.html","tf":0.5}}}},"d":{"docs":{},"f":{"docs":{"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","tf":0.012195121951219513}}}},"b":{"docs":{},"f":{"docs":{"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"ref":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","tf":0.011494252873563218}}}}}},"多":{"docs":{},"重":{"docs":{},"表":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":10}},"指":{"docs":{},"针":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}},"类":{"docs":{},"型":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}},"顶":{"docs":{},"点":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}},"与":{"docs":{},"边":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}},"的":{"docs":{},"度":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}},"有":{"docs":{},"穷":{"docs":{},"非":{"docs":{},"空":{"docs":{},"集":{"docs":{},"合":{"docs":{},"和":{"docs":{},"边":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}},"：":{"docs":{},"即":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"叫":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"树":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"叫":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"图":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"称":{"docs":{},"为":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"（":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"）":{"docs":{"数据结构/图/图.html":{"ref":"数据结构/图/图.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"分":{"docs":{},"大":{"docs":{},"小":{"docs":{},"、":{"docs":{},"主":{"docs":{},"次":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"是":{"docs":{},"很":{"docs":{},"不":{"docs":{},"错":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549},"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}},"数":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}},"组":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}},"结":{"docs":{},"点":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}},"类":{"docs":{},"型":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}},"​":{"docs":{},"⎣":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎡":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⎦":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎤":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"1":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⎦":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎤":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"⎢":{"docs":{},"​":{"docs":{},"⎢":{"docs":{},"​":{"docs":{},"⎡":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"9":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"3":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"5":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"6":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"∞":{"docs":{},"​":{"docs":{},"​":{"docs":{},"​":{"docs":{},"⎦":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎥":{"docs":{},"​":{"docs":{},"⎤":{"docs":{},"​":{"docs":{},"​":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"a":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"​":{"docs":{},"​":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"−":{"docs":{},"a":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"​":{"docs":{},"​":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"，":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"阵":{"docs":{},"点":{"docs":{},"值":{"docs":{},"将":{"docs":{},"不":{"docs":{},"再":{"docs":{},"对":{"docs":{},"称":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/图/邻接表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接表/代码实现/代码实现.html","tf":0.010416666666666666}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"条":{"docs":{},"边":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{"数据结构/图/邻接多重表/代码实现/代码实现.html":{"ref":"数据结构/图/邻接多重表/代码实现/代码实现.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}},"a":{"docs":{},"直":{"docs":{},"接":{"docs":{},"相":{"docs":{},"连":{"docs":{},"的":{"docs":{},"b":{"docs":{},"和":{"docs":{},"f":{"docs":{},"放":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}}}}}},"b":{"docs":{},"、":{"docs":{},"f":{"docs":{},"直":{"docs":{},"接":{"docs":{},"相":{"docs":{},"连":{"docs":{},"的":{"docs":{},"c":{"docs":{},"、":{"docs":{},"i":{"docs":{},"、":{"docs":{},"g":{"docs":{},"、":{"docs":{},"e":{"docs":{},"放":{"docs":{},"在":{"docs":{},"第":{"docs":{},"三":{"docs":{},"层":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"第":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"行":{"docs":{},"中":{"docs":{},"，":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"列":{"docs":{},"就":{"docs":{},"是":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"事":{"docs":{},"件":{"docs":{},"的":{"docs":{},"最":{"docs":{},"早":{"docs":{},"发":{"docs":{},"生":{"docs":{},"时":{"docs":{},"间":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"头":{"docs":{},"至":{"docs":{},"尾":{"docs":{},"找":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"求":{"docs":{},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"调":{"docs":{},"用":{"docs":{},"依":{"docs":{},"次":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"序":{"docs":{},"列":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"和":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"序":{"docs":{},"列":{"docs":{},"列":{"docs":{},"表":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"路":{"docs":{},"径":{"docs":{"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.004310344827586207}}}}}}},"要":{"docs":{},"求":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{},"​":{"docs":{},"i":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"度":{"docs":{},"，":{"docs":{},"其":{"docs":{},"值":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"在":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"第":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"行":{"docs":{},"（":{"docs":{},"或":{"docs":{},"第":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"列":{"docs":{},"）":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"和":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"v":{"1":{"docs":{},"v":{"docs":{},"_":{"1":{"docs":{},"v":{"docs":{},"​":{"1":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"2":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}},"docs":{}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"需":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"就":{"docs":{},"不":{"docs":{},"再":{"docs":{},"多":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"了":{"docs":{},"，":{"docs":{},"其":{"docs":{},"数":{"docs":{},"组":{"docs":{},"大":{"docs":{},"致":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"ref":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"图":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"×":{"docs":{},"n":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"=":{"docs":{},"(":{"docs":{},"v":{"docs":{},"g":{"docs":{},"=":{"docs":{},"(":{"docs":{},"v":{"docs":{},"g":{"docs":{},"=":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":0.0625}}}}}}}}}}}}}}}},"（":{"0":{"docs":{},",":{"0":{"docs":{},"）":{"docs":{},"元":{"docs":{},"素":{"docs":{},"表":{"docs":{},"示":{"docs":{},"v":{"0":{"docs":{},"v":{"docs":{},"_":{"0":{"docs":{},"v":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"与":{"docs":{},"v":{"0":{"docs":{},"v":{"docs":{},"_":{"0":{"docs":{},"v":{"docs":{},"​":{"0":{"docs":{},"​":{"docs":{},"​":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"数据结构/图/邻接矩阵/邻接矩阵.html":{"ref":"数据结构/图/邻接矩阵/邻接矩阵.html","tf":0.010416666666666666}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}},"充":{"docs":{},"当":{"docs":{},"无":{"docs":{},"穷":{"docs":{},"大":{"docs":{"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"ref":"数据结构/图/邻接矩阵/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}},"几":{"docs":{},"乎":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"都":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"链":{"docs":{},"式":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"构":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"数据结构/图/邻接表/邻接表.html":{"ref":"数据结构/图/邻接表/邻接表.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"刚":{"docs":{},"刚":{"docs":{},"说":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"在":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"一":{"docs":{},"条":{"docs":{},"弧":{"docs":{},"对":{"docs":{},"于":{"docs":{},"其":{"docs":{},"表":{"docs":{},"头":{"docs":{},"是":{"docs":{},"出":{"docs":{},"边":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"入":{"docs":{},"边":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"的":{"docs":{},"表":{"docs":{},"头":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"边":{"docs":{},"是":{"docs":{},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"连":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"就":{"docs":{},"行":{"docs":{},"了":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"才":{"docs":{},"的":{"docs":{},"极":{"docs":{},"端":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"当":{"docs":{},"数":{"docs":{},"据":{"docs":{},"量":{"docs":{},"巨":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"值":{"docs":{},"还":{"docs":{},"在":{"docs":{},"表":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"端":{"docs":{},"，":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"思":{"docs":{},"考":{"docs":{},"这":{"docs":{},"个":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"我":{"docs":{},"们":{"docs":{},"现":{"docs":{},"在":{"docs":{},"是":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"里":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"如":{"docs":{},"果":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"在":{"docs":{},"表":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"端":{"docs":{},"只":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"一":{"docs":{},"件":{"docs":{},"事":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"特":{"docs":{},"别":{"docs":{},"大":{"docs":{},"或":{"docs":{},"特":{"docs":{},"别":{"docs":{},"小":{"docs":{},"，":{"docs":{},"那":{"docs":{},"我":{"docs":{},"们":{"docs":{},"何":{"docs":{},"不":{"docs":{},"直":{"docs":{},"接":{"docs":{},"从":{"docs":{},"这":{"docs":{},"个":{"docs":{},"表":{"docs":{},"的":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"或":{"docs":{},"者":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"开":{"docs":{},"始":{"docs":{},"查":{"docs":{},"找":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"再":{"docs":{},"推":{"docs":{},"广":{"docs":{},"到":{"docs":{},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"能":{"docs":{},"否":{"docs":{},"根":{"docs":{},"据":{"docs":{},"待":{"docs":{},"查":{"docs":{},"值":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"来":{"docs":{},"确":{"docs":{},"定":{"docs":{},"我":{"docs":{},"们":{"docs":{},"开":{"docs":{},"始":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"这":{"docs":{},"个":{"docs":{},"答":{"docs":{},"案":{"docs":{},"就":{"docs":{},"是":{"docs":{},"插":{"docs":{},"值":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"十":{"docs":{},"字":{"docs":{},"链":{"docs":{},"表":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":10}},"指":{"docs":{},"针":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}},"类":{"docs":{},"型":{"docs":{"数据结构/图/十字链表/代码实现/代码实现.html":{"ref":"数据结构/图/十字链表/代码实现/代码实现.html","tf":0.010101010101010102}}}},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"而":{"docs":{},"言":{"docs":{},"在":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"所":{"docs":{},"做":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"需":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"优":{"docs":{},"化":{"docs":{},"呢":{"docs":{},"？":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"根":{"docs":{},"据":{"docs":{},"这":{"docs":{},"个":{"docs":{},"入":{"docs":{},"边":{"docs":{},"表":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"？":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"只":{"docs":{},"保":{"docs":{},"存":{"docs":{},"了":{"docs":{},"以":{"docs":{},"表":{"docs":{},"头":{"docs":{},"为":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"边":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"头":{"docs":{},"，":{"docs":{},"却":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"逆":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"更":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"弧":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"想":{"docs":{},"象":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"出":{"docs":{},"边":{"docs":{},"表":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"弧":{"docs":{},"尾":{"docs":{},"都":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"表":{"docs":{},"头":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{"数据结构/图/十字链表/十字链表.html":{"ref":"数据结构/图/十字链表/十字链表.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"边":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"其":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"边":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"是":{"docs":{},"边":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"原":{"docs":{},"本":{"docs":{},"的":{"docs":{},"边":{"docs":{},"结":{"docs":{},"点":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"域":{"docs":{},"用":{"docs":{},"于":{"docs":{},"保":{"docs":{},"存":{"docs":{},"和":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"边":{"docs":{},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{},"域":{"docs":{},"用":{"docs":{},"来":{"docs":{},"连":{"docs":{},"接":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"边":{"docs":{},"。":{"docs":{"数据结构/图/邻接多重表/邻接多重表.html":{"ref":"数据结构/图/邻接多重表/邻接多重表.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"能":{"docs":{},"用":{"docs":{},"来":{"docs":{},"保":{"docs":{},"存":{"docs":{},"值":{"docs":{},"。":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}},"块":{"docs":{},"内":{"docs":{},"无":{"docs":{},"序":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"是":{"docs":{},"说":{"docs":{},"块":{"docs":{},"内":{"docs":{},"值":{"docs":{},"按":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"求":{"docs":{},"整":{"docs":{},"个":{"docs":{},"块":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"要":{"docs":{},"比":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"块":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"据":{"docs":{},"大":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"起":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{"数据结构/图/边集数组/代码实现/代码实现.html":{"ref":"数据结构/图/边集数组/代码实现/代码实现.html","tf":0.014084507042253521}}}}}},"动":{"docs":{},"态":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}},"表":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}},"(":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}}}},"检":{"docs":{},"索":{"docs":{},"某":{"docs":{},"个":{"docs":{},"“":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"”":{"docs":{},"数":{"docs":{},"据":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"各":{"docs":{},"种":{"docs":{},"属":{"docs":{},"性":{"docs":{},"。":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"算法/查找/查找.html":{"ref":"算法/查找/查找.html","tf":0.02857142857142857}}}}}}}}}}}}},"码":{"docs":{"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"ref":"算法/查找/线性索引查找/倒排索引/倒排索引.html","tf":0.1111111111111111}}}}}},"!":{"docs":{},"=":{"docs":{"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"ref":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","tf":0.041666666666666664},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"ref":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","tf":0.009174311926605505},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.013888888888888888},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"ref":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","tf":0.023809523809523808},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","tf":0.008333333333333333},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"ref":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","tf":0.008620689655172414}}}},"之":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"样":{"docs":{},"替":{"docs":{},"换":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"后":{"docs":{},"者":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"比":{"docs":{},"直":{"docs":{},"接":{"docs":{},"的":{"1":{"2":{"1":{"docs":{},"\\":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"既":{"docs":{},"然":{"docs":{},"发":{"docs":{},"现":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"法":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"答":{"docs":{},"案":{"docs":{},"是":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/有序表查找/插值查找/插值查找.html":{"ref":"算法/查找/有序表查找/插值查找/插值查找.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"与":{"docs":{},"它":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{},"由":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{},"项":{"docs":{},"构":{"docs":{},"成":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{},"项":{"docs":{},"至":{"docs":{},"少":{"docs":{},"应":{"docs":{},"包":{"docs":{},"含":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"和":{"docs":{},"其":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"在":{"docs":{},"存":{"docs":{},"储":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"等":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"按":{"docs":{},"照":{"docs":{},"结":{"docs":{},"构":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"为":{"docs":{},"线":{"docs":{},"性":{"docs":{},"索":{"docs":{},"引":{"docs":{},"、":{"docs":{},"树":{"docs":{},"形":{"docs":{},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"多":{"docs":{},"级":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"此":{"docs":{},"总":{"docs":{},"结":{"docs":{},"就":{"docs":{},"只":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"线":{"docs":{},"性":{"docs":{},"索":{"docs":{},"引":{"docs":{},"技":{"docs":{},"术":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/线性索引查找.html":{"ref":"算法/查找/线性索引查找/线性索引查找.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"的":{"docs":{},"建":{"docs":{},"立":{"docs":{},"过":{"docs":{},"程":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"需":{"docs":{},"要":{"docs":{},"建":{"docs":{},"立":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"无":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"一":{"docs":{},"条":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"该":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"主":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"索":{"docs":{},"引":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"记":{"docs":{},"录":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"项":{"docs":{},"有":{"docs":{},"序":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"到":{"docs":{},"二":{"docs":{},"分":{"docs":{},"、":{"docs":{},"插":{"docs":{},"值":{"docs":{},"、":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"等":{"docs":{},"有":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"ref":"算法/查找/线性索引查找/稠密索引/稠密索引.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"块":{"docs":{},"中":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"个":{"docs":{},"数":{"docs":{},"：":{"docs":{},"以":{"docs":{},"便":{"docs":{},"于":{"docs":{},"循":{"docs":{},"环":{"docs":{},"时":{"docs":{},"利":{"docs":{},"用":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}},"内":{"docs":{},"无":{"docs":{},"序":{"docs":{},"：":{"docs":{},"即":{"docs":{},"每":{"docs":{},"一":{"docs":{},"块":{"docs":{},"内":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"有":{"docs":{},"序":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"块":{"docs":{},"内":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"也":{"docs":{},"要":{"docs":{},"求":{"docs":{},"有":{"docs":{},"序":{"docs":{},"那":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"付":{"docs":{},"出":{"docs":{},"大":{"docs":{},"量":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"有":{"docs":{},"序":{"docs":{},"：":{"docs":{},"即":{"docs":{},"每":{"docs":{},"一":{"docs":{},"块":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"记":{"docs":{},"录":{"docs":{},"要":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}},"针":{"docs":{},"对":{"docs":{},"与":{"docs":{},"稠":{"docs":{},"密":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"种":{"docs":{},"补":{"docs":{},"足":{"docs":{},"方":{"docs":{},"式":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"分":{"docs":{},"块":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{"算法/查找/线性索引查找/分块索引/分块索引.html":{"ref":"算法/查找/线性索引查找/分块索引/分块索引.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"删":{"docs":{},"除":{"docs":{},"结":{"docs":{},"点":{"docs":{},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}},"又":{"docs":{},"因":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"采":{"docs":{},"用":{"docs":{},"链":{"docs":{},"式":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"插":{"docs":{},"入":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"上":{"docs":{},"也":{"docs":{},"是":{"docs":{},"很":{"docs":{},"快":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"明":{"docs":{},"显":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"对":{"docs":{},"这":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"好":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"将":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"有":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/二叉排序树.html":{"ref":"算法/查找/二叉排序树/二叉排序树.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"发":{"docs":{},"动":{"docs":{},"机":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"最":{"docs":{},"长":{"docs":{},"，":{"docs":{},"在":{"docs":{},"造":{"docs":{},"发":{"docs":{},"动":{"docs":{},"机":{"docs":{},"的":{"docs":{},"这":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"里":{"docs":{},"，":{"docs":{},"已":{"docs":{},"经":{"docs":{},"造":{"docs":{},"好":{"docs":{},"了":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"四":{"docs":{},"个":{"docs":{},"轮":{"docs":{},"子":{"docs":{},"，":{"docs":{},"车":{"docs":{},"底":{"docs":{},"盘":{"docs":{},"，":{"docs":{},"外":{"docs":{},"壳":{"docs":{},"和":{"docs":{},"其":{"docs":{},"他":{"docs":{},"零":{"docs":{},"部":{"docs":{},"件":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"终":{"docs":{},"花":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"3":{"docs":{},"+":{"0":{"docs":{},".":{"5":{"docs":{},"+":{"2":{"docs":{},"=":{"5":{"docs":{},".":{"5":{"docs":{},"天":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"准":{"docs":{},"备":{"docs":{"算法/查找/二叉排序树/查找操作/查找操作.html":{"ref":"算法/查找/二叉排序树/查找操作/查找操作.html","tf":0.045454545454545456}}}},"情":{"docs":{},"况":{"docs":{},"一":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}},"三":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}},"二":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}},"说":{"docs":{},"到":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"的":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"说":{"docs":{},"到":{"docs":{},"底":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"断":{"docs":{},"链":{"docs":{},"然":{"docs":{},"后":{"docs":{},"重":{"docs":{},"接":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"看":{"docs":{},"上":{"docs":{},"去":{"docs":{},"并":{"docs":{},"不":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"但":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"某":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"后":{"docs":{},"，":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"不":{"docs":{},"再":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"排":{"docs":{},"序":{"docs":{},"树":{"docs":{},"。":{"docs":{"算法/查找/二叉排序树/删除操作/删除操作.html":{"ref":"算法/查找/二叉排序树/删除操作/删除操作.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"距":{"docs":{},"离":{"docs":{},"插":{"docs":{},"入":{"docs":{},"结":{"docs":{},"点":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"因":{"docs":{},"子":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"1":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"根":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"称":{"docs":{},"为":{"docs":{},"最":{"docs":{},"小":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/平衡二叉树.html":{"ref":"算法/查找/平衡二叉树/平衡二叉树.html","tf":0.05}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"方":{"docs":{},"向":{"docs":{},"根":{"docs":{},"据":{"docs":{},"最":{"docs":{},"小":{"docs":{},"不":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"因":{"docs":{},"子":{"docs":{},"b":{"docs":{},"f":{"docs":{},"的":{"docs":{},"值":{"docs":{},"决":{"docs":{},"定":{"docs":{},"，":{"docs":{},"若":{"docs":{},"为":{"docs":{},"正":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"右":{"docs":{},"旋":{"docs":{},"，":{"docs":{},"若":{"docs":{},"为":{"docs":{},"负":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"。":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"六":{"docs":{},".":{"docs":{"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"ref":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","tf":0.002638522427440633}}}},"多":{"docs":{},"路":{"docs":{},"查":{"docs":{},"找":{"docs":{},"树":{"docs":{},"(":{"docs":{},"b":{"docs":{},"树":{"docs":{},")":{"docs":{"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":10}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"算法/查找/多路查找树/多路查找树.html":{"ref":"算法/查找/多路查找树/多路查找树.html","tf":0.1}}}}}}}}}}}}},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"将":{"docs":{},"该":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"与":{"docs":{},"其":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"合":{"docs":{},"并":{"docs":{},"为":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"要":{"docs":{},"保":{"docs":{},"持":{"docs":{},"树":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}},"结":{"docs":{},"点":{"docs":{},"也":{"docs":{},"是":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"且":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"其":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"根":{"docs":{},"的":{"docs":{},"这":{"docs":{},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"是":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"其":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"右":{"docs":{},"旋":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"是":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"其":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"也":{"docs":{},"是":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"这":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"直":{"docs":{},"接":{"docs":{},"后":{"docs":{},"继":{"docs":{},"，":{"docs":{},"让":{"docs":{},"这":{"docs":{},"个":{"2":{"docs":{},"结":{"docs":{},"点":{"docs":{},"变":{"docs":{},"成":{"3":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"直":{"docs":{},"接":{"docs":{},"后":{"docs":{},"继":{"docs":{},"的":{"docs":{},"直":{"docs":{},"接":{"docs":{},"后":{"docs":{},"继":{"docs":{},"去":{"docs":{},"替":{"docs":{},"代":{"docs":{},"这":{"docs":{},"个":{"docs":{},"直":{"docs":{},"接":{"docs":{},"后":{"docs":{},"继":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{},"替":{"docs":{},"换":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"按":{"docs":{},"照":{"docs":{},"第":{"1":{"docs":{},"中":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法/查找/多路查找树/2-3树/2-3树.html":{"ref":"算法/查找/多路查找树/2-3树/2-3树.html","tf":0.02857142857142857}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"属":{"docs":{},"性":{"docs":{"算法/查找/多路查找树/B树/B树.html":{"ref":"算法/查找/多路查找树/B树/B树.html","tf":0.023809523809523808}}}},"|":{"docs":{},"|":{"docs":{"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"ref":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","tf":0.006944444444444444}}}},"⩽":{"docs":{},"k":{"docs":{},"p":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}},"内":{"docs":{},"排":{"docs":{},"序":{"docs":{},"与":{"docs":{},"外":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}},"是":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"整":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"待":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"记":{"docs":{},"录":{"docs":{},"全":{"docs":{},"部":{"docs":{},"被":{"docs":{},"放":{"docs":{},"置":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"。":{"docs":{},"外":{"docs":{},"排":{"docs":{},"序":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"个":{"docs":{},"数":{"docs":{},"太":{"docs":{},"多":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"同":{"docs":{},"时":{"docs":{},"放":{"docs":{},"置":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"整":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"过":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"内":{"docs":{},"外":{"docs":{},"存":{"docs":{},"之":{"docs":{},"间":{"docs":{},"多":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"数":{"docs":{},"据":{"docs":{},"才":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"。":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":10}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"ref":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","tf":10}}}},"优":{"docs":{},"化":{"docs":{"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"ref":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","tf":10}}}}}}}},"希":{"docs":{},"尔":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":10}},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}}}}}}},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"与":{"docs":{},"“":{"docs":{},"增":{"docs":{},"量":{"docs":{},"”":{"docs":{},"的":{"docs":{},"选":{"docs":{},"取":{"docs":{},"息":{"docs":{},"息":{"docs":{},"相":{"docs":{},"关":{"docs":{},"，":{"docs":{},"大":{"docs":{},"量":{"docs":{},"研":{"docs":{},"究":{"docs":{},"表":{"docs":{},"明":{"docs":{},"当":{"docs":{},"增":{"docs":{},"量":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"d":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"=":{"2":{"docs":{},"t":{"docs":{},"−":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"−":{"1":{"docs":{"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/排序/希尔排序/希尔排序算法/希尔排序算法.html":{"ref":"算法/排序/希尔排序/希尔排序算法/希尔排序算法.html","tf":10}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"直":{"docs":{},"接":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"升":{"docs":{},"级":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"同":{"docs":{},"属":{"docs":{},"于":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"类":{"docs":{},"；":{"docs":{},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"简":{"docs":{},"单":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"升":{"docs":{},"级":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"同":{"docs":{},"属":{"docs":{},"于":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"类":{"docs":{},"。":{"docs":{},"而":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"升":{"docs":{},"级":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"都":{"docs":{},"属":{"docs":{},"于":{"docs":{},"交":{"docs":{},"换":{"docs":{},"排":{"docs":{},"序":{"docs":{},"类":{"docs":{},"。":{"docs":{"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":10},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1}}}}}}},"每":{"docs":{},"次":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"记":{"docs":{},"录":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"耗":{"docs":{},"费":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"一":{"docs":{},"共":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"2":{"docs":{},"n":{"docs":{},"]":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"2":{"docs":{},"n":{"docs":{},"]":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},"n":{"docs":{},"]":{"docs":{},"次":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"总":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"：":{"docs":{},"假":{"docs":{},"设":{"docs":{},"初":{"docs":{},"始":{"docs":{},"序":{"docs":{},"列":{"docs":{},"含":{"docs":{},"有":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"两":{"docs":{},"两":{"docs":{},"归":{"docs":{},"并":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"[":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"2":{"docs":{},"或":{"1":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"（":{"docs":{},"其":{"docs":{},"中":{"docs":{},"[":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"不":{"docs":{},"小":{"docs":{},"于":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"整":{"docs":{},"数":{"docs":{},"；":{"docs":{},"再":{"docs":{},"两":{"docs":{},"两":{"docs":{},"归":{"docs":{},"并":{"docs":{},"，":{"docs":{},"…":{"docs":{},"…":{"docs":{},"，":{"docs":{},"如":{"docs":{},"此":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"直":{"docs":{},"至":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"n":{"docs":{},"n":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"称":{"docs":{},"为":{"2":{"docs":{},"路":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法/排序/归并排序/归并排序算法/归并排序算法.html":{"ref":"算法/排序/归并排序/归并排序算法/归并排序算法.html","tf":1}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/排序/归并排序/归并排序算法/归并排序算法.html":{"ref":"算法/排序/归并排序/归并排序算法/归并排序算法.html","tf":10}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"比":{"docs":{},"较":{"docs":{},"占":{"docs":{},"用":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"但":{"docs":{},"却":{"docs":{},"效":{"docs":{},"率":{"docs":{},"高":{"docs":{},"且":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/排序/归并排序/非递归归并排序/非递归归并排序.html":{"ref":"算法/排序/归并排序/非递归归并排序/非递归归并排序.html","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","tf":0.011235955056179775}}}},"操":{"docs":{},"作":{"docs":{"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"ref":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","tf":0.015873015873015872}}}}}},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258},"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":10},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法/排序/快速排序/快速排序算法/快速排序算法.html":{"ref":"算法/排序/快速排序/快速排序算法/快速排序算法.html","tf":0.5}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法/排序/快速排序/快速排序算法/快速排序算法.html":{"ref":"算法/排序/快速排序/快速排序算法/快速排序算法.html","tf":10}}}},"优":{"docs":{},"化":{"docs":{"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"ref":"算法/排序/快速排序/快速排序优化/快速排序优化.html","tf":10}}}}}}}},"排":{"docs":{},"序":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":10}},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"而":{"docs":{},"言":{"docs":{},"的":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"用":{"docs":{},"于":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"都":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"与":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}}}},"的":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"性":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}}}},"时":{"docs":{},"间":{"docs":{},"性":{"docs":{},"能":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}}},"稳":{"docs":{},"定":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.03225806451612903}},"性":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.008064516129032258}}}}},"辅":{"docs":{},"助":{"docs":{},"空":{"docs":{},"间":{"docs":{"算法/排序/排序.html":{"ref":"算法/排序/排序.html","tf":0.016129032258064516}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"分":{"docs":{},"析":{"docs":{"算法/排序/冒泡排序/冒泡排序.html":{"ref":"算法/排序/冒泡排序/冒泡排序.html","tf":0.09090909090909091},"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693},"算法/排序/直接插入排序/直接插入排序.html":{"ref":"算法/排序/直接插入排序/直接插入排序.html","tf":0.06666666666666667},"算法/排序/希尔排序/希尔排序.html":{"ref":"算法/排序/希尔排序/希尔排序.html","tf":0.058823529411764705},"算法/排序/堆排序/堆排序.html":{"ref":"算法/排序/堆排序/堆排序.html","tf":0.14285714285714285},"算法/排序/归并排序/归并排序.html":{"ref":"算法/排序/归并排序/归并排序.html","tf":0.1},"算法/排序/快速排序/快速排序.html":{"ref":"算法/排序/快速排序/快速排序.html","tf":0.1111111111111111}}}}}}},"介":{"docs":{},"绍":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"先":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"一":{"docs":{},"种":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"ref":"算法/排序/冒泡排序/最简排序法/最简排序法.html","tf":0.125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"就":{"docs":{},"是":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"在":{"docs":{},"n":{"docs":{},"−":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"n":{"docs":{"算法/排序/简单选择排序/简单选择排序.html":{"ref":"算法/排序/简单选择排序/简单选择排序.html","tf":0.07692307692307693}}}},"docs":{}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"假":{"docs":{},"定":{"docs":{},"为":{"docs":{},"a":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"按":{"docs":{},"照":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"该":{"docs":{},"图":{"docs":{},"按":{"docs":{},"层":{"docs":{},"序":{"docs":{},"排":{"docs":{},"好":{"docs":{},"：":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"移":{"docs":{},"动":{"docs":{},"元":{"docs":{},"素":{"docs":{},"到":{"docs":{},"枢":{"docs":{},"轴":{"docs":{"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"ref":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","tf":0.0196078431372549}}}}}}}}},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"更":{"docs":{},"适":{"docs":{},"合":{"docs":{},"在":{"docs":{},"不":{"docs":{},"断":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"范":{"docs":{},"围":{"docs":{},"时":{"docs":{},"找":{"docs":{},"到":{"docs":{},"相":{"docs":{},"对":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"算法/图/遍历/遍历.html":{"ref":"算法/图/遍历/遍历.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":10}},"(":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"ref":"算法/图/遍历/广度优先遍历/广度优先遍历.html","tf":0.06666666666666667}}}}}}}}}}}}}}}},"到":{"docs":{},"了":{"docs":{},"f":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"最":{"docs":{},"右":{"docs":{},"边":{"docs":{},"是":{"docs":{},"a":{"docs":{},"，":{"docs":{},"而":{"docs":{},"与":{"docs":{},"a":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"选":{"docs":{},"择":{"docs":{},"从":{"docs":{},"右":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"通":{"docs":{},"道":{"docs":{},"，":{"docs":{},"到":{"docs":{},"了":{"docs":{},"g":{"docs":{},"顶":{"docs":{},"点":{"docs":{"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"ref":"算法/图/遍历/深度优先遍历/深度优先遍历.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"连":{"docs":{},"通":{"docs":{},"图":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"，":{"docs":{},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"普":{"docs":{},"里":{"docs":{},"姆":{"docs":{},"算":{"docs":{},"法":{"docs":{},"和":{"docs":{},"克":{"docs":{},"鲁":{"docs":{},"斯":{"docs":{},"卡":{"docs":{},"尔":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/图/最小生成树/最小生成树.html":{"ref":"算法/图/最小生成树/最小生成树.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"案":{"docs":{},"例":{"docs":{"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"ref":"算法/图/最小生成树/普里姆算法/普里姆算法.html","tf":0.1111111111111111},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142},"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}},"于":{"docs":{},"是":{"docs":{},"选":{"docs":{},"择":{"docs":{},"权":{"docs":{},"值":{"docs":{},"为":{"1":{"9":{"docs":{},"的":{"docs":{},"g":{"docs":{},"h":{"docs":{},"，":{"docs":{},"未":{"docs":{},"连":{"docs":{},"通":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"将":{"docs":{},"其":{"docs":{},"连":{"docs":{},"通":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"所":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"已":{"docs":{},"连":{"docs":{},"通":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"克":{"docs":{},"鲁":{"docs":{},"斯":{"docs":{},"卡":{"docs":{},"尔":{"docs":{},"(":{"docs":{},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},"算":{"docs":{},"法":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":10}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"边":{"docs":{},"集":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"。":{"docs":{"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"ref":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","tf":0.07142857142857142}}}}}}}}}}}}}}}}}}},"弗":{"docs":{},"洛":{"docs":{},"伊":{"docs":{},"德":{"docs":{},"算":{"docs":{},"法":{"docs":{},"没":{"docs":{},"有":{"docs":{},"只":{"docs":{},"找":{"docs":{},"到":{"docs":{},"某":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"它":{"docs":{},"直":{"docs":{},"接":{"docs":{},"查":{"docs":{},"找":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"其":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"3":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"3":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"3":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},")":{"docs":{},"算":{"docs":{},"法":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":10}}}}}}}}}}}}}}},"迪":{"docs":{},"杰":{"docs":{},"斯":{"docs":{},"特":{"docs":{},"拉":{"docs":{},"算":{"docs":{},"法":{"docs":{},"找":{"docs":{},"到":{"docs":{},"某":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"找":{"docs":{},"到":{"docs":{},"全":{"docs":{},"部":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"3":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"3":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"3":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"算法/图/最短路径/最短路径.html":{"ref":"算法/图/最短路径/最短路径.html","tf":0.08333333333333333}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},")":{"docs":{},"算":{"docs":{},"法":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":10}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"按":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"次":{"docs":{},"序":{"docs":{},"产":{"docs":{},"生":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"图":{"docs":{},"，":{"docs":{},"求":{"docs":{},"从":{"docs":{},"v":{"0":{"docs":{},"到":{"docs":{},"v":{"8":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"ref":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","tf":0.05263157894736842}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"网":{"docs":{},"图":{"docs":{},"如":{"docs":{},"下":{"docs":{},"，":{"docs":{},"求":{"docs":{},"v":{"0":{"docs":{},"到":{"docs":{},"v":{"8":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"ref":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","tf":0.005813953488372093}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}},"据":{"docs":{},"表":{"docs":{},"查":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"径":{"docs":{"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"ref":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","tf":0.01639344262295082}}}}}}}}},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法/图/拓扑排序/拓扑排序.html":{"ref":"算法/图/拓扑排序/拓扑排序.html","tf":10}},"算":{"docs":{},"法":{"docs":{"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html":{"ref":"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html","tf":10}}}},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"为":{"docs":{},"解":{"docs":{},"决":{"docs":{},"一":{"docs":{},"个":{"docs":{},"工":{"docs":{},"程":{"docs":{},"能":{"docs":{},"否":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"有":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"解":{"docs":{},"决":{"docs":{},"工":{"docs":{},"程":{"docs":{},"完":{"docs":{},"成":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"时":{"docs":{},"间":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"，":{"docs":{},"造":{"docs":{},"一":{"docs":{},"辆":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"造":{"docs":{},"各":{"docs":{},"种":{"docs":{},"各":{"docs":{},"样":{"docs":{},"的":{"docs":{},"零":{"docs":{},"件":{"docs":{},"、":{"docs":{},"部":{"docs":{},"件":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"再":{"docs":{},"组":{"docs":{},"装":{"docs":{},"成":{"docs":{},"车":{"docs":{},"。":{"docs":{"算法/图/关键路径/关键路径.html":{"ref":"算法/图/关键路径/关键路径.html","tf":0.06666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"活":{"docs":{},"动":{"docs":{},"的":{"docs":{},"最":{"docs":{},"早":{"docs":{},"开":{"docs":{},"工":{"docs":{},"时":{"docs":{},"间":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}},"晚":{"docs":{},"开":{"docs":{},"工":{"docs":{},"时":{"docs":{},"间":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法/图/关键路径/关键路径算法/关键路径算法.html":{"ref":"算法/图/关键路径/关键路径算法/关键路径算法.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}},"length":4908},"corpusTokens":["!=","\",","\"a1a2a_1a_2a​1​​a​2​​···ana_na​n​​\"，t=t=t=","\"b1b2b_1b_2b​1​​b​2​​···bmb_mb​m​​\"，当满足以下条件之一时，stsst。","#defin","%","%d","%d\",","%d,","%d\\n\",","&","&&","&0&2&\\infti","&1&7&\\infti","&1\\\\","&3&0&\\infti","&3&6&0&2&7&\\infti","&3&\\infti","&5&1&2&0&3&6&9&\\infti","&5&\\infti","&6\\\\","&7&4&0","&7&\\infti","&9&5&2&0&4","&\\infti","&g","&i);","&i,","&j,","&p))","&w);","(","(!*t)","(!insertavl(&(*t)","(!p)","(!searchbst(*t,","(!t)","((*p)","((*t)","((high","(*addr","(*d)[k][w])","(*d)[k][w];","(*d)[v][k]","(*d)[v][w]","(*p)","(*p);","(*p)[v][k];","(*p)[v][w]","(*t)","(*taller)","(0\\leqslant","(0⩽k⩽t⩽[log2(n+1)])dlta[k]=2^{t","(0⩽k⩽t⩽[log​2​​(n+1)])时，可以获得不错的效率，其时间复杂度为o(n3/2)o(n^{3/2})o(n​3/2​​)。","(1\\leqslant","(1⩽i⩽n)i\\","(1⩽i⩽n)个记录交换。","(a1","(addr","(bitree)malloc(sizeof(bitnode));","(e","(h","(h.elem[*addr]","(high","(i","(i=0;","(i=1i=1i=1,222,···,k−1k","(i=1i=1i=1,222,···,nnn)。","(int","(j","(j)","(k","(key","(l","(linkstackptr)malloc(sizeof(stacknode));","(low","(n","(n+1)])dlta[k]=2​t−k+1​​−1","(n⩾0)(n\\geqslant","(p\\leqslant","(p⩽m)","(q","(r","(rl","(s","(temp","(v3v_3v​3​​,","({n+1\\over",")","*","*)malloc(gl","*)malloc(l","*)malloc(m","*/","*a,","*addr","*addr)","*bitree;","*chars)：生成一个其值等于字符串常量chars的串t。","*d)","*e","*e)","*e):","*e)：删除栈s中栈顶元素，并用e返回其值","*e)：删除队列q中队头元素，并用e返回其值。","*e)：若栈存在且非空，用e返回s的栈顶元素","*e)：若队列q存在且非空，用e返回队列q的队头元素。","*e,","*e;","*e=","*e=p","*e=q","*elem;","*etv,","*firstchild;","*firstedge;","*g)","*graphadjlist;","*h)","*h,","*ilink;","*jlink;","*l)","*l,","*lchild,","*lchild;","*leftchild;","*linklist;","*ltv;","*next)","*next;","*next_in;","*next_out;","*nextval)","*p","*p)","*p,","*p;","*parc;","*parent;","*pnode;","*pre;","*ptralgraph;","*ptrarc;","*ptrbithrnode;","*ptredge;","*ptrgraph;","*ptrmultialgraph;","*ptrorthlist;","*q,","*rchild;","*rightbrother;","*rightchild;","*rightsib;","*s,","*sizeof(int));","*stack2;","*stack;","*string;","*t","*t)","*t,","*taller","*taller)","*tr","*v)：返回顶点v的一个邻接顶点，若顶点在g中无邻接顶点返回空","*w)：返回顶点v相对于顶点w的下一个邻接顶点，若w是v的最后一个邻接点则返回空","+","+++","++j;","+1","...","...,","...]","/","/*","//","0","0&0&0&0","0&0&0&1\\\\","0&1&1&1&1&1&1&1&1\\\\","0&1&1&1\\\\","0&1&2&2&2&2&2&2&2\\\\","0&1&2&3&4&5&6&7&8\\\\","0&1&4&7&5&8&10&12&16\\\\","0&1&5&\\infti","0)","0)(n⩾0).","0)m(m⩾0)棵互不相交的树的集合","0)n(n⩾0)个结点的有限集。","0)n(n⩾0)个结点的有限集合，该集合或者为空集（称为空二叉树），或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右子树的二叉树组成。一般用链式存储结构实现。","00","000","001","01","010","011","0;","0~59","0时，队列为空；当front","1","1&0&1&0","1&0&1&0\\\\","1&0&3&6&4&7&9&11&15\\\\","1&0&3&7&5&\\infti","1&1&0&0\\\\","1&1&0&1\\\\","1&1&2&4&4&4&4&4&4\\\\","1)","1)+f(n","1)/20⩽e⩽n(n−1)/2","1)0⩽e⩽n(n−1)","1);","1)=n+12n−(n−1)=n+1个空指针，如果这个n值很大，那么其将会浪费大量的内存。","1)\\over","1)\\time","1)n([m/2]−1⩽n⩽m−1)为关键字的个数（或n+1n+1n+1为子树的个数）。","1)n×(n−1)条边","1)n−1)；ai(i=0a_i(i=0a​i​​(i=0，222，...，n)n)n)为指向子树根结点的指针，且指针ai−1a_{i","1)}\\over","1,","1.","10","10%","10&9&6&3&5&7&0&2&6\\\\","10,","100","1000","10000","1001","100;","101","101010","11","111","12","12&11&8&5&7&5&2&0&4\\\\","12​k​​−1个。","12​k​​−1个结点（k⩾1k\\geqslant","13","13,","144","15","15%","16&15&12&9&11&9&6&4&0\\\\","1980=01980−1980=0的位置，1982的人数就保存在下标为2的位置，以此类推。即f(key)=key−1980f(key)=key","1980f(key)=key−1980","1;","1\\","1\\leqslant","1]","1])","1];","1^2−1​2​​，222^22​2​​，−22","1f[k−1]−1个。","1f[k−2]−1个。","1i⩾1）","1k−1)，akbka_ka​k​​b​k​​。","1k−1个元素和kkk个孩子，其中[m/2]⩽k⩽m[m/2]\\leqslant","1k−1个元素，其中[m/2]⩽k⩽m[m/2]\\leqslant","1k⩾1）","1m+1个到底highhighhigh个，此时范围个数为f[k−2]−1f[k","1mid=low+f[k−1]−1的公式来每次更新mid的位置，且每次迭代如果不匹配，还需要修改k的值。具体实现见斐波那契查找的代码实现。","1mid−1个，此时范围个数为f[k−1]−1f[k","1m−1","1n−1个序列重新构造成一个堆，这样就会得到nnn个元素中的次大值。如此反复执行，便能得到一个有序序列了。","1n−1条边","1n−1次。因此，总的时间复杂度为o(n2)o(n^2)o(n​2​​)。","1n−1次比较，没有数据交换，时间复杂度为o(n)o(n)o(n)。最坏的情况是待排序表是逆序的情况，此时需要比较n×(n−1)2n\\tim","1n−1次，交换了0次，时间复杂度为o(n)o(n)o(n)；","1}","1}2​i−1​​个结点（i⩾1i\\geqsl","1}=\\left[","1}[v0][v2]d​−1​​[v0][v2]为最新路径4，更新p−1[v0][v2]p^{","1}[v0][v2]p​−1​​[v0][v2]为当前中转点v1的下标1","1}a​i−1​​所指子树中所有结点的关键字均小于kik_ik​i​​，n([m/2]−1⩽n⩽m−1)n([m/2]","1}d​−1​​为ddd，表示以行标为起点，以列标为终点的所有最短路径值；更新p−1p^{","1}d​−1​​和p−1p^{","1}d​−1​​，用来存储每条边的权值，其实就是邻接矩阵；另一个叫做p−1p^{","1}p​1​​...p​k−1​​和pj−k+1...pj−1p_{j","1}p​j−k+1​​...p​j−1​​是两个字符串，p1...pjp_1...p_jp​1​​...p​j​​是这个需要匹配的子串","1}p​−1​​两个矩阵：","1}p​−1​​到ppp，表示以行标为起点，以列标为终点的最短路径。","1}p​−1​​，用来存储从对应顶点的最短路径的前驱矩阵，以行标为起点，以列标为终点，先将所有从起点到终点的最短路径设置为终点的值，也就是说到每个顶点的最短路径都先设置为不经过中转直接到该终点。","1。","1时为空；若top指示的是元素相对位置，则为0时为空","1时栈1为空栈；栈2的top为maxsize时栈2为空栈","1时栈满；若top指示的是元素相对位置，则为maxsize时栈满","1时队列为满。","1条边。","1的位置。","1的元素值，将小的替换到前面，让大的替换到后面","1）","1）先根遍历","1）前序遍历","1）定义","2","2&2&2&3&4&5&3&3&3\\\\","2&\\infti","2)","2,","2.","20","200","21","21,","222","27","29+(3−1)×3+10÷2转换为后缀表达式","2;","2]","2^2−2​2​​，...，q2q^2q​2​​，−q2","2}(high","2})+1","2}=low+{1\\ov","2}\\sum_{i=1}^ntd(v_i)e=​2​​1​​∑​i=1​n​​td(v​i​​)","2}]}","2​2​​(n+2)(n−1)​​次，移动次数是：(n+4)(n−1)2(n+4)(n","2​2​​(n+4)(n−1)​​次。","2​2​​1​​更接近待查值，具体原理暂时不清楚，但通过例证确实如此。","2​2​​1​​替换为了key−a[low]a[high]−a[low]key","2​2​​n×(n−1)​​条边。","2​2​​n×(n−1)​​次。对于交换次数而言，当最好的时候，交换为0次，最差的时候，即逆序时，交换次数为n−1n","2​2​​n×(n−1)​​次，也就是说，对于任何数组，它光是进行比较的时间消耗就是o(n2)o(n^2)o(n​2​​)，还得加上那些需要交换的消耗。","2​2​​n×(n−1)​​次，并作等数量级的记录移动。因此，总的时间复杂度为o(n2)o(n^2)o(n​2​​)。","2​2​​n×(n−1)​​次，所以总体来说效率提升并不大。","2​2​​n×(n−1)​​，对于最简排序来说，每次交换之后可能会把本来相对有序的元素改变，所以这么多次的比较对最简排序来说还是相对有必要的，但是冒泡排序并不会改变原本相对有序的元素关系，也就是说，只要比较过一遍，如果两个元素相对有序，那就不需要再进行比较了，也就是说在原本的冒泡排序中，实际上有很多比较操作都是浪费的。","2）","2）分类","2）后序遍历","2）后根遍历","3","3&3&3&3&3&7&6&7&7\\\\","3)","3+10\\div","3,","3.","30","30%","32768","333","34","34,","35,","37,","3树","3树中只有2结点和3结点，而2","3树中的结点如果包含孩子，那么其孩子个数一定与其结点前缀数相同，否则就不能有孩子。","3树和2","3树插入一个元素的过程有可能会对该树的其余结构产生连锁反应。","3树插入可分为以下三种情况：","3树是3阶b树，2","3树是这样的一棵多路查找树：其中的每一个结点都具有两个孩子（我们称它为2结点）或三个孩子（我们称它为3结点）。","3树的删除操作，也分为三种情况：","3树的扩展，2","3树的插入来说，与二叉排序树相同，插入操作一定是发生在叶子结点上。与二叉排序树不同的是，2","3树的结点最大容量，因此就需要将其拆分，然后在原3结点中两个元素以及插入元素这三个元素中选择其一向上移动一层，若上一层也已经是3结点，则继续对其进行拆分，直到遇到某个2结点或根结点被拆分","3树类似，对于4结点而言，第一子树中所有元素小于4结点中三个元素中最小的元素；第二子树中所有元素在4结点的最小元素和第二小元素之间；第三子树中所有元素在4结点的第二小元素和第三小元素之间；第四子树中所有元素都比4结点最大元素大。","3）","3）关系","4","4&3&0&3&1&4&6&8&12\\\\","4&4&4&3&4&4&6&6&6\\\\","4&4&4&4&4&5&7&7&7\\\\","4)","4,","4.","40","40%","47,","4树","4树就是2","4树是4阶b树。","4树添加了一个4结点：包含3个元素和四个孩子（或没有孩子）。其元素顺序与2","4树都是b树的特例。","4）其他概念","5","5%","5&3&0&\\infti","5&4&1&2&0&3&5&7&11\\\\","5,","5.","51,","55","58,","5个字符是不同的，所以在朴素的模式匹配算法中会存在很多的多余操作。在此可以得到一个结论，就是每一次循环j可以不一定从1开始，主串指针i也不一定需要回退。","6","6&6&6&6&6&5&6&7&8\\\\","6,","6.","60~69","62,","65535","65535;","7","7&6&3&0&2&5&3&5&9\\\\","7&7&7&7&7&7&7&7&8\\\\","7,","7.","70~79","73,","8","8&7&4&5&3&0&7&5&9\\\\","8,","80~89","88,","89","9","9&\\infti","9,","90~100","93","99,","999",";","=","==",">",">=",">adjlist[gettop].data);",">adjlist[gettop].firstedge;",">adjlist[i].data);",">adjlist[i].firstedge;",">adjlist[i].in)",">adjlist[j].data,",">adjlist[j].firstedge;",">adjlist[k].data,",">adjlist[k].in))",">adjlist[p",">adjvex);",">adjvex;",">adjvex]",">adjvex])",">adjvex].data);",">arc[i][j]",">arc[i][j];",">arc[j][i]",">bf",">bf)",">count",">count++;",">data",">data)",">data);",">data;",">data=e;",">data[",">data[++",">data[q",">elem",">elem[addr]",">front",">front)",">front+1)%maxsize;",">front;",">front=(q",">front==q",">front];",">lchild",">lchild);",">lchild,",">lchild;",">length",">length);",">length;",">next)",">next;",">next=",">next=null;",">next=p",">next=q",">next=s;",">next赋值给q",">numedges);",">numnodes,",">numvertex",">r,",">r[0]",">r[0];",">r[high])",">r[high];",">r[i]",">r[i];",">r[j",">r[j]",">r[j])",">r[j];",">r[low]",">r[low])",">r[low];",">r[m]",">r[min]",">r[s]",">r[s];",">rchild",">rchild)",">rchild);",">rchild,",">rchild;",">rear",">rear)",">rear+1)%maxsize;",">rear+1)%maxsize==q",">rear=(q",">rear==p)",">rear=q",">rear=s;",">rear]=e;",">top",">top++;",">top1",">top1+1==",">top1==",">top1]=e;",">top2)",">top2++];",">top2==maxsize)",">top2]=e;",">top;",">top=",">top=s;",">top]",">top];",">vexs[i]);",">weight",">weight)",">weight);",">weight;","[0,","[0001101011000000]","[0111101011011010]","[log_2","[x][x][x]表示不大于xxx的最大整数","[∞∞∞∞69∞3∞∞2∞∞5∞∞∞∞∞1∞∞∞∞∞]","\\","\\%","\\\\","\\begin{matrix}","\\end{cases}","\\end{matrix}","\\infti","\\left[","\\leqslant","\\n\",","\\right]","\\varnothing{k}≠∅表示前面的k集合不是空集。","];","a2","a[0]","a[0]);","a[10]","a[1]","a[1]);","a[40];","a[low]\\ov","a[low]}","a[low]}\\ov","a[low]}}(high","a[low]}​a[high]−a[low]​​key−a[low]​​。","a[mid])","a_1","a_2","a_i","a_n","a_{i","a_{i+1}","addr","adjlist","adjlist;","adjlist[maxvex];","adjmatrix;","adjvex;","adjvex[0]","adjvex[maxvex];","adt","ai","ai+1","ai−1","algraph","algraph;","aoe网中没有入边的顶点称为始点或源点；没有出边的顶点称为终点或汇点。正常情况下，aoe网只有一个源点和汇点。","aoe网的特点有：在某定点所代表的事件发生后，从该定点出发的各活动才能开始。只有在进入顶点的各活动都已经结束，该顶点所代表的事件才能发生。","aov网中的弧表示活动之间存在的某种制约关系。比如演职人员确定了，场地也联系好了，才可以进行拍摄。另外就是aov网中不能存在回路。","arc","arc;","arc[maxvex][maxvex];","arclen;","arclength;","arcnums;","arraydelete(*l,","arrayempty(l):","arrayinsert(*l,","arraylength(l):","assign(t,","avl树的实现","a​1​​,","a​1​​外,","a​2​​,","a​i+1​​,","a​i+1​​是ai","a​i​​,","a​i​​`在链表中的位序","a​i​​在线性表中的位序","a​i​​是第i","a​i​​的存储映像)链结成一个链表,","a​i​​的直接前驱元素","a​i​​的直接后继元素","a​i−1​​,","a​i−1​​是ai","a​n​​)","a​n​​),","a​n​​)的链式存储结构","a​n​​外,","b","b+树","b+树是应文件系统所需而出的一种b树的变形树。在b+树中，出现在分支节点中的元素会被当做它们在该分支节点位置的中序后继者（叶子结点）中再次列出。另外，每一个叶子结点都会保存一个指向后一叶子结点的指针。","balanc","begin;","bf;","bfstraverse(graphadjlist","bfstraverse(mgraph","binari","binary_search(int","bithrnod","bithrnode;","bitnod","bitnode,","bitre","bitree;","bool","box","box;","break;","bubblesort(sqlist","bubblesort0(sqlist","bubblesort2(sqlist","b树","b树(b","b树也有缺点，在b树结构中，我们需要往返于每个结点之间进行多次查找，也就是说，我们必须得在硬盘的页面之间进行多次访问。如中序遍历时，我们先去第一子树，然后回根结点，然后遍历根结点，到第二子树的入口，然后遍历第二子树，然后回到根结点，又重新遍历，以此类推。","c","c)：其中p指向树t的某个结点，i为所指结点p的度加上1，非空树c与t不相交，操作结果为插入c为树t中p所指结点的第i棵子树。","case","char","child;","cleararray(*l):","clearlist(*l):","clearqueue(*q)：将队列q清空。","clearstack(*s)：将栈清空","clearstring(s)：串s存在，将串清空。","cleartree(*t)：若树t存在，则将树t清为空树。","compon","component;","concat(t,","cost","count","count++;","count;","creategraph(*g,","createtree(*t,","creatmgraph(mgraph","criticalpath(graphadjlist","cur","cur;","cur_e)：cur_e是树t中的一个结点，返回此结点的值。","cur_e)：若cur_e是树t的非叶结点，则返回它的最左孩子，否则返回空。","cur_e)：若cur_e是树t的非根结点，则返回它的双亲结点，否则返回空。","cur_e)：若cur_e有右兄弟，则返回它的右兄弟，否则返回空。","cur_e,","cyclelist;","c代码","d","d=[01475810121610364791115430314681276302535954120357118745307591096357026121185752041615129119640]","d=\\left[","d=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​1​4​7​5​8​10​12​16​​​​1​0​3​6​4​7​9​11​15​​​4​3​0​3​1​4​6​8​12​​​7​6​3​0​2​5​3​5​9​​​5​4​1​2​0​3​5​7​11​​​8​7​4​5​3​0​7​5​9​​​10​9​6​3​5​7​0​2​6​​​12​11​8​5​7​5​2​0​4​​​16​15​12​9​11​9​6​4​0​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","d^{","data","data)","data;","data[maxsize];","definition)：按definition给出的定义来构造树。","delete(bitre","delete(t);","deletearc(*g,","deletebst(&(*t)","deletechile(*t,","deletevex(*g,","dequeue(&q,","dequeue(*q,","dequeue(linkqueu","dequeue(sqqueu","destroygraph(*g)：若图g存在则销毁","destroyqueue(*q)：若队列q存在，则销毁它。","destroystack(*s)：若栈存在，则销毁它","destroytree(*t)：销毁树t。","dfs(gl,","dfs(graphadjlist","dfs(mgraph","dfstraverse(g)：对图g中进行深度优先遍历，在遍历过程中对每个顶点调用","dfstraverse(graphadjlist","dfs与bfs的对比","doublelist;","dulcyclelist;","d​−1​​=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​1​5​∞​∞​∞​∞​∞​∞​​​​1​0​3​7​5​∞​∞​∞​∞​​​5​3​0​∞​1​7​∞​∞​∞​​​∞​7​∞​0​2​∞​3​∞​∞​​​∞​5​1​2​0​3​6​9​∞​​​∞​∞​7​∞​3​0​0​5​∞​​​∞​∞​∞​3​6​∞​2​2​7​​​∞​∞​∞​∞​9​5​7​0​4​​​∞​∞​∞​∞​∞​∞​∞​4​0​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","d−1=[015∞∞∞∞∞∞10375∞∞∞∞530∞17∞∞∞∞7∞02∞3∞∞∞5120369∞∞∞7∞30∞5∞∞∞∞36027∞∞∞∞∞95204∞∞∞∞∞∞740]","e","e)","e):","e)e)e)是一个具有nnn个顶点的有向图，vvv中的顶点序列v1v_1v​1​​，v2v_2v​2​​，...，vnv_nv​n​​，满足若从顶点viv_iv​i​​到vjv_jv​j​​有一条路径，则在顶点序列中顶点viv_iv​i​​必在顶点vjv_jv​j​​之前。则我们称这样的顶点序列为一个拓扑序列","e)：若栈s存在，插入新元素e到栈s中并成为栈顶元素","e)：若队列q存在，插入新元素e到队列q中并成为队尾元素。","e,","e;","e\\leqsl","edg","edge)：即弧aka_ka​k​​的最早发生时间","edge)：即弧aka_ka​k​​的最晚发生时间，也就是不推迟工期的最晚开工时间","edge;","edge[maxarc];","edgenod","edgenums;","edges;","edges[maxedge];","edgetyp","edgetype;","eh","eh:","eh;","elem;","elem[i]","elemtyp","elemtype;","elemtype类型根据实际情况而定,","end;","endadt","enqueue(&q,","enqueue(*q,","enqueue(linkqueu","enqueue(sqqueu","error;","et","ete,","etv","etv[gettop]","etv[gl","etv[i]","etv[j];","etv[k]","etv[k])","exit(overflow);","f","f(key)=a\\tim","f(key)=a×key+b","f(key)=key","f(key)=key\\","f(n","f(n)=\\begin{cases}","f(n)={0n=01n=1f(n−1)+f(n−2)n>1","f(n)=​⎩​⎪​⎨​⎪​⎧​​​0​1​f(n−1)+f(n−2)​​​n=0​n=1​n>1​​","f,","f;","f[k]","f_i(key)=(f(key)+d_i)\\","factor)，由定义可知平衡因子可正可负，所以平衡二叉树要求二叉排序树每个结点的平衡因子的绝对值的最大值最多为1，否则称该树不平衡。","fals","false;","fbi(int","fi(key)=(f(key)+di)","fibonacci_search(int","fifo：first","final[maxvex];","first","firstadjvex(g,","firstchild;","firstedge;","firstin;","firstout;","flag","flag;","for(","for(i","for(j","for(k","for(l","for(v","free(p);","free(q);","free(s);","free_ssl(staticlinklist","front","front+maxsize。","front;","front；当rear时，队列的长度为rear","f​i​​(key)=(f(key)+d​i​​)","g","g)","g,","g.vexs[i]);","get_next(str","get_next(t,","get_nextval(str","getelem(l,","gethead(q,","gettop","gettop(s,","gettop,","gettop;","getvex(g,","gl","gl)","gl,","graph","graph)。","graph;","graphs)。","graphs）","graph）","g上有三条通道，发现b和d已经遍历过了，所以选择h","h","h,","hash(int","hash(key))","hash(key);","hashsiz","hashsize;","head;","heapadjust(l,","heapadjust(sqlist","heapsort(sqlist","hfstraverse(g)：对图g中进行广度优先遍历，在遍历过程中对每个顶点调用","high","high)","high);","high,","i)","i);","i)：其中p指向树t的某个结点，i为所指结点p的度，操作结果为删除t中p所指结点的第i棵子树。","i++)","i+1n−i+1个记录中选出关键字最小的记录，并和第i","i+1n−i+1个记录中选取关键字最小的记录作为有序序列的第iii个记录。","i,","i;","i\\leqsl","if(","if(!(","if(!s)","if(!visited[i])","if(!visited[p","if((*p)","if((etv[gettop]","if((q","if(0","if(count","if(et","if(i","if(ltv[k]","if(mid","if(q","if(space[0].cur)","if(stackempty(*s))","if(stacknumber==1)","if(stacknumber==1){","if(stacknumber==2)","if(stacknumber==2){","if(t==null)","in;","increment","increment)","increment;","increment]","increment])","index(s,","index(str","index_kmp(str","infin","infti","infty;","initarray(*l):","inithashtable(hasht","initlist(*l):","initlist(staticlinklist","initqueue(&q);","initqueue(*q)：初始化操作，建立一个空队列q。","inits","initstack(*s)：初始化操作，建立一个空栈","inittree(*t)：构造空树t。","inordertraverse(bitre","inordertraverse(t","insert","insertarc(*g,","insertavl(bitre","insertbst(bitre","insertchild(*t,","inserthash(hasht","insertsort(l);","insertsort(sqlist","insertvex(*g,","int","interpolation_search(int","in−i次关键字的比较，从n−i+1n","item","ivex;","i个数据元素，称i","i为数据元素ai","j","j)","j);","j)i≠j)，且在排序前的序列中rir_ir​i​​领先于rjr_jr​j​​（即ijiij）。如果排序后rir_ir​i​​仍领先于rjr_jr​j​​，则称所用的排序方法是稳定的；反之，若可能使得排序后的序列中rjr_jr​j​​领先于rir_ir​i​​，则称所用的排序方法是不稳定的。","j++)","j,","j;","j=1\\\\","j\\leqslant","jvex;","j的值可以通过下面这个数学模型进行推导：","k","k)","k);","k++)","k++;","k+1}","k+1}...p_{j","k,","k1k_1k​1​​，k2k_2k​2​​，...，knk_nk​n​​","k;","k\\leqslant","k\\}\\neq","k_{p_2}\\leqslantk​p​1​​​​⩽k​p​2​​​​⩽","k_{p_n}⩽k​p​n​​​​非递减（或非递增）关系，即使得序列成为一个按关键字有序的序列{","key","key)","key);","key)：可以识别多个数据元素（或记录）的关键字，称为次关键字","key)：若一个关键字可以唯一地标志一个记录，则称此关键字为主关键字","key+b","key,","key;","key_2key​1​​≠key​2​​，但是却有f(key1)=f(key2)f(key_1)=f(key_2)f(key​1​​)=f(key​2​​)，这种现象我们称为冲突（collision），并把key1key_1key​1​​和key2key_2key​2​​称为这个散列函数的同义词（synonym）。","key−a[low]a[high]−a[low]","kmp模式匹配算法","kmp模式匹配算法的改进","k|(1next[j]=​⎩​⎪​⎨​⎪​⎧​​​0​max{k∣(1kj)&&(p​1​​...p​k−1​​=p​j−k+1​​...p​j−1​​)}​1​​​j=1​{k}≠∅​others​​","k⩽log[m2](n+12)+1","k⩽log​[​2​​m​​]​​(​2​​n+1​​)+1","l","l(j).data","l,","l;","l_rotate(&(*t)","l_rotate(bitre","l_rotate(t);","last;","lchild;","leftbalance(bitre","leftbalance(t);","leftchild(t,","len)：串s存在，1⩽pos⩽strlength(s)1\\leqsl","len)：串s存在，1⩽pos⩽strlength(s)−len+11\\leqsl","len+11⩽pos⩽strlength(s)−len+1。从串s中删除第pos个字符起长度为len的子串。","len\\leqsl","length","length)","length:","length;","level;","lflag;","lh","lh:","lh;","lifo结构：即后进先出的结构（last","linkqueue;","linkstack;","linkstackptr","list","listdelete(*l,","listdelete(staticlinklist","listempty(l):","listinsert(*l,","listinsert(staticlinklist","listlength(l)","listlength(l))","listlength(l):","list）。","locateelem(l,","locatevex(g,","log_{[{m\\ov","low","low)","low);","low,","low;","lowcost[0]","lowcost[maxvex];","lr","lr;","lte","lte)","lte;","ltv","ltv[i]","ltv[k]","m","m)","m);","m,","m/2)(q⩽m/2)，这种方法称为二次探测法，这种方法的目的是为了不让关键字都聚集在某一块区域。","m;","m[m/2]⩽k⩽m。","m[m/2]⩽k⩽m，其中[m/2][m/2][m/2]表示不小于m/2m/2m/2的最小整数。每一个叶子结点nnn都有k−1k","main()","malloc_ssl(l);","malloc_ssl(staticlinklist","matrix）存储方式是用两个数组来表示图。一个一维数组存储图中顶点信息，一个二维数组（称为邻接矩阵）存储图中的边或弧的信息。","max\\{","max_length_insert_sort","max_length_insert_sort)","maxarc","maxedg","maxsiz","maxsize)","maxsize。","maxvex","merge(int","merge(tr2,","mergepass(int","mergepass(l","mergepass(tr,","mergesort(sqlist","mergesort2(sqlist","mf_i(key)=(f(key)+d_i)\\","mf_i(key)=(f(key)+random(i))\\","mf​i​​(key)=(f(key)+d​i​​)","mf​i​​(key)=(f(key)+random(i))","mid","mid,","mid;","mid=","mid=low+high2=low+12(high−low)","mid=low+key−a[low]a[high]−a[low](high−low)","mid=low+{key","mid=low+​a[high]−a[low]​​key−a[low]​​(high−low)","mid=​2​​low+high​​=low+​2​​1​​(high−low)","min","min(m,","min)","min);","min,","min;","minispantree_kruskal(mgraph","minispantree_prim(mgraph","msort(int","msort(l","msort(sr,","multialgraph","multialgraph;","m，其中di=12d_i=1^2d​i​​=1​2​​，−12","m，这种方法称之为随机探测法。","n(n","n(n\\geqslant0)","n(n⩾0)","n)","n)i","n)i(1⩽i⩽n)有：","n)i(1⩽i⩽n)的结点与同样深度的满二叉树中编号为iii的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。","n)k⩽min(m,n)，使得ai=bia_i=b_ia​i​​=b​i​​","n)o(logn)。","n)o(nlogn)。","n)o(nlogn)，其空间复杂度为o(logn)o(log","n,","n1⩽j⩽n，i≠j)i\\neq","n;","n=0","n=0n=0n=0时称为空树。在任意一棵非空树中：","n=0时，称为空表","n=1","n>1","n\\leqslant","n]+1[log​2​​n]+1","n]+1[log​2​​n]+1层，每层从左到右），对任意节点i(1⩽i⩽n)i(1\\leqsl","n]+1[log​2​​n]+1）的结点按层序编号（从第1层到第[log2n]+1[log_2","network)。","network）。","next);","next[1]","next[255];","next[j]=\\begin{cases}","next[j]={0j=1max{k∣(1kj)&&(p1...pk−1=pj−k+1...pj−1)}{k}≠∅1oth","nextadjvex(g,","nextval[1]","nk​i​​=k​j​​(1⩽i⩽n，1⩽j⩽n1\\leqsl","nmnnm，且ai=bia_i=b_ia​i​​=b​i​​","nn×n的方阵，当任意两个顶点之间的边或弧属于图的边集，则将该阵点设置为1，否则设置为0，即形成一个由0和1组成的矩阵。","node","node*","node;","nodes[maxsize];","null)","null,","null;","nullkey","nullkey)","nullkey;","numedges;","numnodes;","numvertexes)","numvertexes,","numvertexes;","n个结点(ai","o(1)o(1)o(1)","o(logn)o(logn)o(logn)~o(n)o(n)o(n)","o(n)o(n)o(n)","o(n2)o(n^2)o(n​2​​)","o(n3/2)o(n^{3/2})o(n​3/2​​)","o(nlogn)o(nlogn)o(nlogn)","o(nlogn)o(nlogn)o(nlogn)~o(n2)o(n^2)o(n​2​​)","ok;","oper","order;","orthlist","orthlist;","out）","out，先进先出","p","p);","p,","p1...pk−1p_1...p_{k","p;","p=","p=[011111111012222222112444444444344666222345333444445777333337677666665678777777778]","p=\\left[","p=q","p=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​0​1​4​2​4​3​6​7​​​​1​1​1​4​2​4​3​6​7​​​1​2​2​4​2​4​3​6​7​​​1​2​4​3​3​4​3​6​7​​​1​2​4​4​4​4​3​6​7​​​1​2​4​4​5​5​7​5​7​​​1​2​4​6​3​7​6​6​7​​​1​2​4​6​3​7​7​7​7​​​1​2​4​6​3​7​7​8​8​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","p[k][w];","p^{","parc","parent(t,","parent;","parent[f];","parent[maxvex];","partition(l,","partition(sqlist","patharc","patharc[maxvex];","patharc[maxvex][maxvex];","pivot","pivot;","pivotkey","pivotkey)","pivotkey;","pnode","pnode;","po","pop(*s,","pop(linkstack","pop(sqdoublestack","pop(sqstack","pos)","pos)：串s和t存在，t是非空串，1⩽pos⩽strlength(s)1\\leqsl","pos+10⩽len⩽strlength(s)−pos+1，用sub返回串s的第pos个字符起长度为len的子串。","pos,","pos;","pos\\leqsl","posit","position;","postordertraverse(bitre","postordertraverse(t","preordertraverse(bitre","preordertraverse(t","printf(\"","printf(\"%c","printf(\"%c\",t","printf(\"%d","printf(\"\\n\");","printf(\"各顶点间最短路径如下:\\n\");","printf(\"输入边(vi,","printf(\"输入顶点数和边数：\\n\");","ptrarc","ptrbitree;","ptredg","push(*s,","push(linkstack","push(sqdoublestack","push(sqstack","putvex(g,","p​−1​​=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​0​0​0​0​0​0​0​​​​1​1​1​1​1​1​1​1​​​2​2​2​2​2​2​2​2​​​3​3​3​3​3​3​3​3​​​4​4​4​4​4​4​4​4​​​5​5​5​5​5​5​5​5​​​6​6​6​6​6​6​6​6​​​7​7​7​7​7​7​7​7​​​8​8​8​8​8​8​8​8​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​","p−1=[012345678012345678012345678012345678012345678012345678012345678012345678]","q","q,","q;","q^2−q​2​​(q⩽m/2)(q\\leqslant","qelemtyp","qsort(l,","qsort(sqlist","qsort1(l,","qsort1(sqlist","qsort2(sqlist","queue","queue;","queueempty(q)：若队列q为空，返回true，否则返回false。","queuelength(q)：返回队列q的元素个数。","queueptr","quicksort(sqlist","r","r,","r1r_1r​1​​，r2r_2r​2​​，...，rnr_nr​n​​","r;","r[high]","r[i","r[j","r[j]","r[j];","r[low]","r[maxsiz","r_rotate(&(*t)","r_rotate(bitre","r_rotate(t);","rbrother;","rear","rear;","rear（此处的+1指一个逻辑循环数组的下一个元素，若front为数组最后一个元素，则front+1为数组第一个元素）。","rear，队列满时front","replace(s,","return","return;","rflag;","rh","rh:","rh;","rightbalance(bitre","rightbalance(t);","rightsibling(t,","rl","rl;","root(t)：返回t的根节点。","root;","rp1r_{p_1}r​p​1​​​​，rp2r_{p_2}r​p​2​​​​，...，rpnr_{p_n}r​p​n​​​​","s","s)：串s存在，由串s复制得串t。","s,","s1,","s2)：用t返回由s1和s2联接而成的新串。","s;","s=(queueptr)malloc(sizeof(qnode));","scanf(\"%d,","scanf(&g","search","search)也叫折半查找，它的前提是线性表中需要用于查找的关键码有序（通常从小到大有序），线性表必须采用顺序存储。折半查找的基本思想是：在有序表中，取中间记录作为比较对象，若给定值与中间记录的关键字相等，则查找成功；若给定值小于中间记录的关键字，则在中间记录的左半区继续查找；若给定值大于中间记录的关键字，则在中间记录的右半区继续查找。不断重复上述过程，直到查找成功，或所有查找区域无记录，查找失败为止。","search)又叫线性查找，是最基本的查找技术，它的查找过程是：从表中第一个（或最后一个）记录开始，逐个进行记录的关键字和给定值比较，若某个记录的关键字和给定值相等，则查找成功，找到所查的记录；如果直到最后一个（或第一个）记录，其关键字和给定值比较都不等时，则表中没有所查的记录，查找不成功。","search)是根据要查找的关键字key与查找表中最大最小记录的关键字比较后的查找方法，其核心就在于插值的计算公式：","search)，也有称为深度优先搜索，简称为df","search)，又称为广度优先搜索，简称bfs。","search)，是利用黄金分割原理来实现的一种类似于二分查找的查找方式","searchbst(bitre","searchbst(t","searchhash(hasht","select","selectsort(sqlist","selemtyp","seqlist;","sequential_search(int","sequential_search2(int","shellsort(sqlist","shortestpath_dijkstra(mgraph","shortestpath_floyd(mgraph","shortpatht","shortpathtable[maxvex];","shortpathtable[maxvex][maxvex];","sizeof(int));","sort","sort)就是利用归并的思想实现的排序方法。","sort)就是通过n−in","sort)是一种交换排序，它的基本思想是：两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。","sort)是先将序列变成基本有序的序列，即小的关键字基本在前面，大的基本在后面，不大不小的基本在中间。","sort)的基本思想是：通过一趟排序将待排记录分割成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，则可分别对这两部分记录继续进行排序，已达到整个序列有序的目的。","sort)的基本操作是将一个记录插入到已经排好序的有序表中，从而得到一个新的、记录新增1的有序表。","space)","space,","space[0].cur","space[0].cur;","space[i].cur;","space[k].cur","span","sqbitree;","sqdulstack;","sqstack;","sr[],","sr[s];","stack","stack2","stack2[++top2]","stack2[top2","stack[++top]","stack[top","stackempty(s)：若栈为空，返回true，否则返回fals","stacklength(s)：返回栈s的元素个数","stacknumber)","start;","staticlist[maxsize];","statu","status;","strassign(t,","strcompare(s,","strcopy(t,","strdelete(s,","string","stringempty(s)：若串s为空，返回true，否则返回false。","strinsert(s,","strlength(s)","strlength(s)+11⩽pos⩽strlength(s)+1。在串s的第pos个字符之前插入串t。","strlength(s)1⩽pos⩽strlength(s)。若主串s中存在和串t值相同的子串，则返回它在主串s中第pos个字符之后第一次出现的位置，否则返回0。","strlength(s)1⩽pos⩽strlength(s)，且0⩽len⩽strlength(s)−pos+10\\leqsl","strlength(s)：返回串s的元素个数，即串的长度。","struct","substring(sub,","success","success;","swap(l,","swap(sqlist","switch","switch(l","switch(lr","t","t)","t);","t)：串s和t存在，1⩽pos⩽strlength(s)+11\\leqsl","t)：若s>t，返回值>0；若s=t，返回值=0；若s，返回值。","t,","t1t_1t​1​​，","t2t_2t​2​​，","t;","t[0])","t[0];","t\\leqslant","table)是采用散列技术将记录存储在一块连续的存储空间中，这块连续存储空间成为散列表或哈希表。","table)：只作查找操作的查找表，它的主要操作有：","table)：在查找过程中同时插入查找表中不存在的数据元素，或者从查找表中删除已经存在的某个数据元素，它的主要操作有：","table)：由同一类型的数据元素（或记录）构成的集合。","tail;","taller))","taller;","temp","temp,","temp;","time","tnt_nt​n​​","top","top1;","top2","top2;","top;","topologicalsort(gl);","topologicalsort(graphadjlist","tr,","tr1,","tr1[],","tr1[s]","tr2,","tr2[maxsiz","tr[],","tree","tree)。","tree)是一种平衡的多路查找树，2","tree)，其每一个结点的孩子数可以多于两个，且每一个结点处可以存储多个元素。","tree)，又称为二叉查找树。它或者是一棵空树，或者是具有下列性质的二叉树：","tree)，是一种二叉排序树，其中每一个结点的左子树和右子树的高度差至多等于1。","tree;","treedepth(t)：返回树t的深度。","treeempty(t)：若t为空树，返回true，否则返回false。","tree或height","tree）是n(n⩾0)n(n\\geqsl","true;","typedef","u)：若图g中存在顶点u，则返回图中的位置","unsuccess","unsuccess;","v","v)：串s、t和v存在，t是非空串。用v替换主串s中出现的所有与t相等的不重叠的子串。","v)：删除图g中顶点v及其相关的弧","v)：在图g中增添新顶点v","v)：返回图g中顶点v的值","v,","v0","v0,","v0v_0v​0​​)，(v1v_1v​1​​,","v0、v0","v1","v1v_1v​1​​)，(v2v_2v​2​​,","v1不用说，都是没有变化的，而v0","v1；","v2","v2v_2v​2​​),","v2更短，所以更新d−1[v0][v2]d^{","v2比v0","v2；","v3","v3v_3v​3​​)这四个阵点形成的线","v3；","v4","v4；","v6","v6；","v7","v7；","v8","v8的路径，所以我们先看p[v0][v8]p[v0][v8]p[v0][v8]，其值为1，所以第一个需要经过的中转点为v1，此时路径为v0","v8；","v_jv​i​​≠v​j​​，从viv_iv​i​​到vjv_jv​j​​和从vjv_jv​j​​到viv_iv​i​​都存在路径，则称ggg是强连通图","value(t,","value)：将图g中顶点v赋值valu","value)：给树t的结点cur_e赋值为value。","velskii和e.m.landis）。","verlen;","vernums;","vertex","vertex)：即顶点vkv_kv​k​​的最早发生时间","vertex)：即顶点vkv_kv​k​​的最晚发生时间，也就是每个顶点对应的时间最晚需要开始的时间，超出此时间将会延误整个工期。","vertex;","vertex[maxvex]","vertex[maxvex];","vertexnod","vertnums;","verts;","vexlength;","vexs[maxvex];","vi1v_{i_1}v​i​1​​​​,","vim=v′v_{i_m}=v'v​i​m​​​​=v​′​​)，其中任意相邻的两个顶点构成的边都属于无向图ggg的边集。该序列的整体前后顺序可以颠倒。","visited[i]","visited[maxvex];","visited[p","viv_iv​i​​)与其相同","viv_iv​i​​>与其不相同。","vj)上的下标i，","vjv_jv​j​​)与顶点viv_iv​i​​和vjv_jv​j​​相关联。","vjv_jv​j​​)之间的边没有方向，则称这条边为无向边（edge），用无序偶对(viv_iv​i​​,","vjv_jv​j​​)表示，(vjv_jv​j​​,","vjv_jv​j​​)，其依附（incident）于顶点viv_iv​i​​和vjv_jv​j​​，或者说：(viv_iv​i​​,","vjv_jv​j​​>表示。有序偶有方向，\\vjv_jv​j​​,","void","vr)：按照顶点集v和边弧集vr的定义构造图","vv​j​​∈v、vi≠vjv_i\\neq","v′v'v​′​​>和顶点vvv，v′v'v​′​​相关联。","v′v'v​′​​>属于该图的边集，则称顶点vvv邻接到顶点v′v'v​′​​，顶点v′v'v​′​​邻接自顶点vvv。","v′v'v​′​​>，可以说弧\\vvv,","w);","w)：在图g中删除弧\\，若g是无向图，还需要删除对称弧\\","w)：在图g中增添弧\\，若g是无向图，还需要增添对称弧\\","w,","w1w_1w​1​​，","w2w_2w​2​​，","w;","way","weight;","while(","while(!queueempty(q))","while(a[i]","while(incr","while(low","while(n","while(p)","while(top","while(top2","wnw_nw​n​​","x;","y;","{","{1\\over","{a[high]","{key","{k}≠∅\\{","{low+high\\ov","||","}","};","}edgenode;","}graphadjlist,","}hashtable;","}mgraph;","}sqlist;","}vertexnode,","}构成nnn棵二叉树的集合f=f=f=","}，其中每棵二叉树tit_it​i​​中只有一个带权为wiw_iw​i​​的根结点，其左右子树均为空。","}，其相应的关键字分别为{","}，构造一棵有nnn个叶子结点的二叉树，每个叶子结点带权wkw_kw​k​​，每个叶子结点的路径长度为lkl_kl​k​​，则其中带权路径长度wpl最小的二叉树称为哈夫曼树。","}，这样的操作就称为排序。","}，需确定111，222，...，nnn的一种排列p1p_1p​1​​，p2p_2p​2​​，...，pnp_np​n​​，使其相应的关键字满足kp1⩽kp2⩽k_{p_1}\\leqslant","···,","···，","×\\times×","÷\\div÷","​a[high]−a[low]​​key−a[low]​​","​⎣​⎢​⎢​⎡​​​0​1​1​0​​​0​0​1​0​​​0​1​0​0​​​1​0​0​0​​​⎦​⎥​⎥​⎤​​","​⎣​⎢​⎢​⎡​​​0​1​1​1​​​1​0​1​0​​​1​1​0​1​​​1​0​1​0​​​⎦​⎥​⎥​⎤​​","​⎣​⎢​⎢​⎢​⎢​⎡​​​∞​9​2​∞​∞​​​∞​∞​∞​∞​∞​​​∞​3​∞​∞​∞​​​∞​∞​5​∞​∞​​​6​∞​∞​1​∞​​​⎦​⎥​⎥​⎥​⎥​⎤​​","−","−、333","−、333、×\\times×、+++","−、333、×\\times×、+++、101010","−、333、×\\times×、+++、101010、222","−、333、×\\times×、+++、101010、222、÷\\div÷、+++","−，入栈。","−，取出111、333进行运算，结果222入栈。栈：999、222","⩽kpn\\leqslant","《大话数据结构》","《数据结构、算法与应用（c++语言描述）》","《数据结构》","《数据结构与算法分析：c语言描述》","《算法》","《算法导论》","一.","一个2结点包含一个元素和两个孩子（或没有孩子）；","一个3结点包含一大一小两个元素和三个孩子（或没有孩子）。","一个mmm阶的b树具有如下属性：","一个已知的网图如下：","一个指向结点的指针","一个数据元素","一个直接调用自己或通过一系列的调用语句间接地调用自己的函数，称作递归函数。","一个结点","一共25个字符。","一共30个字符","一棵mmm阶的b+树和mmm阶的b树的差异在于：","一种用数组描述的链表","一维数组","三.","上述的kmp算法仍然存在一定缺陷。比如有以下两个字符串：aaaabcde和aaaaax，在子串和主串的指针都移动到5时，二者产生差异，此时按照上述的kmp模式匹配算法，i依旧指向5，j移动到4，然后开始匹配，结果依旧不匹配，j又移动到3。然而由于子串中前5个字符都是a，所以第五个字符与主串的第五个字符不匹配，那么说明子串的前面四个字符也都和主串的第五个字符不匹配，所以按照之前的kmp算法，依然会有一些多余操作存在。","下一个孩子链表的孩子结点","下一个权值最小的边是17，可是此时gf已经间接连通了，所以需要跳过再找下一个","下标","下标j和权w:\\n\");","不包含任何结点或只包含头结点的树","不稳定","不论是在冒泡排序还是最简排序中，其比较的次数每次都是n×(n−1)2n\\time","不过如果图顶点和边非常多，不能在短时间内遍历完成，遍历的目的是为了寻找合适的顶点，那么选择哪种遍历就要仔细斟酌了。","不需要分配存储空间,","与a直接相连的b和f放在第二层","与b、f直接相连的c、i、g、e放在第三层","与无向图的主要区别是，有向图的阵点值将不再对称。","与第一个顶点相关的下一条边的指针","与第二个顶点相关的下一条边的指针","与顶点构成弧的另一个顶点下标","且该数据结构只使用于两个栈数据类型相同的情况","两串相等","两栈共享空间","两栈共享空间一般通过数组的方式实现，即通过两个栈顶指针将一个数组划分为两个顺序栈，其栈底分别在下标为0和下标为maxsiz","中序遍历","串","串(string)","串中元素仅由一个字符组成，相邻元素具有前驱和后继关系。","串的抽象数据类型","串的比较","串的长度：串中的字符数目nnn。","串（string）是由零个或多个字符组成的有限序列，又叫字符串。一般记为s=s=s=\"a1a2a_1a_2a​1​​a​2​​···ana_na​n​​\"","为了方便插入数据，通常会把数组建立得大一些，以便有一些空闲空间可以便于插入时不至于溢出","主关键字(primari","主要操作","主要讨论树的存储方式。","之所以这样替换是因为后者计算出的位置比直接的121\\over","也不会浪费多余的空间","事件的最早发生时间etv(earliest","事件的最晚发生时间ltv(latest","事实上，这方法不仅可以对关键字直接取模，也可在折叠、平方取中后再取模。","二.","二分查找","二分查找(binari","二分查找的原理应该还是很好理解的，唯一需要注意的是整数除法的问题。","二叉排序树","二叉排序树(binari","二叉排序树的插入操作也是构建二叉排序树的基础，其主要方法如下：","二叉树","二叉树中每个结点的右孩子结点都是原树该结点的右兄弟结点","二叉树中每个结点的左孩子结点都是原树的长子结点","二叉树的性质","二叉树的遍历是指从根结点出发，按照某种次序依次访问二叉树中的所有结点，使得每个结点被访问一次且仅被访问一次。","二叉树转化为树","二叉树转化为森林","二叉树（binari","二叉链表不一定按照中序遍历，按照其他方法进行遍历也可以，只要将遍历所得的序列作为标准定义前驱和后继即可。","于是选择权值为19的gh，未连通，所以将其连通，此时所有顶点已连通","五.","介绍冒泡排序之前，先介绍一种最简单的排序算法，其基本思想如下：","从v[0][0]开始一直到v[8][8]为止，以v1为中转点对矩阵进行遍历","从上述可以推导出求队列长度的通用公式：(rear","从删除元素位置开始遍历到最后一个元素位置,","从图中某一顶点出发访遍途中其余顶点，且使每一个顶点仅被访问一次，这一过程就叫做图的遍历(travers","从左到右遍历中缀表达式的每个数字和符号","从左到右遍历后缀表达式的每个数字和符号","从时间复杂的的角度来说：","从最后一个元素开始向前遍历到第i个位置,","从简单选择排序的过程来看，它最大的特点就是交换移动数据的次数相当少，这样也就节约了相应的时间。","从该树中，可以得到新的字符编码：","代码实现","代码：","以下是改进之后的写入next数组的函数：","以根结点为起始点，首先进行查找，看待插值是否已存在，若已存在则跳过插入该值并返回false，若不存在则进行下一步","以此类推","以此类推……","以此类推，最后就能将所有元素按从小到大的顺序排好","以此类推，直到获得叶子结点上的等级然后退出","以相同方法遍历整个矩阵，将所有路径减小的边进行修改","以第一个树为根，将第二棵树的根结点接在第一棵二叉树的右孩子结点处","以该顶点为弧头的入边表","以该顶点为弧尾的出边表","优化不必要的交换","优化小数组时的排序方案","优化选取枢轴","优化递归操作","优点","优点：在插入和删除操作时，只需要修改游标，不需要移动元素，从而改进了在顺序存储结构中插入和删除操作需要移动大量元素的缺点","优点：简单、均匀，且不会产生冲突","伪码描述","但实际情况是，在朴素的模式匹配算法中，包含了许多无用的操作。如abcdefgab和abcdex这个例子，前面五个字符都匹配，直到第六个字符时不匹配。按照朴素的模式匹配算法，主串将从b开始，子串将从a开始，而主串中第一个字符a和后面的字符都不相同，而刚刚前五个字符都已经和主串比较过是相同的，也就是说，子串的第一个字符肯定和主串的第2","但对于数据集非常大，如上亿的数据集，那也就是意味着索引也得有同样的数据集长度规模，对于内存有限的计算机来说，可能就需要反复去访问磁盘，查找性能反而大大下降了。","但是对于比较次数来说，还是一样的n×(n−1)2n\\time","位序：ai","位置类型定义，按满二叉树编号","位置类型，用于指定插入、删除或查询的位置","作为返回","使用头插法将该结点插入与之相关的另一个顶点的边表中","使用头插法将该结点插入与之相关的某个顶点的边表中","使用注意","使用该数据结构时，通常都是当两个栈的空间需求有相反关系时，即一个栈增长时另一个栈在缩短的情况。","使用除留余数法","例：将表达式9+(3−1)×3+10÷29+(3","例：计算后缀表达式：999","保存孩子的位置","保存弧的弧头","保存弧的弧尾","保存当前结点所有信息","保存树的数组","保留一个空位","倒排索引","倒排索引与其他索引表不同的地方是：其他索引表还是通过主关键字来查找记录的位置，而倒排索引是通过次关键字来查找所有有这个次关键字属性的记录。","倒排索引的通用结构是：","倒数第二层，若有叶子结点，一定都在右部连续位置","假设ki=kj(1⩽i⩽nk_i=k_j(1\\leqsl","假设主串s和要匹配的子串t的长度存在s[0]与t[0]中：","假设含有nnn个记录的序列为{","假设有nnn个权值{","假设现在有一个分数a，这个场景可以转换为一个二叉树：","元素个数不受限制,","元素个数：栈1的元素个数即top1+1，栈2的元素个数为maxs","元素个数：若top指示的是下标，则为top+1；若top指示的是元素相对位置，则为top","元素指针","充当无穷大","先依次后根遍历每棵子树，再访问根节点。","先出栈的数字作为运算符的右侧运算对象","先将所有边设置为无穷","先将每一个树转化为二叉树","先访问树的根结点，然后依次先根遍历根的每棵子树","先访问森林中第一棵树的根结点，然后再依次先根遍历根的每棵子树，再依次用同样方式遍历剩余树","先访问森林中第一棵树，后根遍历该树的每棵子树，然后再访问根结点，再依次用同样方式遍历剩余树。","先说结论，可以按照以下结构构造这个树结构：","克鲁斯卡尔(kruskal)算法","兔子对数","入度：以顶点vvv为头的弧的数目称为vvv的入度（indegree），记为id(v)id(v)id(v)。","入边表的链","入队列","入队列：插入元素到队尾","入队操作","公共溢出区法","六.","关键字(key)：数据元素中某个数据项的值","关键字的分布情况","关键字的长度","关键概念","关键码：用于标志一个记录的某个数据项（字段）的关键字","关键路径","关键路径算法","其中,","其中di=1d_i=1d​i​​=1，222，333，...，m−1m","其中前两种删除情况都很简单，但是第三种情况则是导致问题的主要因素。","其中根据矩阵d可以直接找出从某点到某点的最短距离","其中的顶点代表九个村子，现在要将九个村子连通起来，其中的边及权表示村子之间的距离，而没有边及权则表示那两个村子因为有高山或湖泊无法连通，那么如何让九个村子用最少的路程能够连通起来呢？","其中，next[j]是一个数组，下标代表子串的字符位序，其中保存的元素表示当此次匹配在某个位序处失败后，下一次匹配从数组中此位序元素值所显示的位序开始匹配。","其他的操作都与邻接表差不多，主要需要注意的一点是：在添加一条弧时，不仅需要添加为一个结点的出边，也需要添加为一个结点的入边。","其优化方法与十字链表类似，不过有一点点区别。","其具有以下某种性质：","其基本思路是：","其基本方法是将相距某个“增量”的记录组成一个子序列，这样才能保证在子序列内分别进行直接插入排序后得到的结果是基本有序而不是局部有序。","其形式如下:","其操作过程大概如下：","其解决方法就是设置一个标记变量来实现。","其面临的主要问题有两个：","具体的做法一般是将数组第一个元素的值设置为要查找的值，然后从数组尾部开始遍历，然后开始循环，如果数组值与查找值相等时，就返回当前下标。这样做返回的下标有两种可能，一是在遍历中途，查找到了待查值，然后返回下标；二是遍历到数组第一个元素，因为提前设置为了待查值，所以返回下标0。","具有nnn个结点的完全二叉树的深度为[log2n]+1[log_2","内排序与外排序","内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。外排序是由于排序的记录个数太多，不能同时放置在内存中，整个排序过程需要在内外存之间多次交换数据才能进行。","再从中取两个最小权值的结点作为一个新结点n2n_2n​2​​的两个子结点，如下图：","再散列函数法","再然后，如果只有上述两个指针，查找兄弟依然是一个困难的事情。我们可以再给每个结点添加一个右兄弟指针，特殊的，如果没有右兄弟，那么将右兄弟指针设置为","再逐步将ab、af、bi、bg、hd相连","冒泡排序","冒泡排序(bubbl","冒泡排序优化","冒泡排序算法","写作目的","决策","准备","几乎所有的顺序存储结构都有这样的特点，此时我们可以考虑使用链式存储结构来解决。","出度：以顶点vvv为尾的弧的数目称为vvv的出度（outdegree），记为od(v)od(v)od(v)。","出栈、弹栈：即栈的删除操作","出栈操作","出边表的链","出边表链表中每个结点有两个元素，一个数据域用于保存以表头为弧尾的弧的弧头的下标，然后一个指针域作为链连接下一个以表头为弧尾的弧的弧头的结点。","出队列","出队列：删除队头元素","出队操作","分别将他们都向后移动一个位置","分别将它们都向前移动一个位置","分块索引","分块索引需要满足两个条件：","分块索引，即先对数据集进行分块，每一块保存当前块的最大值和块中的数据长度，以及一个指向该块的块首指针。","分支结点/非终端结点：度不为0的结点。除根节点外的分支结点也称作内部节点","分数","分析","分析：经过的月数和兔子的总数可以列出下表：","分类","分类方法","则抛出异常或动态增加容量","则说明第i个结点不存在","刚刚说过了，在出边表中，一条弧对于其表头是出边，对于结点中保存的下标对应的顶点来说是入边，所以每一个顶点的入边表的表头只需要将所有出边是该顶点的所有结点连接起来就行了。","刚才的极端情况是当数据量巨大时，需要查找的值还在表的某一端，仔细思考这个情况就会发现，由于我们现在是在一个有序表里进行查找，那么如果待查值在表的某一端只意味着一件事，那就是这个待查值特别大或特别小，那我们何不直接从这个表的后半部分或者前半部分开始查找呢？再推广到一般情况，我们能否根据待查值的大小来确定我们开始查找的位置呢？这个答案就是插值查找。","创建边结点，并初始化其两个数据域","初始化","初始化j从1开始","初始化一空链表l","初始化后的数组元素如下：","初始化操作,","初始化散列表","删除","删除元素","删除操作","删除线性表l中第i个位置元素,","删除结点为叶子结点","删除结点仅有左子树或右子树","删除结点既有左子树也有右子树。","删除链表l中第i个位置元素,","判断二叉树是否能分成森林：看其根结点有无右孩子，有就是森林，没有就是一棵树","判断从某个顶点到另外一个顶点是否有弧，则按照对应的行和列查找值，若为1，则有弧，为0则无弧。","到了f之后，发现最右边是a，而与a相邻的所有顶点已经遍历完了，此时选择从右数的第二条通道，到了g顶点","前序遍历","前言","加入我们要建立索引的是一个无序表，每个数据元素包含任意项，其中有一个主关键字，假设是一串数字编号。","加线：若某结点的左孩子结点存在，则将这个左孩子结点的右孩子结点，右孩子结点的右孩子结点，右孩子结点的右孩子结点的右孩子结点……，将所有这些结点与该结点连接起来","动态数组","动态查找","动态查找表","动态查找表(dynam","包含状态的数据域","匹配部分","十字链表","十字链表指针","十字链表是对于有向图而言在邻接表的基础上所做的优化，那么无向图需不需要优化呢？","十字链表类型","单链表","单链表的删除标准语句p","单链表的插入标准语句","占比","即一旦发生了冲突，就去寻找下一个空的散列地址，只要散列表足够大，空的散列地址总能找到，并将记录存入。","即为线性表(a1","即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。","即在原来的哈希表结点中添加一个指向哈希值等于该地址的链表头指针，不管是否发生冲突，总之哈希值为多少，就将对应的关键字放到对应地址后的链表中。","即在双向链表的基础上，让第一个结点（可能是头结点）的前指针指向最后一个结点，让最后一个结点的后指针指向第一个结点即可。","即在哈希表之外，再建立一个溢出表，当关键字产生冲突时，就将关键字保存到溢出表，查找时，先通过散列函数计算出散列值在散列表中进行查找，如果没找到，再到溢出表中进行顺序查找。","即将121\\over","即建立一个带头结点的单链表","即根据某一棵树，通过其按照某两种遍历方法得到的遍历顺序推断其原本的结构或推断用另外一种方法对其进行推导的结果。","即用数组存储的二叉树结构。同时数组的下标要能够体现结点之间的逻辑关系，比如双亲与孩子的关系，左右兄弟的关系等。","即直接用关键字来作为地址，先来看两个例子吧：","即队列为空时front","原则","原则：","原本的中间位置更新方法如下：","原理","去线：删除原二叉树中所有结点与其右孩子结点的连线","参考书籍","又因为二叉排序树采用链式结构，所以在插入删除操作上也是很快的。","双亲","双亲指针","双亲表示法","双亲表示法的树类型","双亲表示法的树类型定义","双亲表示法：讨论用数组这种数据结构怎样表示一个树的数据结构。","双亲：若有结点iii，则其双亲结点为i/2i/2i/2","双向循环链表","双向循环链表类型","双向链表","双向链表即在每个结点多增设一个结点，用于指向前一个结点。","双向链表类型","取两个最小权值的结点作为一个新结点n1n_1n​1​​的两个子结点，较小的是左孩子，如下图：","取出删除元素","另外对数组的第一个和最后一个元素作为特殊元素处理，不存数据。通常把未被使用的数组元素称为备用链表。而数组第一个元素，即下标为0的元素的cur就存放备用链表的第一个结点的下标，并充当null指针，让已使用的数组元素的最后一个元素的cur设置为0。而数组的最后一个元素的cur则存放第一个有数值的元素的下标，相当于单链表中的头节点的作用，当整个链表为空时，则为0。","另外，对于排序而言，最常用的操作是数组两个元素的交换，所以先定义一个交换数据的函数：","另外，归并排序的空间复杂度为o(n+logn)o(n+logn)o(n+logn).","只包含每一种数据结构的引入和介绍，然后按照自己的理解写出结构代码，最后将每种数据结构的基础操作集中比较困难的操作进行总结。在初学时，将对每一种数据结构从结构代码到操作实现进行完整的代码编写。","只有一个根节点","可以使用树中孩子表示法的方法进行存储，即使用数组存储所有的顶点，用多个链表表示与顶点相关的边。","可以快速地存取表中任一位置的元素","可以直接将后四位作为地址，也可以将这四位数字进行一些处理，如反转数字、右环位移、左环位移甚至前两数与后两数叠加等方法，无论什么方法，只要能够合理地将关键字分配到散列表的各位置。","可以看到，针对与静态查找表的所有实现几乎都是以线性表的形式实现的。由于线性表无法完美地实现动态查找表的算法，那自然可以想到还有树和图的实现方法。","可以知道的是：当rear>front和rear时，二者的具体情况是不同的。当rear>front时，队列的长度为rear","可以表示成以下的矩阵：","可以表示成如下的矩阵：","可以让第一个结点的前指针和终端结点的后指针指向null。","可以设置一个头结点，当两个指针都指向头结点时，即为空队列。","可以通过再设立一个尾指针来指向链表的尾端，以此来简化一些操作。","可想而知，这个算法不论什么情况都比较了n×(n−1)2n\\time","右兄弟","右兄弟：若有结点iii，且i+1i+1i+1结点存在，则i+1i+1i+1结点即为该结点的右兄弟结点","右孩子","右孩子：即实际树的右兄弟结点，当二叉树对应的完全二叉树的结点数为nnn时，对于任一结点iii，其右孩子为结点2i+12i+12i+1。当2i+1>n2i+1>n2i+1>n时，则结点iii无右孩子。","右平衡旋转处理","右旋操作","叶子只能出现在最下一层","叶子结点只能出现在最下两层","叶结点/终端结点：度为0的结点","同样结点的二叉树，完全二叉树的深度最小。","同线性表。元素具有相同的类型，相邻元素具有前驱和后继关系","同线性表。元素具有相同的类型，相邻元素具有前驱和后继关系。","后出栈的数字作为运算符的左侧运算对象","后序遍历","后缀表示法是一种不需要括号的运算表达式的书写方法，也叫作逆波兰表示。表达式中所有的符号都是在要运算数字的后面出现。","后缀表达式为：999","后缀表达式的计算","否则,","否则查找成功,","否则返回fals","哈夫曼树","哈夫曼编码","哈夫曼编码即将原有的字符按照出现频率对其进行重排，此时出现越频繁的字符，其编码就越短，成功达到了压缩的目的。","四.","四则运算表达式求值——后缀表示法","回路（环）：第一个顶点和最后一个顶点相同的路径称为回路或环（cycle）。","因此，我们可以将每个结点的孩子结点排列起来，以单链表作存储结构。然后将n个头指针组成一个线性表，采用顺序存储结构，放进一个一维数组中。","图","图(graph)","图(graph)是由顶点的有穷非空集合和顶点之间边的集合组成的，通常表示为g（v，e），其中，g表示一个图，v是图g中顶点的集合，e是图g中边的集合。","图中每个顶点viv_iv​i​​的所有邻接点构成一个线性表，由于邻接点的个数不定，所以用单链表存储，无向图称为顶点viv_iv​i​​的边表，有向图则称为顶点viv_iv​i​​作为弧尾的出边表。","图中顶点用一个一维数组存储，当然，顶点也可以用单链表来存储，不过数组可以较容易地读取顶点信息，更加方便。另外，对于顶点数组中，每个元素还需要存储指向第一个邻接点的指针，以便于查找该顶点的边信息。","图的抽象数据类型","图的特点是一个顶点可能有多条边，所以可能存在的一种情况是沿着某条路径搜索后，有回到原顶点，而有些顶点还没有遍历到。","图的邻接矩阵（adjac","在fff中删除这两棵树，同时将新得到的二叉树加入fff中。","在fff中选取两棵根结点的权值最小的树作为左右子树构造一棵新的二叉树，且置新的二叉树的根结点的权值为其左右子树上根结点的权值之和。","在一个典型的b树应用中，要处理的硬盘数据量很大，因此无法一次全部装入内存，所以我们对b树进行调整，使得b树的阶数（或结点的元素）与硬盘存储的页面大小相匹配。比如说一棵b树的阶为1001（即1个结点包含1000个关键字），高度为2，它就可以存储超过10亿个关键字，我们只要让根结点持久地保留在内存中，那么在这棵树上，寻找某一个关键字至多需要两次硬盘的读取即可。","在一个表示工程的带权有向图中，用顶点表示事件，用有向边表示活动，用边上的权值表示活动的持续时间，这种有向图的边表示活动的网，我们称之为aoe网(act","在一个表示工程的有向图中，用顶点表示活动，用弧表示活动之间的优先关系，这样的有向图为顶点表示活动的网，我们称为aov网（act","在一棵二叉树中，除了叶结点之外，所有结点都存在左子树和右子树，并且所有的叶结点都在同一层上，这样的二叉树称为满二叉树。","在上述的图结构中，要判断70分以上的等级都需要经过3次以上的判断才可以得到结果，这显然不合理。","在二叉树的第iii层至多有2i−12^{i","在分块索引表中查找要查关键字所在的块。由于分块索引表是块间有序的，因此很容易利用二分、插值等算法得到结果。","在分块索引表中查找，就是分以下两步进行：","在初步的推导中，主串指针i是不需要回退的，所以我们直接考虑每一次模式匹配，j需要怎么进行回溯。","在前人们解决问题的过程中，我想算法是比数据结构更早出现的，而数据结构则是为了支撑该算法而出现的数据组织和存储的方式。而到了现在，数据结构已然成为了算法的基础，每一种数据结构都有其完整的操作集，某些操作则需要应用到一些算法。","在单链表的基础上将链表的终端结点的指针由空指针改为指向头节点。","在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多","在图的定义和术语中，曾经提到过，一个连通图的生成树是一个极小的连通子图，同含有图中全部的顶点，但只有足以构成一棵树的n","在实际的学习过程中，学生的成绩一般如下分布：","在平均情况下，快速排序的时间复杂度为o(nlogn)o(nlog","在新的分类中，我不想再纠结于每种数据结构有哪些算法，所有这些属于某个数据结构的基础操作集的算法，都将被我归类于数据结构的操作，某些不太典型但需要注意的操作将在对应的数据结构部分进行介绍，而那些比较典型的操作则将被我同时归类到数据结构与算法的部分。","在有冲突的数据很少的情况下，公共溢出区的结构对查找性能来说还是非常高的。","在朴素的模式匹配算法中，每一次开始匹配，都会将i退回到上一次循环的后一个位置，j被退回到第一个字符的位置。","在系统中生成一个空结点","在线性表l中查找与给定值e相等的元素,","在线性表l中的第i个位置插入新元素","在较小的顺序表中，该方法对效率没有太大影响，但如果n值以万记时，该方法就能省下上万次操作。","在这个问题里面，需要注意的是对于造一辆汽车来说，造一个发动机是决定最短时间的关键过程，因此，如果我们要对一个流程图获得最短时间，就必须要分析它们的拓扑关系，并且找到当中最关键的流程，这个流程的时间就是最短时间。","在这些活动之间，通常会受到一定的条件约束，如其中某些活动必须在另一些活动完成之后才能开始。就像电影制作不可能在人员到位进驻场地时，导演还没有找到，也不可能在拍摄过程中，场地都没有。","在通过哈希函数求关键字的哈希值的时候，经常会遇到两个关键字key1≠key2key_1\\neq","在邻接表中可以很好地实现无向图，但是对于有向图，就只能特化地实现存储出边表或入边表，想要根据一个邻接表同时方便的查找一个顶点的出边和入边也可以实现，即按照我实现的邻接表一样，在每个顶点结点中设置两条链表，一条出边表，一条入边表。但是其缺陷也是明显的，因为在出边表中，存储了所有以该表头为顶点的出边，每一条边涉及到两个对象，一个弧头，一个弧尾，很明显，对于某个结点的出边也是其对应的另一个结点的入边，可是在邻接表的实现中，每个顶点都设立了两个链表来分别存储，很显然这是很浪费空间的。","在邻接表中，无向图的每一条边都保存在两个结点的边表中，浪费空间是其一，其二是添加时需要新建两个结点，删除时需要在两个顶点的链表中进行查找。","在链表l中查找与给定值e相等的元素,","在链表l中的第i个位置插入新元素","在链表的第一个结点前附设的一个结点","在顺序表查找算法中，每一次迭代都会进行判断当前循环控制变量是否越界，这个操作看似是必要的，然而实际上完全可以消除这一步操作。","均为o(1)o(1)o(1)。对于空间性能，顺序栈需要事先确定一个固定的长度，可能会存在空间浪费的问题，但它的优势是存取时定位很方便，而链栈则要求每个元素都有指针域，这同时也增加了一些内存的开销，但对于栈的长度无限制。","块中的记录个数：以便于循环时利用","块内无序：即每一块内的记录不要求有序。如果对块内的记录也要求有序那就需要付出大量时间和空间的代价。","块间有序：即每一块索引的最大值记录要按顺序排列。","基本思想","基本思路","基本方法","基本概念","基础概念","堂兄弟：两个结点的双亲结点在同一层则该两个结点互为堂兄弟","堆","堆建立","堆排序","堆排序对原始记录的排序状态并不敏感，因此它无论是最好、最坏和平均时间复杂度均为o(nlogn)o(nlog","堆排序就是利用堆进行排序的方法。","堆排序的基本思想是（以大顶堆为例）：将堆排序的序列构造成一个大顶堆。此时，整个序列的最大值就是堆顶的根结点。将它移走（其实就是将其与堆数组的末尾元素交换，此时末尾元素就是最大值），然后将剩余的n−1n","堆排序算法","堆调整","声明一个指针p指向链表头结点,","声明一个指针p指向链表第一个结点,","声明一指针p和q","声明一指针p和计数器变量i","声明一指针p指向链表头结点,","处理冲突","处理冲突的方法","处理散列冲突的方法","复杂度分析","多路查找树(b树)","多路查找树(multi","大小比较","头指针","头指针,","头指针:","头指针兼链表","头插法","头结点:","如何在输出堆顶元素后，调整剩余元素称为一个新的堆","如何由一个无序序列构建成一个堆","如何选择哪种散列函数可以通过以下因素来判断：","如果2i+1>n2i+1>n2i+1>n，则结点iii，无右孩子；否则其右孩子是结点2i+12i+12i+1","如果2i>n2i>n2i>n，则结点iii无左孩子（结点iii为叶子结点）；否则其左孩子是结点2i2i2i","如果i=1i=1i=1，则结点iii是二叉树的根，无双亲；如果i>1i>1i>1，则其双亲是结点[i/2][i/2][i/2]","如果关键字是出生年份，假定所有统计的人的出生年份都在1980年之后的话，那么1980年的人数就保存在下标为1980−1980=01980","如果关键字是年龄，假定所有人的年龄都低于150岁的话，那么就用一个容量为150的数组，0岁人数的保存在下标为0的位置，10岁的人数保存在下标为10的人数，以此类推。即f(key)=keyf(key)=keyf(key)=key","如果删除位置不合理,","如果对一棵有nnn个结点的完全二叉树（其深度为[log2n]+1[log_2","如果将二叉链表进行中序遍历，将会得到一个序列，对序列中某个元素而言，紧靠在该元素前的元素称为这个元素的前驱，而紧靠在该元素后的元素称为这个元素的后继。","如果将所有空指针域中指向左孩子的指针指向其前驱；所有空指针域中指向右孩子的指针指向其后继；既是空指针，也没有前驱或者后继的，将该指针设为空。","如果想知道某个顶点的度，就等于这个顶点的边表中结点的个数。对于有向图来说，需要分入度和出度。","如果我们想要减少计算机进行读取操作的次数，那么我们就需要让每个结点不止保存一个元素值。","如果我们有一个根节点的指针，那么我们只要知道每一个结点的所有子树的根节点就可以遍历整个树。","如果所用的二叉树需要经常遍历或查找结点时需要某种遍历序列中的前驱和后继，那么采用线索二叉链表的存储结构就是非常不错的选择。","如果按照以上的方法构建了一个线索二叉树，存在一个问题是：树中的指针域可能指向它的孩子，也可能指向它的前驱后继，如果只凭借两个指针，是无法对其属性进行判断的。","如果按照完整数据传输的方式，即按照对应的二进制字符进行传输，假设对应的二进制编码为：","如果插入位置不合理,","如果有这样一个网图：","如果有这样一种极端情况，一棵深度为kkk的右斜树，它只有kkk个结点，但是所需要分配的存储单元空间却有2k−12^k","如果查找成功,","如果栈的使用过程中元素变化不可预料，有时很小，有时非常大，那么最好是用链栈，反之，如果它的变化在可控范围内，建议使用顺序栈会更好一点。","如果根结点不是叶结点，则其至少有两棵子树。","如果没有冲突，那么散列表查找的性能是非常好的，它的时间复杂度为o(1)o(1)o(1)，但由于冲突的存在，散列表的性能是会受影响的，影响散列表查找性能的主要有以下几个方面：","如果用数组来存储树这种结构，按照树的定义，一般需要能够找到双亲，孩子，以及兄弟。","如果线性表长度大于等于数组长度,","如果结点度为1，则该结点只有左孩子，即不存在只有右子树的情况。","如果要将一串文字\"badcadfeed\"通过网络传输给别人，假设英文字符总共只有以下六个，并且有以下频率关系：","子串在主串中的位置：子串的第一个字符在主串中的序号","子串：串中任意个数的连续字符组成的子序列","子图：假设有两个图，其中一个图的顶点集和边集都完全包含于另一个图，则称该图是另一个图的子图（subgraph）。","字符串","存储数据元素","存储空间初始分配量","存在某个k⩽min(m,n)k\\leqsl","孩子兄弟表示法","孩子兄弟表示法：引入二叉树的表示方法。","孩子指针","孩子表示法","孩子表示法：讨论用单链表如何实现树的数据结构。","它的公式是：","它的左、右子树也分别为二叉排序树。","完全二叉树","完全存满数组","定义","定位类型","实现这种方法边集数组是最好的选择。","对aov网进行拓扑排序的基本思路是：从aov网中选择一个入度为0的顶点输出，然后删除此顶点，并删除以此顶点为尾的弧，继续重复此步骤，直到输出全部顶点或者aov网中不存在入度为0的顶点为止。","对一棵具有nnn个结点的二叉树按层序编号，如果编号为i(1⩽i⩽n)i(1\\leqsl","对于2","对于2结点，其左子树中所有结点都比该2结点中元素小，其右子树中所有结点都比该2结点中元素大。","对于3结点，其左子树中所有结点都比该3结点中较小元素小，其中子树中所有结点都在该3结点中两元素之间，其右子树中所有结点都比该3结点中较大元素大。","对于nnn个关键字的mmm阶b树，最多需要查找的次数是：","对于一个好的散列函数，那么应该有下面两个原则：","对于上图的深度优先遍历过程如下：","对于下图：","对于下面的图：","对于不存在的边或弧，将其权值设置为无穷大。之所以是无穷大，是因为权值既可能取正，也可以取负，也可以取0，所以需要一个相对不可能的数值来代表不存在。","对于两个串不相等时，判定字符串大小的数学定义如下：","对于二分查找，一种优化方法是插值查找，而另一种优化方法则是斐波那契查找，与插值查找相同，斐波那契查找也是改变查找开始的位置以及每次更新的位置。","对于二叉排序树来说，如果其构造足够均匀，那么其效率是很不错的，但是考虑一种极端情况，如果用于构造二叉排序树的序列原本就是有序的话，那么可想而知，由此序列构造出的二叉排序树将是一棵斜树，其查找过程与顺序查找差不多，每次判断就只筛选掉了子树的根结点这一个元素，这当然不是我们希望的。","对于任何一棵树，它的结点的第一个孩子如果存在那么其孩子结点一定是唯一的，如果它的右兄弟存在，那么其右兄弟结点也一定是唯一的。","对于优化后的冒泡排序法，最好的情况是要排序的表本身就是有序的，那么只需要n−1n","对于内排序来说，排序算法的性能主要受三个方面的影响：","对于分块索引的每一个索引项而言，包含三个数据项：","对于动态查找来说，可以考虑二叉排序树来进行查找，对于二叉排序树还可以进行一系列优化。","对于哈夫曼编码，发送方和接收方必须使用同样的哈夫曼编码规则进行编解码才行","对于图来说，从一个顶点到另一个顶点一般不止一条路径，所以就有需求选出两个顶点之间最短的路径。","对于多个关键字的排序，一种解决方法是将这几个关键字按优先顺序排列好，然后组成一个字符串，对其进行字符串比较即可，需要注意的是字符串的位数需要对齐。由于多关键字也可以转换为单关键字进行解决，所以本总结只总结单关键字排序方法。","对于如下的图：","对于存在的边或弧，将该阵点的值设置为对应的权值","对于平均的情况，直接插入排序法的时间复杂度为o(n2)o(n^2)o(n​2​​)。","对于我们的散列表来说，我们可以事先准备多个散列函数，按照顺序使用，若第一个散列函数发生了冲突，则对该关键字使用第二个散列函数，当不再冲突时，就将数据存储即可。","对于数据结构与算法，其实从开始学习以来就一直想进行一个知识框架的梳理与总结，但苦于不知道该如何进行分类，所以久久都没有开始行动，直到现在也都还搞不清楚真正的界限在哪里，毕竟数据结构与算法总是交织在一起，但一直停在这里也不是办法，于是就按暂定的分类进行总结，到后面发现可以完善时再进行完善。暂时的具体思路是，所有的数据结构都归类在数据结构中，建立在数据结构上的算法也归类在数据结构中，然后其余的算法就归类在算法中。","对于数据结构的总结，将只包括基本介绍、代码实现和需要注意的操作的部分，新的分类将按照以下方法进行：","对于无向图形成的邻接矩阵，是一个对称矩阵，对称线为左上到右下的斜线，即(v0v_0v​0​​,","对于无序表来说，对它进行查找只有顺序表查找一种方法，当表长很大时毫无疑问会花费大量的时间。反观有序表，有二分查找、插值查找和斐波那契查找等能够大大减少时间消耗的算法可以优化查找效率。那么，有没有方法可以让无序表也能像有序表那样使用这些好用的算法呢？答案就是索引查找。","对于普通的二叉树而言，每创建一个结点都会有一个指针域，在这个指针域中，并非所有指针都能用上。如果一个结点的指针域只包含左孩子指针和右孩子指针，那么对于一个有n个结点的二叉链表而言，将会存在2n−(n−1)=n+12n","对于最坏的情况，也就是要排序的表是逆序的情况，此时需要比较的次数是：(n+2)(n−1)2(n+2)(n","对于最好的情况，也就是要排序的表本身就是有序的，则一共比较了n−1n","对于有向图来说，如果重点想要知道以顶点为弧头的弧集，可以建立一个以顶点为弧头的逆邻接表。如果二者都很重要，那么可以让数组中每个元素都连接两个链表。","对于比较的次数，不论什么情况都是n×(n−1)2n\\time","对于求顶点之间的最短路径的算法有迪杰斯特拉算法和弗洛伊德算法，二者在适用条件上有些区别。","对于生产过程的一个完整的时间轴，其各个项目的生产时间是固定的，而只要是整段时间都完全在工作的话，那么在每个阶段肯定是有一个过程是在完全工作的，而对于该阶段而言，该过程就是关键路径。","对于网图来说，最短路径，是指两顶点之间经过的边上权值之和最少的路径，并且我们称路径上的第一个顶点是源点，最后一个顶点是终点。","对于网这种图，由于它的边或弧上带有权值，所以需要将这些权值保存下来。其方法就是将原本的邻接矩阵的0,1值用权值代替，具体规则如下：","对于表长较大，且关键字分布比较均匀的查找表来说，插值查找算法的平均性能比二分查找要好得多。但是对于数据极端不均匀的数据，用插值查找未必是很合适的选择。","对于要删除的结点为叶子结点的情况来说，直接简单的将该结点内存释放随后修改其双亲的孩子指针即可。","对于要删除的结点只有左子树或只有右子树的情况来说，若该结点为其双亲结点的左孩子，则将该结点删除之后，将其子树直接接到该结点的双亲的左孩子链上（不管该结点的子树是左子树还是右子树）；若该结点为其双亲节点的右孩子，则将该结点删除之后，将其子树直接接到该结点的双亲的右孩子链上即可。","对于要删除的结点既有左子树又有右子树的情况来说，情况就比较复杂了。","对于这样一种过程，如施工过程、生产流程、软件开发、教学安排等都可以分为若干个“活动”的子工程。","对于静态查找来说，一般用线性表来进行查找，如果是无序表，一般就只能用遍历的方法来实现，如果是有序表，就可以使用二分查找等方法来进行高效的查找。","对于非网图来说，所谓的最短路径就是指两定点之间经过的边数最少的路径，显然研究非网图的最短路径意义并不大；","对任何一棵二叉树t，如果其终端结点数为n0n_0n​0​​，度为2的结点数为n2n_2n​2​​，则n0=n2+1n_0=n_2+1n​0​​=n​2​​+1","对子序列快排","对效率的提升","对比","将p插入到头结点与前一新结点之间","将q结点中的数据赋值给e,","将q赋值给p","将space[0]的cur设置为新的备用链表的第一个元素的下标","将下一结点赋值给q","将散列值作为地址查找值","将数据元素e赋值给","将数组每一个元素的cur设置为下一个数组元素的下标，最后一个数组元素的cur设置为0","将新申请的内存的cur指向原来的待插入元素位序上的值","将欲删除的结点p","将每一层的所有兄弟相连","将每个结点的长子之外的其他孩子结点全部断开","将每次的位移量变成平方：fi(key)=(f(key)+di)","将第一个结点赋值给p","将线性表l中的第i个位置元素值返回给","将线性表清空","将被释放的内存的cur设置为原来的备用链表的第一个元素的下标","将要插入元素填入位置i处","将这六个字符按照权重先构造出相应的哈夫曼树：","将链表l中的第i个位置元素值返回给","将链表清空","将顶点a放置在最顶层","层序遍历","属性","左子树和右子树是有顺序的，次序不能任意颠倒。","左孩子","左孩子：即实际树的长子结点，当二叉树对应的完全二叉树的结点数为nnn时，对于任一结点iii，其左孩子为结点2i2i2i。当2i>n2i>n2i>n时，则结点iii无左孩子。","左平衡旋转处理","左旋操作","已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。","已知后续遍历序列和中序遍历序列，可以唯一确定一棵二叉树。","希尔排序","希尔排序(shell","希尔排序的时间复杂度与“增量”的选取息息相关，大量研究表明当增量序列为dlta[k]=2t−k+1−1","希尔排序相当于直接插入排序的升级，它们同属于插入排序类；堆排序相当于简单选择排序的升级，它们同属于选择排序类。而快速排序其实就是冒泡排序的升级，它们都属于交换排序类。","希尔排序算法","带权路径长度：从该结点到根结点之间的路径长度与结点上权的乘积。","常规迭代方法","平均情况","平方取中法","平衡二叉树(avl树)","平衡二叉树(self","平衡二叉树也叫avl树，主要是根据其发明者名字命名的（g.m.adelson","平衡二叉树是一种高度（深度）平衡的二叉树，二叉树上结点的左子树高度减去右子树高度得到的值称为平衡因子bf(balanc","平衡二叉树构建的基本思想就是在构建二叉排序树的过程中，每当插入一个结点时，先检查是否因为插入而破坏了树的平衡性。若是，则找出最小不平衡子树，在保持二叉排序树特性的前提下，调整最小不平衡子树中各结点之间的连接关系，进行相应的旋转，使之成为新的平衡子树。","并用e返回其值","广度优先更适合在不断扩大遍历范围时找到相对最优解的情况","广度优先遍历","广度优先遍历(breadth","序号：即数组下标，按照完全二叉树的顺序进行编号，如果中间某个序号的元素不存在，则该下标不保存值。","应用：哈夫曼编码","建模：根据上表我们可以写出以下数学模型","建立一个空的线性表l","建立一个空的链表l","开放定址法","引例","引例：如果兔子在出生两个月后，就有繁殖能力，一对兔子每个月能生出一对小兔子来。假设所有兔子都不死，那么一年以后可以繁殖多少对兔子呢？","引入","弗洛伊德(floyd)算法","弗洛伊德算法没有只找到某两个点之间的最短路径，它直接查找出所有点之间的最短路径，其时间复杂度为o(n3)o(n^3)o(n​3​​)","弧头：在上例中，vjv_jv​j​​称为弧头（head）","弧尾：在上例中，viv_iv​i​​称为弧尾（tail）","弧或边指针类型","弧或边类型","弧的数量","弧结点","弧边数","强连通分量：有向图中的极大强连通子图称做有向图的强连通分量","强连通图：在有向图ggg中，如果对于每一对viv_iv​i​​、vj∈vv_j\\in","归并函数","归并排序","归并排序(merg","归并排序是一种比较占用内存，但却效率高且稳定的算法。","归并排序每次需要将记录扫描一遍，耗费o(n)o(n)o(n)时间，一共需要进行排序的次数是[log2n][log_2n][log​2​​n]次，因此总的时间复杂度是o(nlogn)o(nlog","归并排序的原理是：假设初始序列含有nnn个记录，则可以看成是nnn个有序的子序列，每个子序列的长度为1，然后两两归并，得到[n/2][n/2][n/2]个长度为2或1的有序子序列（其中[n/2][n/2][n/2]表示不小于n/2n/2n/2的最小整数；再两两归并，……，如此重复，直至得到一个长度为nnn的有序序列位置，这种排序方法称为2路归并排序。","归并排序算法","归并操作","当j","当key=a[mid]key=a[mid]key=a[mid]时，查找成功。","当key>a[mid]key>a[mid]key>a[mid]时，新范围是第m+1m","当keya[mid]keykeya[mid]时，新范围是第lowlowlow个到第mid−1mid","当n>1n>1n>1时，其余结点可分为m(m>0)m(m>0)m(m>0)个互不相交的有限集：t1t_1t​1​​、t2t_2t​2​​、...、tmt_mt​m​​，其中每一个集合本身又是一棵树，并且称为根的子树(subtree)。","当两个字符串的字符不完全相同时，按照位序依次递增，直到遇到第一个不同的字符为止，字符小的那个字符串较小。","当两个字符串的长度不相同，但是较短的字符串和较长的字符串在都有字符的每个位序上字符都相同，则较短的字符串较小。","当两个字符串的长度以及每个位序上的字符都相等时，两个字符串才相等。","当中缀表达式遍历完后，将栈顶元素依次出栈并输出","当关键字是位数较多的数字，如手机号码时，一般前7位数字是重复概率较高的，所以我们可以选择后4位来得到一个哈希值。","当前元素个数","当前树是一个满二叉树，此时就需要减少该满二叉树的层数，将一些结点合并为3结点。","当前树的结点个数","当前深度的位序","当前结点的状态，1为有值，0为无值","当前顶点个数","当图中顶点之间的边或弧足够多的时候，使用邻接链表可以充分的利用分配的空间，但是如果是这种情况呢：顶点集内元素足够多，但边弧集却只有一两个元素，可以明显地看出这将造成大量的空间浪费。","当当前结点的值与待查值相同时就返回true或者返回查找到的位置","当情况是移动front使得两个指针相等时，flag设置为0；若是移动rear使得两个指针相等时，flag设置为1。","当某个字符串遍历完成之后，退出循环","当然，和前两种表示方法类似，要查找结点的双亲依旧需要设置一个双亲指针。","当然，如果只有每个结点的孩子结点，那么当查询双亲结点时就比较复杂，所以可以在每个头结点中添加一个双亲指针，特殊的，将根节点的双亲指针设置为","当线性表长度变化较大时,","当链表为空时，头节点的指针指向其本身。","当需要查找的数据量不大时，二分查找完全是够用的，但如果需要查找的数据量巨大呢，特别是当需要查找的值还在表的两端时，甚至还不如顺序查找算法，当然这只是极端情况，平均时间复杂度还是比顺序查找低的。","很明显可以看出，这就是一个递归的过程，而对这个构造好的二叉排序树进行中序遍历将会得到一个从小到大有序排列的序列。","很明显，造一个发动机需要的时间最长，在造发动机的这段时间里，已经造好了汽车需要的四个轮子，车底盘，外壳和其他零部件，所以最终花的时间就是：3+0.5+2=5.5天。","循环","循环链表","循环链表类型","循环队列","循环队列的定义","循环队列：即队列的头尾相接的顺序存储结构。当队尾已经存到数组最后一个元素后，下一个元素从数组头部开始存储","快速排序","快速排序(quick","快速排序优化","快速排序算法","思维导图","性能分析","性质","性质：含有nnn个顶点的无向完全图有n×(n−1)2{n\\time","性质：含有nnn个顶点的有向完全图有n×(n−1)n\\time","总的来说，使用归并排序时，尽量考虑非递归方法。","总结","总结以上两个例子，我们可以取关键字的某个线性函数值为散列地址，即：","情况一","情况三","情况二","想法是：只要有一次迭代没有发生元素交换，那么说明数组已经排序完成，不需要再进行后续的比较了","想象一个场景，如果把学生考试的分数转换成对应的等级，加入满分为100分，等级按照十分一个档次，90分以上为a，80分以上为b，70分以上为c，60分以上为d，60分以下为e。","我们可以暂时使用链表来存储，每个结点包括数据域和多个指针域用于指向所有的子树的根结点。该方法的问题是，指针域的个数如何确定？有两种方法，一是将所有结点的指针域的个数设置为树的度，即所有结点的度的最大值。该方法在树中各结点度相差不大时很好用，但是在各结点度相差很大时，就会明显地浪费空间；第二种方法就是在每一个结点设置一个度域，用以保存该结点的度，然后将结点的子域个数设置为度的值，该方法可以有效的减少空间浪费，但是由于每个结点都是不相同的结构，并且还要维护结点的度的数值，在运算上会带来时间上的损耗。","我们是由1和2可以求得3和4，然后再根据ete[k]是否与lte[k]相等来判断aka_ka​k​​是否是关键活动。","我们的外存（如硬盘），是将所有的信息分割成相等大小的页面，每次硬盘读写的都是一个或多个完整的页面，对于一个硬盘来说，一页的长度可能是21~214b。","我们要查找从v0","我们首先进入二叉树的根结点开始查找","或不设置头结点，当两个指针都为null时，即为空队列。","所以a的下一个顶点是b，然后按照同样的原则先后遍历c、d、e、f","所以为了避免这种情况，最好的办法是设置一个访问数组，元素个数与顶点个数相同，在没有被访问的时候将元素设置为0，访问之后将元素设置为1","所以从上面可以看出，如果只想找到某两个点之间的最短路径，且对图的最短路径查找频率并不频繁的情况下，选择迪杰斯特拉算法更适合；如果想找到所有点之间的最短路径，并且对图的最短路径查找频率很频繁的情况下，选择弗洛伊德算法明显更适合。","所以如下来实现：首先在顶点元素中再添加一个指针域作为入边表的头，然后同样连接一个链表，每个结点保存以表头为弧头的所有弧的弧尾的顶点对应的下标。那么怎么将这个入边表链起来呢？可以跟邻接表的实现一样，添加一条新的入边表，但上面说过了浪费空间。","所以我们可以给每一个结点添加两个指针，一个指向孩子结点，一个指向右兄弟结点。每一个结点只包含两个指针，这也就是二叉树。","所以我们需要优化顺序队列的逻辑，于是有了循环队列。","所以通过关键字直接找到其位置的方法不单单只使用哈希函数，而是哈希函数+散列冲突的解决方法。这样我们每拿到一个关键字，就可以直接得到它的位置，对其的查找就快多了。","所删除的元素位于一个2结点的叶子结点上，由于2结点只包含一个元素，删除之后，该结点将不存在，那么其双亲结点将不满足2结点或3结点的定义，所以应该分以下四种情形来处理：","所删除的元素位于一个3结点的叶子结点上，只需要在该结点处删除该元素即可，不会影响到整棵树的其他结点结构。","所删除的元素位于非叶子的分支结点，此时我们需要用该树中序遍历得到的一个序列来找到被删除结点的直接前驱或直接后继，考虑让它们来补位即可。","所在层的序号","所有分支结点包含下列信息数据(nnn，a0a_0a​0​​，k1k_1k​1​​，a1a_1a​1​​，k2k_2k​2​​，a2a_2a​2​​，...，knk_nk​n​​，ana_na​n​​)，其中：ki(i=1k_i(i=1k​i​​(i=1，222，...，n)n)n)为关键字，且kiki+1(i=1k_ik​i​​k​i+1​​(i=1，222，...，n−1)n","所有分支结点可以看成是索引，结点中仅含有其子树中的最大（或最小）关键字。","所有叶子结点都位于同一层次","所有的叶子结点包含全部关键字的信息，及指向含这些关键字记录的指针，叶子结点本身依关键字的大小自小而大顺序链接。","所有结点都只有左子树或右子树的二叉树称为斜树。所有结点都只有左子树的二叉树叫做左斜树；所有结点都只有右子树的二叉树叫做右斜树。","所谓归并，就是先从单个元素进行比较，然后将进行比较的两个元素组成一组，与另外一组元素进行比较，然后又将两组元素组成一组元素，不断像这样进行比较，最终就能得到一个有序","扩展","找连通图的最小生成树，经典的有两种算法，普里姆算法和克鲁斯卡尔算法。","折叠法","折叠法是将关键字先分成几部分，然后将这几部分的数字求和所得的数字再进行抽取，最终所得的数字就作为地址。","抛出异常","抽象数据类型","拓扑排序","拓扑排序主要是为解决一个工程能否顺序进行的问题，但有时我们还需要解决工程完成需要的最短时间问题。比如说，造一辆汽车，我们需要先造各种各样的零件、部件，最终再组装成车。","拓扑排序算法","指向块首数据元素的指针：便于开始对这一块中的记录进行遍历。","指向栈顶结点","指用一段地址连续的存储单元依次存储线性表的数据元素","指针域","按照上述规则构成的二叉链表就是一个线索二叉树。","按照上述过程一直回退到d，发现还有一个i顶点没有被遍历，标记完i之后，再继续回退","按照层序排好的图如下所示：","按照某个原则一直往前走：在没有碰到重复顶点的情况下，始终向右手边走","据表查最短路径","排序","排序一般是对于顺序表结构而言的，假设后续的所有用于排序的结构都如下：","排序方法","排序用到的结构与函数","排序的稳定性","接下来讨论如何找到孩子。如果只有双亲指针那么查找孩子结点就得需要遍历整个结构，所以我们可以再添加一个指向其长子（最左边的孩子）的指针，特殊的，我们将没有孩子的结点的长子域设置为","接着查看分离后的右子树，按照上述的方法将其右子树断开","插值查找","插值查找(interpol","插值查找的基本方法还是二分查找，只是改变了查找的起始位置以及每次更新中间位置的方法。","插入","插入和删除操作时间复杂度小","插入和删除操作需要移动大量元素","插入操作","插入结点","改变的另一个顶点下标","改善这种堆积现象有一些方法：","改进过的求拓扑序列的算法","散列函数","散列函数(hash)，也叫哈希函数，即散列技术定义中所说的那个对应关系。","散列函数是否均匀","散列函数构造方法","散列地址分布均匀：尽可能让散列地址均匀分布也可以降低冲突的概率，并且可以保证存储空间的有效利用。","散列技术既是一种存储方法，也是一种查找方法，它与线性表、树、图等结构不同的是，散列技术的记录之间不存在什么逻辑关系，它只与关键字有关联，因此散列主要是面向查找的存储结构。","散列技术是在记录的存储位置和它的关键字之间建立一个确定的对应关系fff，使得每个关键字keykeykey对应一个存储位置f(key)f(key)f(key)。","散列技术最适合的求解问题是查找与给定值相等的记录。对于查找来说，简化了比较过程，效率就会大大提高。但散列技术不具备很多常规数据结构的能力。一般只能通过主关键字来进行查找。","散列表","散列表(hash","散列表(哈希表)查找","散列表中关键字地址的特点是与关键字内容直接相关，只要关键字不同，则其通过哈希函数求得的哈希值一般也不同，而只要有这个哈希函数，那么我们就可以根据给定的关键字直接找到它在表中的记录，这就是哈希表的用法。","散列表查找","散列表查找即通过建立散列表时使用的散列函数以及处理散列冲突的方法来对需要查询的关键字求散列值，然后直接以散列值为地址直接定位到该位置即可，若不存在则说明该记录不存在。","散列表查找算法","散列表的大小","散列表的查找与散列函数和处理散列冲突的方法直接相关，其过程主要如下：","散列表的装填因子：所谓装填因子(α\\alphaα)，其值等于填入表中的记录个数","散列表表长","散列表长度。装填因子越大，那么产生冲突的可能性就越大，所以如果我们降低装填因子，也就是增大散列表的长度，就能让散列查找的时间复杂度往o(1)o(1)o(1)靠近。","数字101010、222入栈。栈：151515、101010、222","数字101010，输出。","数字111，输出。","数字2，输出。","数字333，入栈。栈：999、222、333","数字333，输出","数字333，输出。","数字999、333、111先入栈。栈(从栈底开始)：999、333、111","数字999，输出。","数字分析法","数学定义","数学模型","数据","数据元素","数据元素之间的关系是一对一的关系","数据元素类型","数据元素类型定义","数据域","数据对象类型","数据类型定义","数据结构","数据项","数据项1类型","数据项2类型","数据项定义","数据项结构","数组","数组(array)","数组,","数组元素的类型","数组元素类型","整表创建","整表删除","斐波那契数列","斐波那契数列的创建不进行表示","斐波那契查找","斐波那契查找(fibonacci","斐波那契查找算法的核心在于：","斜树","方法是再建立两个标志，分别指示两个指针的状态。一般设置为当标志为0时，该指针指向该结点的孩子，为1时指向该结点的前驱或后继。","方法：","旋转方向根据最小不平衡子树的根结点的平衡因子bf的值决定，若为正，则进行右旋，若为负，则进行左旋。","无向图","无向图：0⩽e⩽n(n−1)/20\\leqsl","无向图：与某个顶点相关联的边的数目称为度（degree），记为td(v)td(v)td(v)。","无向图：图中任意两个顶点之间的边都是无向边，则称该图为无向图（undirect","无向图：对于无向图g=(v,{e})g=(v,\\{e\\})g=(v,{e})中从顶点vvv到顶点v′v'v​′​​的路径（path）是一个顶点序列：(v=vi0v=v_{i_0}v=v​i​0​​​​,","无向图：对于无向图，如果两个顶点可以构成的无向边属于该图的边集中，则称这两个顶点互为邻接点（adjacent）。","无向图：对于某边(viv_iv​i​​,","无向图：无向图其值为各顶点度数和的一半，简记为：e=12∑i=1ntd(vi)e=","无向完全图：在无向图中，如果任意两个顶点之间都存在边，则称该图为无向完全图。","无向网图的建立","无向边：图中两个顶点（viv_iv​i​​，","无序树：与有序树相反","无须为表示表中元素之间的逻辑关系而增加额外的存储空间","既然发现了这个问题，那么有没有解决方法呢？答案是肯定的。","时间性能","是限定仅在表尾进行插入和删除操作的线性表","普通树","普里姆(prim)算法","普里姆算法是从任意一个点开始，逐渐完善这个生成树，而克鲁斯卡尔算法是先选出权值最低的边，然后再找出第二小的边，并判断可选还是不可选。","最下层的叶子一定集中在左部连续位置","最后在v6处，选择去第五层最短的路径，即v6","最后按照从顶向下的顺序进行遍历，即：a、b、f、c、i、g、e、d、h","最坏情况","最大关键码：它存储每一块中的最大关键字，这样的好处就是可以使得在它之后的下一块中的最小关键字也能比这一块的最大的关键字要大","最大顶点数","最好情况","最小生成树","最短路径","最简排序法","有nnn棵子树的结点中包含有nnn个关键字","有且仅有一个特定的称为根(root)的结点；","有了这样一个邻接表，再思考这样一个问题，一条弧对于其所关联的两个顶点而言，对弧尾来说是出边，对弧头来说则是入边，刚刚实现的邻接表是一个出边表，其后续跟的每一个结点对于当前链来说是出边，对于出边表中所保存的下标来说都是一条入边，其弧尾即为链表头的顶点。","有向图","有向图某顶点的入度即为该顶点对应的列的数值之和","有向图某顶点的出度即为该顶点对应的行的数值之和","有向图：0⩽e⩽n(n−1)0\\leqsl","有向图：e=∑i=1nid(vi)=∑i=1nod(vi)e=\\sum_{i=1}^nid(v_i)=\\sum_{i=1}^nod(v_i)e=∑​i=1​n​​id(v​i​​)=∑​i=1​n​​od(v​i​​)","有向图：如果ggg是有向图，那么顶点vvv到v′v'v​′​​的路径仍然类似于上述的顶点序列，但是该序列的整体前后顺序不能颠倒，且任意前后相邻的两个顶点构成的弧都属于有向图ggg的边集，注意这两个顶点在序列中排在前的作为弧尾，排在后的作为弧头。","有向图：如果图中任意两个顶点之间的边都是有向边，则称该图为有向图（direct","有向图：对于弧\\vvv,","有向图：对于有向图，如果两个顶点vvv和v′v'v​′​​构成的一条弧\\vvv,","有向图：顶点vvv的度为：td(v)=id(v)+od(v)td(v)=id(v)+od(v)td(v)=id(v)+od(v)。","有向完全图：在有向图中，如果任意两个顶点之间都存在方向相反的两条弧，则称该图为有向完全图。","有向树：如果一个有向图恰有一个顶点的入度为0，其余顶点的入度均为1，则是一个有向树","有向边：若从顶点viv_iv​i​​到vjv_jv​j​​的边有方向，则称这条边为有向边，也称为弧（arc），用有序偶\\viv_iv​i​​,","有序树：如果能将树中结点的各子树看成从左至右是有次序的，不能互换的，则称该树为有序树","有序表查找","有序表查找是针对有序表进行的查找操作，对于有序表，与无序表不同，它有很多优秀的算法可以进行查找操作，如二分查找，插值查找和斐波那契查找等等。","本方法的关键在于选择合适的ppp，ppp如果选得不好，就可能产生同义词。","朴素的模式匹配算法","权","权：有些图的边或弧具有与它相关的数字，这种与图的边或弧相关的数叫做权（weight）","条件","构建平衡二叉树","构造","构造一棵二叉排序树的目的并非为了排序，而是为了提高查找和插入删除关键字的速度。","构造哈希表","构造方法","构造时会有两个结果，如果此网的全部顶点都被输出，则说明它是不存在环的aov网；如果输出顶点数少了，则说明这个网存在环，不是aov网。","构造线索二叉树","构造连通图的最小代价生成树称为最小生成树(minimum","查找","查找就是根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。","查找并删除","查找操作","查找操作的时间复杂度高","查找时删除数据元素","查找时插入数据元素","查找表(search","查询某个“特定的”数据元素是否在查找表中。","栈","栈(stack)","栈(从栈底开始)：空","栈底：与栈顶相对的另一端称为栈底（bottom）","栈底：数组下标为0的一端","栈满：当top1+1=top2时，栈满","栈满：若top指示的是下标，则为maxs","栈的应用","栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题核心。","栈的抽象数据类型","栈的长度","栈顶：允许插入和删除的一端称为栈顶（top）","栈顶：栈顶元素所在的一端","栈：+++","栈：+++、(((","栈：+++、(((、−","栈：+++、×\\times×","栈：+++、÷\\div÷","栈：空","树","树(tree)","树(tree)是n(n⩾0)n(n\\geqsl","树、森林和二叉树的转化","树与森林的遍历","树内各结点的度的最大值","树是由一个根节点和若干棵子树构成的。树中结点具有相同数据类型及层次关系。","树最顶端的结点","树的带权路径长度：树中所有叶子结点的带权路径长度之和","树的度","树的总结点个数，包括未被使用的结点","树的深度/高度：树中结点的最大层次","树的结点包含一个数据元素及若干指向其子树的分支。","树的路径长度：从树根到每一结点的路径长度之和","树的遍历","树类型","树类型定义","树转化为二叉树","根据上述特点，可以总结出以下五种二叉树的形态：","根据哈希函数得到散列值","根据块首指针找到相应的块，并在块中顺序查找关键码。","根据子串内容写入next数组","根据矩阵p可以找出从某点到某点的最短路径","根据经验：若散列表表长为mmm，通常ppp为小于或等于表长（最好接近mmm）的最小质数或不包含小于20质因子的合数","根据给定的nnn个权值{","根据邻接矩阵中的阵点值即可知道任意两顶点之间是否有边","根结点判断：a","根结点只有右子树","根结点只有左子树","根结点既有左子树又有右子树","根结点的位置","根节点","案例","检索某个“特定的”数据元素和各种属性。","森林的遍历","森林转化为二叉树","森林：是m(m⩾0)m(m\\geqslant","概念","概念实现","模拟free函数","模拟malloc函数","次关键字(secondari","次关键码","此方法的好处是，对于可能会造成很多冲突的散列函数来说，提供了绝不会出现找不到地址的保障，但是也带来了查找时需要遍历单链表的性能损耗。","此时ab已连通，所以再看与两个顶点a和b相连的所有边：bc、bi、bg和af，选择权值更小的af","此时与它相关的两条边分别是ab和af，选择权值更小的ab","此时会造成大量的空间浪费。","此时已得到该最短路径，可以看到该路径与用迪杰斯特拉算法得到的相同。","此时端点为b和f，则看与b和f相连的所有边，以此类推，直到所有顶点都连通时结束。","此时需要传输的数据为：","每一个元素有且只有一个直接前驱元素,","每一个元素有且只有一个直接后继元素.","每一个非根的分支结点都有k−1k","每一种算法都将由一个或多个实例引入，然后介绍该算法需要的基本条件（如数据结构等），最后介绍该算法的完整思想并给出核心部分的代码实现，而一些实际的题目将作为额外的部分添加到相应的算法后面。","每个元素的类型均为datatype.","每个结点最多有两棵子树，所以二叉树中不存在度大于2的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。","每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆","每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆","每个递归定义必须至少有一个条件，满足时递归不再进行，即不再引用自身而是返回值退出。","每次迭代都在比较完i和i+1的元素值后停止","求事件的最早发生时间etv的过程，就是我们从头至尾找拓扑序列的过程，因此，在求关键路径之前，需要先调用依次拓扑序列算法的代码来计算etv和拓扑序列列表","求关键路径","求顶点viv_iv​i​​的所有邻接点，即在第iii行中，值为1的元素对应的列就是邻接点","注意","注意1：要是子图","注意2：子图要是连通的","注意3：连通子图含有极大顶点数","注意4：具有极大顶点数的连通子图包含依附于这些顶点的所有边","注意：","注意：已知前序和后序遍历，是不能确定一棵二叉树的。","注意：强连通图不一定每两个顶点之间都有两条方向相反的弧，因为在定义中强调是存在两个点之间的路径即可，如果图中所有顶点之间可以构成单向闭环，那么此时也是强连通图。","注：如果两个点之间没有路径，那么其没有先后顺序要求","活动的最早开工时间ete(earliest","活动的最晚开工时间lte(latest","深度","深度为kkk的二叉树至多有2k−12^k","深度优先更适合目标比较明确，以找到目标为主要目的的情况","深度优先遍历","深度优先遍历(depth","深度优先遍历其实就是一个递归的过程，它从图中某个顶点v出发，访问此顶点，然后从v的未被访问的邻接点出发深度优先遍历图，直至图中所有和v有路径相同的顶点都被访问到。","添加边","满二叉树","然后从头开始每个点遍历，首先以v0为中转点，计算是否有最短路径的变化，其结果为否","然后从第一个元素开始，将第一个与第二个元素进行比较","然后以v1为中转点，计算是否有最短路径的变化","然后以v2为中转点，计算相比于以更新后的两个矩阵是否又有变化，如果有就同上进行修改","然后使用mid=low+f[k−1]−1mid=low+f[k","然后再遍历整个图，更新d−1d^{","然后在v1处，选择去第三层最短的路径，即v1","然后在v4处，选择去第四层最短的路径，即v4","然后将n1n_1n​1​​看成一个整体，其权值为两个子结点权值之和，此时序列为：n115n_115n​1​​15，b15b15b15，d30d30d30，c40c40c40","然后将待插入位序的前一个元素的cur指向现在申请的元素的下标","然后将每个结点到其左子树的分支设置为0，结点到其右子树的分支设置为1，如下图所示：","然后将第三棵树的根结点接在第二棵二叉树的右孩子结点处","然后已然没有未遍历的顶点，于是退回到f","然后我们让这个查找到的值取代列号，即查看p[v1][v8]p[v1][v8]p[v1][v8]，其值为2，所以此时路径为v0","然后找到弧头下标的元素，同样以头插法将该结点插入该入边表。","然后找到弧尾下标的元素，以头插法将该结点插入该出边表。","然后找到第二小的边ic，也并未相连，所以将其相连","然后是指针域：其中一个指针指向依附于某个顶点的下一条边，另一个指针指向依附于另一个顶点的下一条边","然后查看p[v2][v8]p[v2][v8]p[v2][v8]，得到4，此时路径为v0","然后查看p[v3][v8]p[v3][v8]p[v3][v8]，得到6，此时路径为v0","然后查看p[v4][v8]p[v4][v8]p[v4][v8]，得到3，此时路径为v0","然后查看p[v6][v8]p[v6][v8]p[v6][v8]，得到7，此时路径为v0","然后查看p[v7][v8]p[v7][v8]p[v7][v8]，得到8，此时路径为v0","然后比较数组的第二个与第三个元素，进行与上述操作相似的操作，直到比较完并交换完最后一个元素和倒数第二个元素。","然后求出关键路径","然后让i指向第二个元素位置，重复以上步骤即可。","然后让j从数组最后一个元素开始往前遍历，每次比较j和j","然后让变量i站在第二个元素的位置，变量j从第二个元素开始往后遍历整个数组，如上，可以将整个数组第二小的元素交换到第二个位置","然后释放内存。","特殊二叉树","特点","特点：","状态元素类型","现有一个网图如下，求v0到v8的最短路径。","现有下面这个网图，求从v0到v8的最短路径","生成一新结点赋值给p","生成树：一个连通图的生成树是一个极小的连通子图，它含有图中全部的nnn个顶点，但只有足以构成一棵树的n−1n","生成森林：一个有向图的生成森林由若干棵有向树组成，含有图中全部顶点，但只有足以构成若干棵不相交的有向树的弧","用于定位","用循环逐个对比两个位置上的字符是否相等，若相等则将两个变量加1，若不相等则将第二个变量退回到第一个字符的位置，第二个变量退回到之前的开始位置的后一个位置，然后继续开始查找","用途","用通俗的话说，就是两个关键字相同的记录，在排序前是什么位序关系，排序后也不会改变这个位序关系，这就是稳定的排序方法，而只要有可能改变这个位序关系，那么就是不稳定的。","用随机函数得到每次的位移量：fi(key)=(f(key)+random(i))","由于图是由顶点和边或弧两部分组成。合在一起比较困难，很容易想到使用两个结构来分别存储。","由于它们几乎都是由线性表来实现的，如果是顺序表，由于它不要求顺序，所以它的插入删除操作都还好，但是它的查找性能一般；而对于有序表和索引表，由于其有序的特点，所以在插入时就涉及到大块数据的移动，如果是链表还好，但链表又会影响查找算法的实现。","由于对栈的操作总是对栈顶元素的操作，所以为了方便起见，我们需要在栈顶设置一个栈顶指针，而更好的办法是：把头指针作为栈顶指针，具体结构定义如下：","由于归并排序使用了递归，它就会造成时间和空间上的性能损耗，如果通过非递归方法来实现归并排序的话，性能上还会进一步提高。","由于有向图的弧是有方向的，所以定义邻接矩阵的行数为弧尾，列数为弧头。","由于计算机在进行运算之前需要不断地从外存将数据读入到内存中，如果我们保持一个结点只保存一个元素值，那么整个树的规模就会非常大，那么计算机进行读取操作的次数也会相应地变多。","直到退回到a，此时所有顶点已经遍历完成","直接前驱元素：如ai−1","直接后继元素：如ai+1","直接定址法","直接插入排序","直接插入排序(straight","直接插入排序算法","直接插入排序算法的基本思想是：设置一个辅助空间，然后借助这个辅助空间来进行移位。","相关联","相当于链表的结点","相当于链表的链","相比于前面的最简排序法来说，冒泡排序从它的正向比较变成了逆向比较，其基本思路如下：","移动元素到枢轴","稀疏图：有很少条边或弧的图称为稀疏图","稠密图：与稀疏图相反的称为稠密图","稠密索引","稠密索引是指在线性索引中，将数据集中的每个记录对应一个索引项，其中索引项一定是按照关键码有序排列的。","稳定","稳定性","空串：零个字符的串","空二叉树","空栈：不含任何数据元素的栈称为空栈","空栈：栈1的top为","空栈：若top指示的是下标，则为","空树","空表：当n=0","空队列","符号(((，入栈。","符号)))，栈顶元素依次出栈并输出，直到遇到(((","符号+++，优先级低于×\\times×，输出×\\times×；优先级不高于+++，输出+++；入栈","符号+++，入栈。","符号+++，取出555、151515进行运算，结果202020入栈。栈：202020","符号+++，取出666、999进行运算，结果151515入栈。栈：151515","符号×\\times×，入栈","符号×\\times×，取出333、222进行运算，结果6入栈。栈：999、666","符号÷\\div÷，入栈。","符号÷\\div÷，取出222、101010进行运算，结果555入栈。栈：151515、555","符号−","第一个元素用作哨兵或临时变量","第一种情况是完全将数组存满的情况，那么不论是队列为空还是队列已满，二者的状态都是相同的，即都是两个指针指向同一个元素。","第一种方法如下：由于对于单子树的情况很好解决，所以可以先用单子树的方法来思考这种情况：当删除结点后，将该结点的某个子树按照情况二的方法进行连接，唯一的问题是剩下一棵子树应该怎么接上去，最简单的方法是将这棵子树的所有结点重新插入到二叉排序树中，可是当子树的结点数量过大时，很明显这种方法的效率是很低的。","第二种办法是将队列空和队列满区别开。","第二种方法如下：为了不大幅度移动这两棵子树的相对位置，我们可以找出这两棵子树中删除结点的直接前驱或直接后继，让这个结点来替代被删除的结点，然后将两棵子树接在这个结点上。用于替换的结点如果不是叶子结点和单子树结点，那么就需要按照相同的方法来对这个用于替换的结点进行删除。","简介","简单回路（环）：除了第一个顶点和最后一个顶点之外，其余顶点不重复出现的回路，称为简单回路或简单环","简单图：在图中，若不存在顶点到其自身的边，且同一条边不重复出现，则称这样的图为简单图。","简单来说，就是每次在整个数组（相对）中找到最小的那个元素，然后交换到前面去。","简单路径：序列中顶点不重复出现的路径称为简单路径","简单选择排序","简单选择排序法(simpl","简单选择排序算法","算法","算法代码","算法的复杂性","算法过程","算法：同样使用递归的方法解决，同时改变部分调用顺序","算法：同样用递归的方法解决，其于前序遍历的区别在于递归函数调用的顺序不同","算法：通过递归的方法进行前序遍历","索引就是把一个关键字与它对应的记录相关联的过程，一个索引由若干个索引项构成，每个索引项至少应包含关键字和其对应的记录在存储器中的位置等信息。","索引按照结构可以分为线性索引、树形索引和多级索引，此总结就只介绍线性索引技术。","索引表的建立过程一般是先遍历需要建立索引的无序表，每遇到一条记录，就将该记录的主关键字按顺序保存到索引表中，并将对应的指针指向该记录。","索引项有序意味着，我们要查找关键字时，可以用到二分、插值、斐波那契等有序查找算法，大大提高了效率。","线性索引就是将索引项集合组织为线性结构，也称为索引表。主要包括三种线性索引：稠密索引、分块索引和倒排索引。","线性索引查找","线性表当前长度","线性表的数据对象集合为(a1","线性表的长度：所有线性表元素的个数n(n⩾0)","线性表的长度：所有链表元素的个数n(n⩾0)","线索二叉树","线索二叉树的遍历","终于，在读过《算法》之后，我对数据结构与算法又有了一个新的了解。","终点下标","经过的月数","结点","结点定义","结点所在层号","结点拥有的子树个数称为结点的度","结点指针","结点指针类型","结点数组","结点最大的孩子数目称为b树的阶(order)，即2","结点的个数","结点的兄弟：同一个双亲的孩子","结点的双亲：结点的根","结点的子孙：以该结点为根的子树中的任一结点","结点的孩子：结点的子树的根","结点的层次：从根开始定义起，根为第一层，根的孩子为第二层，以此类推。","结点的度","结点的数量","结点的祖先：从该结点的根到该结点所经分支上的所有结点","结点类型","给存在的边设置权值，并进行对称操作","给定两个串：s=s=s=","给新申请的内存的data赋值","缺点","缺点：没有解决连续存储分配带来的表长难以确定的问题；失去了顺序存储结随机存储的特性","缺点：需要事先直到关键字的分布情况","缺陷","网","网：带权的图通常称为网（network）","而b+树就是解决这个问题的方法。","而从二者实际上能完成的工作来看，顺序串或许在拼接两个字符串以及在字符串中插入另一个字符串等类似操作上有一定的缺陷，但总体的优越性比链式串要好。字符串的特点是一个位置只放一个字符，如果使用链式串一个结点只放一个字符，则会造成很大的空间浪费，这一点可以通过一个结点多放几个字符来解决。","而修改之后的位置更新方法如下：","而到了h之后，发现所有可以遍历的顶点都已经遍历过了，于是选择回退g","而哈希表的建立过程不一定那么顺利，很有可能两个不同的关键字通过同一个哈希函数得到的哈希值是相同的，怎么办，当然不可能将两个值保存到同一个位置，所以我们就通过一些方法需要处理这个叫做散列冲突的问题。","而快速排序的实现，增大了记录的比较和移动的距离，将关键字较大的记录从前面直接移动到后面，关键字较小的记录从后面直接移动到前面，从而减少了比较次数和移动交换次数。","而我们要使用的就是一种树的实现方法。","而拓扑排序，就是对一个有向图构造拓扑序列的过程。","而现在我们需要两个数据域和两个指针域。","而计算关键路径的算法就是关键路径算法。","而边或弧由于是顶点和顶点之间的关系，一维搞不定，所以考虑用一个二维数组来存储。","若其相对顺序不是要求的顺序，则交换哨兵与第二个元素，然后逐个将第二个元素之前的元素往后移（即依次与哨兵交换），直到遇到比要交换的元素更小的元素或者全部元素都已经后移为止，然后再次交换哨兵与该元素交换即可","若到链表末尾p为空,","若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值。","若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值。","若将数组记为","若将链表记为","若待插值小于根结点的值，则进入左子树重复操作2，否则进入右子树重复操作2","若待查值小于当前结点值就进入左子树继续查找，若大于当前结点值就进入右子树继续查找","若成立，则进入其左孩子，即e等级；若不成立，则进入其右孩子，即判断a","若成立，进入其左孩子，即d等级；若不成立，则进入其右孩子，即判断a","若找到则返回true","若插入结点为空，插入一个2结点即可","若插入结点是一个2结点的叶子，则将2结点升级为3结点，然后根据插入元素与原2结点中的元素大小关系进行保存。","若插入结点是一个3结点的叶子，由于3结点本身已经是2","若是优先级不高于栈顶符号的符号，则将栈顶符号出栈并输出，然后与下一个栈顶符号比较","若是优先级高于栈顶符号，将该符号入栈","若是右括号，将栈顶元素依次出栈，直到遇到左括号（左括号需要出栈，两个括号不用写到后缀表达式中）","若是左括号，则进栈","若是数字就输出到后缀表达式中","若是数字，则进栈","若是符号，则判断其与栈顶符号的优先级","若是符号，则将栈顶两个数字出栈进行运算，然后将运算结果进栈","若未找到则根据处理散列冲突的方法继续更新散列值，若找到最后还是未找到，则返回fals","若查找到最后，当前指针指向空时都未找到待查值就返回false或者返回空指针","若根结点为空则在此处插入一个值，否则进行比较","若求顶点的所有邻接点，就对此顶点的边表进行遍历，遍历出的所有下标对应的顶点即为该顶点的所有邻接点；对于有向图来说，需要分弧的方向。","若第一个字符串遍历完成，说明无匹配子串，返回0","若第二个字符串遍历完成，返回此次循环主串开始的位置","若线性表为空,","若能转化为森林，则从根结点开始，若右孩子存在，则断开与右孩子结点的连线。","若要判断顶点viv_iv​i​​和vjv_jv​j​​之间是否存在边，只需要去搜索这两个顶点任意一个顶点的边表中是否存在另一个顶点的下标。对于有向图来说，需要分弧头和弧尾。","若要设计长短不等的编码，则必须是任一自负的编码都不是另一个字符的编码的前缀，这种编码称为前缀编码。","若链表为空,","若队列的最大尺寸为maxsize，那么队列满的条件是：(rear","表达式遍历完成后，将最后的结果数字出栈","表达式：999","表达式：999、333","表达式：999、333、111","表达式：999、333、111、−","表长减1","表长加1","被删除结点的双亲是一个3结点，那么将该3结点拆分为两个2结点，然后其中一个2结点与其子树中的一个2结点合并为3结点，需要注意的是要保持树的顺序。","被删除结点的双亲结点也是2结点，且拥有一个3结点的右孩子，这种情况下，将该2结点删除，然后将其双亲结点为根的这棵子树进行左旋即可。如果删除的是右孩子，其左孩子是一个3结点，则进行右旋。","被删除结点的双亲结点是2结点，其另外一个孩子也是2结点，此时找到一个这另外一个孩子的元素的直接后继，让这个2结点变成3结点，然后用这个直接后继的直接后继去替代这个直接后继，以此类推。替换完成之后，就可以按照第1中方法进行旋转了。","要实现斐波那契查找，首先需要创建一个斐波那契数列的数组，斐波那契数列就不再多介绍了，其数组大致如下：","要求顶点viv_iv​i​​的度，其值为这个顶点在邻接矩阵中第iii行（或第iii列）的元素之和。比如顶点v1v_1v​1​​的度就是2","规则","规则：","规则：若二叉树为空，则空操作返回，否则先访问根节点，然后前序遍历左子树，再前序遍历右子树。","规则：若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。","规则：若树为空，则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。","规则：若树为空，则空操作返回，否则从根结点开始（注意并不是先访问根结点），中序遍历根结点的左子树，然后是访问根结点，最后中序遍历右子树。","解决办法是：设置一个标志变量flag，当front","解决散列冲突有以下几种方法。","解决方法","计算散列地址所需的时间","计算简单：如果设计一个算法可以保证所有的关键字都不会产生冲突，但是这个算法需要很复杂的计算，会耗费很多时间，这对于频繁地查找来说，就会大大降低查找的效率了。因此散列函数的计算时间不应该超过其他查找技术与关键字比较的时间。","让i指向第一个元素位置，然后用j遍历从i开始的所有元素，选出其中最小的元素，让其与i位置元素交换。","让l的头结点的指针指向null,","让待删除的元素的前一个元素的cur指向待删除元素的后一个元素的下标","记录号表：存储具有相同次关键字的所有记录的记录号（可以是指向记录的指针或者是该记录的主关键字）。","记录查找的频率","设g=(vg=(vg=(v,","设图ggg有nnn个顶点，则邻接矩阵是一个n×nn\\time","该弧的权重","该方法为最常用的构造散列函数的方法，对于散列表长为mmm的散列函数公式为：","该算法相对于最简排序法来说，每次都将部分小的元素替换到了前面，其整体有序程度是在逐渐增加的，也就是说这是一个完全熵减过程，而并不会向最简排序那样有时还会让比较小的元素跑到后面去。也就是说，实际上的交换次数比最简排序少了一些。","该边的某一个顶点下标","说到二叉排序树的删除操作，说到底是一个断链然后重接的过程，看上去并不复杂，但有一个问题，那就是在删除了某个结点后，有可能会导致删除后的二叉树不再是二叉排序树。","读入对应个数的顶点","读取","起点下标","距离插入结点最近的平衡因子绝对值大于1的结点为根的子树称为最小不平衡子树。","路径","路径上各个活动所持续的时间之和称为路径长度，从源点到汇点具有最大长度的路径叫做关键路径，在关键路径上的活动叫关键活动","路径的长度：即路径上的边或弧的数目。","路径长度：路径上的分支数目即为路径长度","路径：从树中一个结点到另一个结点之间的分支构成两个结点之间的路径","跳表","转换为后缀表达式","辅助空间","边","边指针","边数","边数：对于具有nnn个顶点和eee条边的图","边类型","边结点类型","边表指针","边集","边集数组","边集数组关注的是边的集合，在边集数组中要查找一个顶点的度需要扫描整个边数组，效率并不高。因此它更适合对边依次进行处理的操作，而不适合对顶点相关的操作。","边集数组是由两个一维数组构成的。一个是存储顶点的信息；另一个是存储边的信息，这个边数组每个数据元素由一条边的起点下标、终点下标和权组成。","边：在图中，任意两个顶点之间的关系用边来表示，边集可为空。在线性表中，相邻数据元素之间具有线性关系，在树结构中，相邻两层的结点具有层次关系。","返回0表示失败","返回true,","返回成功","返回线性表l的元素个数","返回结点p的数据","返回被申请的内存(数组元素的下标)，同时让space[0]的cur指向现在的备用链表的第一个元素的下标","返回该元素在表中序号表示成功;","返回链表l的元素个数","还有一个问题，如何根据这个入边表找到所有的弧尾？每一个结点都只保存了以表头为顶点的所有出边的弧头，却不知道弧的弧尾，除非做一个双向链表逆遍历。当然更简单的方式是在每一个结点中添加一个数据域，保存弧的弧尾的下标即可。可以想象，对于每一个结点的出边表来说，每一个结点的弧尾都应该是当前表头的下标。","这个方法叫做设置哨兵，利用哨兵，完美地消除了在每一次迭代中都要判断循环控制变量是否越界的操作。","这个方法很简单，就是对关键字先取平方，然后抽取中间的几位数字即可。","这也是基础的搜索引擎的搜索方法，每个网页都是独一无二的，其网址就是主关键码，而不同的文章中都会包含一些关键词，这些关键词都是有可能重复的，所以是次关键码。而用户搜索一般是通过关键词去找到想要的网页，也就是通过次关键码搜索出所有相关的记录。","这些零部件基本都是在流水线上同时生产的，加入造一个轮子需要0.5天，造一个发动机需要3天，造一个车底盘需要2天，造一个外壳需要2天，造其他零部件需要2天，全部零部件集中到一处需要0.5天，组装成车需要2天，那么，在汽车厂造一辆车，最短需要多少时间呢？","这样的工程，一定是无环的有向图。","这种数组与链表相结合的存储方法称为邻接表（adjac","这种方法的核心在于前面首先对关键字进行了处理，抽取了一部分数字，实际上不仅可以抽取连续的数字，也可以抽取不连续的数字。","这种方法能够使得关键字不产生聚集，但是也相应地增加了计算的时间。","这种解决冲突的开放定址法称为线性探测法，其问题是有些本来都不是同义词却需要争夺一个地址的情况，这种现象称为堆积，由于堆积现象的出现，使得我们需要不断处理冲突，无论是存入还是查找效率都会大大降低。","这里为int","进栈、压栈、入栈：即栈的插入操作","进栈操作","连通分量：无向图中的极大连通子图称为连通分量。","连通图","连通图：对于图中顶点集中存在的任意两个顶点都是连通的，则称ggg是连通图（connect","连通：在无向图ggg中，如果从顶点vvv到顶点v′v'v​′​​有路径，则称vvv和v′v'v​′​​是连通的。","迪杰斯特拉(dijkstra)算法","迪杰斯特拉(dijkstra)算法是一个按路径长度递增的次序产生最短路径的算法。","迪杰斯特拉算法找到某两个点之间的最短路径的时间复杂度为o(n2)o(n^2)o(n​2​​)，但找到全部点之间的最短路径的时间复杂度为o(n3)o(n^3)o(n​3​​)","适用：不知道关键字的分布，而位数又不是很多的情况。","适用：处理关键字位数比较多的情况，如果实现直到关键字的分布且关键字的若干位分布较均匀，就可以考虑用这个方法","适用：折叠法事先不需要知道关键字的分布，适合关键字位数较多的情况。","适用：查找表较小且连续的情况","选定一个顶点，假定为a，然后按照以下方法将该图按层序排好：","选择排序的基本思想就是每一次在n−i+1n","递归","递归实现","递归方法","通过一个随机函数来得到关键字的随机值，然后将该随机值作为散列值即可。即f(key)=random(key)f(key)=random(key)f(key)=random(key)。这里randomrandomrandom是随机函数。当关键字的长度不等时，采用这个方法构造散列函数是比较合适的","通过此原理可以对连通图进行完全遍历，如果是非连通图，则对它的连通分量分别进行深度优先遍历，即在前一个顶点进行一次深度优先遍历后，若图中尚有顶点未被访问，则另选图中一个未曾被访问的顶点作起始点，重复上述过程，直到图中所有顶点都被访问到为止。","造成存储空间的\"碎片\"","遍历","遍历完成，取出结果202020。栈：空","遍历完成，输出栈顶元素","遍历方法","遍历结果的推导","遍历过程","那么如何找到双亲呢？只需要在数组的每个结点添加一个指向双亲的指针域就可以了，特殊的，我们可以将根节点的双亲指针设置为","那么我们需要建立的索引表的每一个数据元素就应该包括与该无序表相同的主关键字以及一个指向无序表中数据元素的指针用于指向与主关键字对应的数据元素的地址。","那么有什么方法可以将所有给出的序列都能构造得均匀一点吗？这就是平衡二叉树的构造方法了。","那么需要传输的数据为：","那对于动态查找表来说，有没有一种兼顾查找、插入、删除的方法呢？答案是肯定的。","邻接多重表","邻接多重表指针","邻接多重表类型","邻接点","邻接矩阵","邻接矩阵的bf","邻接矩阵的df","邻接表","邻接表指针","邻接表的bf","邻接表的df","邻接表的创建","邻接表类型","释放p","释放q结点","重复上述操作，直到以v8为中转点将矩阵遍历完，得到以下两个新矩阵：","重复操作，最终可以得到下面这个树结构：","重复步骤2和3，直到fff只含一棵树为止。这就是哈夫曼树","针对与稠密索引的缺点，一种补足方式就是使用分块索引。","针对这个问题，可以将删除结点分为三种情况：","链地址法","链式二叉树","链式二叉树指针","链栈","链栈即栈的链式存储结构","链栈类型","链表","链表(linklist)","链表中的第一个结点的存储位置","链队列","链队列类型","链队列结构定义","问题","队列","队列(queue)","队列(queue)是只允许在一端进行插入操作,而在另一端进行删除操作的线性表.","队列的抽象数据类型","队列的链式存储结构，即线性表的单链表，只不过只能尾进头出，简称为链队列。","队列空或队列满的判断","队列类型","队列长度","队头：允许删除的一端","队尾：允许插入的一端","除了最后一个元素an","除留余数法","除第一个元素a1","随机数法","随机生成一数字赋值给p的数据域p","难以确定存储空间的容量","难点操作","需要修改的是边结点，原本的边结点只有一个数据域和一个指针域，数据域用于保存和顶点关联的边的另一个顶点的下标，指针域用来连接下一个边。","需要注意的是：块内无序虽然是说块内值按序排列，但是要求整个块的所有数据都要比上一个块中最大数据大。","需要注意的是：如果要使用该方法，顺序表的第一个元素不能用来保存值。","静态查找","静态查找表","静态查找表(static","静态链表","静态链表已满的标志是space[0]的cur是最后一个数组元素的下标，应该在申请内存之前进行检验","静态链表类型","非叶子节点的度一定是2","非递归归并排序","顶点","顶点不分大小、主次，用一个一维数组来存储是很不错的选择。","顶点与边的关系","顶点数","顶点数据元素","顶点数组","顶点的度","顶点的有穷非空集合和边的集合","顶点类型","顶点结点","顶点集","顶点：即数据元素。线性表中数据元素叫元素，树中数据元素叫结点，在图中数据元素称为顶点（vertex）","顺序串","顺序串即用数组实现的字符串.","顺序串即用顺序存储的方式实现的字符串，通常是数组。该实现方式的特点是长度固定，但易于访问。链式串即使用链表实现的字符串，该实现方式的特点与顺序串相反。","顺序串和链式串","顺序串的大小固定的缺点可以通过动态分配内存来解决，但使用这种方法就需要添加更多完善的api函数来支撑。","顺序二叉树类型","顺序查找(sequenti","顺序查找首先是对于静态查找表进行查找，因为主要只针对线性表进行查找操作，其次顺序查找一般用于无序表，在有序表中，有比顺序查找更优秀的算法。","顺序查找，a为数组，n为要查找的数组的元素个数，key为要查找的关键字","顺序栈","顺序栈与链栈它们在时间复杂度上是一样的,","顺序栈即顺序线性表的简化，将下标为0的一端作为栈底，另外一端作为栈顶。用一个top变量保存栈顶元素在数组中的位置","顺序栈定义","顺序表查找","顺序表查找、有序表查找（二分、插值、斐波那契）以及线性索引查找（稠密、分块、倒排）都是对于静态查找表而言的算法，可以很好地解决查找操作的需求，但是对于动态查找表来说，其性能就不见得有那么好了。","顺序表查找优化","顺序表查找算法","顺序表查找算法主要思路就是：从表的一端开始，逐个往后遍历，如果找到指定值，则返回值的位置，否则返回未找到的信息。","顺序队列","首先二叉排序树的排列方式与二分查找很像（但不同），当比结点小时就进入左子树，比结点大就进入右子树，如果树的构建均匀的话（平衡二叉树），那么每次判断都会筛选掉一半的内容，直到最后找到待查的内容。可以看出这个查找速率还是很好的。","首先介绍顺序队列，即使用顺序存储实现的队列，有一个固定的空间，顺序队列相比于顺序栈更多了一个缺点，顺序队列保存的元素不断在数组后面堆积，前面的元素一个个减少，到最后数组在逻辑上无法存放更多的元素，但实际上数组在前面部分还留有之前的队头元素出队列剩下的空位，而这显然有一个浪费，这也就是为什么顺序栈可行而顺序队列不可行的原因，因为顺序栈栈底部分一直在数组的最前端不会改变。","首先以要查找的表的元素个数为下标找到斐波那契数列中改下标对应的元素值，如果该元素值大于待查表的元素个数时，将待查表扩展到斐波那契数列的查出值的个数，后续元素的值都用待查表的最后一个元素值来填充。","首先假设有两个矩阵，表示每个点之间的边。其中一个叫做d−1d^{","首先先来分析一下二分查找的缺陷吧。","首先创建两个变量，一个变量指向指定的主串开始查找的位置，另一个变量指向子串的起始位置","首先在v0处，选择去第二层最短的路径，即v0","首先它们在时间复杂度上是一样的，不同之处仅仅在于对顶点访问的顺序不同。可见两者在全图遍历上是没有优劣之分的，只是是不同的情况选择不同的算法。","首先将二叉树简化成叶子结点带权的二叉树，如下图所示：","首先将数组的哨兵位置设置为一个标志，表示哨兵","首先建立d−1d^{","首先当然需要一个二叉树的结构，假设这个结构如下：","首先我们需要确定一下这个图需要使用的数据结构，由于在拓扑排序的过程中，需要删除顶点，显然使用邻接表更加方便；然后我们需要将这个序列保存下来，所以我们还需要一个栈用来存储序列。由于在算法过程中始终要查找入度为0的顶点，我们在原来顶点表结点结构中，增加一个入度域in。","首先找到任意一个顶点，如a。","首先找到权值最小的边he，其两个顶点都还未被连通，所以将其相连","首先把有权值的叶子结点按照从小到大的顺序排列成一个有序序列，即a5a5a5，e10e10e10，b15b15b15，d30d30d30，c40c40c40","首先提供一个任意顺序的序列，然后依次添加到二叉排序树中，第一个存在根结点，然后从第二个开始就进行判断，若比根结点小，则进入左子树，反之进入右子树。若进入的子树根结点为空，则在该位置上保存值，否则继续判断与该根结点的大小关系。","首先新建一个结点，设置好它的两个数据域，即弧尾和弧头的下标。","首先申请一个内存，l[0]的cur被指向备用链表的第一个元素的下标。","首先确定起点为a，每走一个点就做上标记","首先给出一个图如下：","首先让i站在第一个元素的位置，表示现在的任务是找到所有元素中最小的元素放在i的位置","首先让变量i在第一个元素的位置，然后用变量j遍历整个数组，遇到比i位置元素小的就进行交换，最终可以把整个数组最小的元素放在数组第一个位置","首先说数据域：两个数据域分别保存与边相关的两个顶点的下标","首先还是先考虑一个邻接表：首先是一个顶点数组，用以保存所有的顶点，在顶点中有一个出边表头，用于连接一个出边表。","首先遍历静态链表找到位序待删除位序的元素下标","首先需要一个队头指针(front)和一个指向队尾元素后一个位置的指针(rear)","首先顶点数组的内容不用修改，仍然是一个顶点数据和一个边表指针。","首先，我们需要定义如下几个参数：","（0,0）元素表示v0v_0v​0​​与v0v_0v​0​​的关系，以此类推。"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"简介","keywords":"","body":"一. 思维导图\n二. 前言\n1. 写作目的\n对于数据结构与算法，其实从开始学习以来就一直想进行一个知识框架的梳理与总结，但苦于不知道该如何进行分类，所以久久都没有开始行动，直到现在也都还搞不清楚真正的界限在哪里，毕竟数据结构与算法总是交织在一起，但一直停在这里也不是办法，于是就按暂定的分类进行总结，到后面发现可以完善时再进行完善。暂时的具体思路是，所有的数据结构都归类在数据结构中，建立在数据结构上的算法也归类在数据结构中，然后其余的算法就归类在算法中。\n2. 参考书籍\n\n《大话数据结构》\n《数据结构》\n《算法》\n《算法导论》\n《数据结构与算法分析：C语言描述》\n《数据结构、算法与应用（C++语言描述）》\n\n3. 分类方法\n终于，在读过《算法》之后，我对数据结构与算法又有了一个新的了解。\n在前人们解决问题的过程中，我想算法是比数据结构更早出现的，而数据结构则是为了支撑该算法而出现的数据组织和存储的方式。而到了现在，数据结构已然成为了算法的基础，每一种数据结构都有其完整的操作集，某些操作则需要应用到一些算法。\n在新的分类中，我不想再纠结于每种数据结构有哪些算法，所有这些属于某个数据结构的基础操作集的算法，都将被我归类于数据结构的操作，某些不太典型但需要注意的操作将在对应的数据结构部分进行介绍，而那些比较典型的操作则将被我同时归类到数据结构与算法的部分。\n对于数据结构的总结，将只包括基本介绍、代码实现和需要注意的操作的部分，新的分类将按照以下方法进行：\n\n数据结构\n\n只包含每一种数据结构的引入和介绍，然后按照自己的理解写出结构代码，最后将每种数据结构的基础操作集中比较困难的操作进行总结。在初学时，将对每一种数据结构从结构代码到操作实现进行完整的代码编写。\n\n算法\n\n每一种算法都将由一个或多个实例引入，然后介绍该算法需要的基本条件（如数据结构等），最后介绍该算法的完整思想并给出核心部分的代码实现，而一些实际的题目将作为额外的部分添加到相应的算法后面。\n"},"数据结构/数据结构.html":{"url":"数据结构/数据结构.html","title":"数据结构","keywords":"","body":""},"数据结构/数组/数组.html":{"url":"数据结构/数组/数组.html","title":"数组","keywords":"","body":"一. 分类\n\n一维数组\n字符串\n\n二. 抽象数据类型\n\nADT 数组(Array)  \nData\n线性表的数据对象集合为(a1 a_1 a​1​​, a2 a_2 a​2​​, ···, an a_n a​n​​), 每个元素的类型均为DataType. 其中, 除第一个元素a1 a_1 a​1​​外, 每一个元素有且只有一个直接前驱元素, 除了最后一个元素an a_n a​n​​外, 每一个元素有且只有一个直接后继元素. 数据元素之间的关系是一对一的关系\nOperation\nInitArray(*L): 初始化操作, 建立一个空的线性表L\nArrayEmpty(L): 若线性表为空, 返回true, 否则返回false\nClearArray(*L): 将线性表清空\nGetElem(L, i, *e): 将线性表L中的第i个位置元素值返回给e\nLocateElem(L, e): 在线性表L中查找与给定值e相等的元素, 如果查找成功, 返回该元素在表中序号表示成功; 否则, 返回0表示失败\nArrayInsert(*L, i, e): 在线性表L中的第i个位置插入新元素e\nArrayDelete(*L, i, *e): 删除线性表L中第i个位置元素, 并用e返回其值\nArrayLength(L): 返回线性表L的元素个数\n\n\n\n\nendADT\n\n"},"数据结构/数组/一维数组/一维数组.html":{"url":"数据结构/数组/一维数组/一维数组.html","title":"一维数组","keywords":"","body":"一. 定义\n指用一段地址连续的存储单元依次存储线性表的数据元素\n二. 关键概念\n若将数组记为 (a1 a_1 a​1​​, ···, ai−1 a_{i-1} a​i−1​​, ai a_i a​i​​, ai+1 a_{i+1} a​i+1​​, ···, an a_n a​n​​) \n\n直接前驱元素：如ai−1 a_{i-1} a​i−1​​是ai a_i a​i​​的直接前驱元素\n直接后继元素：如ai+1 a_{i+1} a​i+1​​是ai a_i a​i​​的直接后继元素\n线性表的长度：所有线性表元素的个数n(n⩾0) n(n\\geqslant0) n(n⩾0)\n空表：当n=0 n=0 n=0时，称为空表\n位序：ai a_i a​i​​是第i i i个数据元素，称i i i为数据元素ai a_i a​i​​在线性表中的位序\n\n三. 特点\n\n优点\n无须为表示表中元素之间的逻辑关系而增加额外的存储空间\n可以快速地存取表中任一位置的元素\n\n\n缺点\n插入和删除操作需要移动大量元素\n当线性表长度变化较大时, 难以确定存储空间的容量\n造成存储空间的\"碎片\"\n\n\n\n"},"数据结构/数组/一维数组/代码实现/代码实现.html":{"url":"数据结构/数组/一维数组/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"#define MAXSIZE 20             // 存储空间初始分配量\ntypedef int ElemType;           // ElemType类型根据实际情况而定, 这里为int\ntypedef struct {\n    ElemType data[MAXSIZE];     // 数组, 存储数据元素\n    int length;                 // 线性表当前长度\n} SeqList;\n\n"},"数据结构/数组/一维数组/难点操作/难点操作.html":{"url":"数据结构/数组/一维数组/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 插入\n\n如果插入位置不合理, 抛出异常\n如果线性表长度大于等于数组长度, 则抛出异常或动态增加容量\n从最后一个元素开始向前遍历到第i个位置, 分别将他们都向后移动一个位置\n将要插入元素填入位置i处\n表长加1\n\n二. 删除\n\n如果删除位置不合理, 抛出异常\n取出删除元素\n从删除元素位置开始遍历到最后一个元素位置, 分别将它们都向前移动一个位置\n表长减1\n\n"},"数据结构/串/串.html":{"url":"数据结构/串/串.html","title":"串","keywords":"","body":"一. 定义\n串（string）是由零个或多个字符组成的有限序列，又叫字符串。一般记为s=s=s=\"a1a2a_1a_2a​1​​a​2​​···ana_na​n​​\" (n⩾0)(n\\geqslant 0)(n⩾0).\n二. 关键概念\n\n串的长度：串中的字符数目nnn。\n空串：零个字符的串\n子串：串中任意个数的连续字符组成的子序列\n子串在主串中的位置：子串的第一个字符在主串中的序号\n\n三. 串的比较\n1. 两串相等\n\n当两个字符串的长度以及每个位序上的字符都相等时，两个字符串才相等。\n\n2. 大小比较\n\n当两个字符串的长度不相同，但是较短的字符串和较长的字符串在都有字符的每个位序上字符都相同，则较短的字符串较小。\n当两个字符串的字符不完全相同时，按照位序依次递增，直到遇到第一个不同的字符为止，字符小的那个字符串较小。\n\n3. 数学定义\n对于两个串不相等时，判定字符串大小的数学定义如下：\n给定两个串：s=s=s= \"a1a2a_1a_2a​1​​a​2​​···ana_na​n​​\"，t=t=t= \"b1b2b_1b_2b​1​​b​2​​···bmb_mb​m​​\"，当满足以下条件之一时，stsst。\n\nnmnnm，且ai=bia_i=b_ia​i​​=b​i​​ (i=1i=1i=1,222,···,nnn)。\n存在某个k⩽min(m,n)k\\leqslant min(m, n)k⩽min(m,n)，使得ai=bia_i=b_ia​i​​=b​i​​ (i=1i=1i=1,222,···,k−1k-1k−1)，akbka_ka​k​​b​k​​。\n\n四. 串的抽象数据类型\n\nADT 串(string)\nData\n串中元素仅由一个字符组成，相邻元素具有前驱和后继关系。\n\n\nOperation\nStrAssign(T, *chars)：生成一个其值等于字符串常量chars的串T。\nStrCopy(T, S)：串S存在，由串S复制得串T。\nClearString(S)：串S存在，将串清空。\nStringEmpty(S)：若串S为空，返回true，否则返回false。\nStrLength(S)：返回串S的元素个数，即串的长度。\nStrCompare(S, T)：若S>T，返回值>0；若S=T，返回值=0；若S，返回值。\nConcat(T, S1, S2)：用T返回由S1和S2联接而成的新串。\nSubString(Sub, S, pos, len)：串S存在，1⩽pos⩽StrLength(S)1\\leqslant pos\\leqslant StrLength(S)1⩽pos⩽StrLength(S)，且0⩽len⩽StrLength(S)−pos+10\\leqslant len\\leqslant StrLength(S)-pos+10⩽len⩽StrLength(S)−pos+1，用Sub返回串S的第pos个字符起长度为len的子串。\nIndex(S, T, pos)：串S和T存在，T是非空串，1⩽pos⩽StrLength(S)1\\leqslant pos\\leqslant StrLength(S)1⩽pos⩽StrLength(S)。若主串S中存在和串T值相同的子串，则返回它在主串S中第pos个字符之后第一次出现的位置，否则返回0。\nReplace(S, T, V)：串S、T和V存在，T是非空串。用V替换主串S中出现的所有与T相等的不重叠的子串。\nStrInsert(S, pos, T)：串S和T存在，1⩽pos⩽StrLength(S)+11\\leqslant pos\\leqslant StrLength(S)+11⩽pos⩽StrLength(S)+1。在串S的第pos个字符之前插入串T。\nStrDelete(S, pos, len)：串S存在，1⩽pos⩽StrLength(S)−len+11\\leqslant pos\\leqslant StrLength(S)-len+11⩽pos⩽StrLength(S)−len+1。从串S中删除第pos个字符起长度为len的子串。\n\n\nendADT\n\n五. 顺序串和链式串\n顺序串即用顺序存储的方式实现的字符串，通常是数组。该实现方式的特点是长度固定，但易于访问。链式串即使用链表实现的字符串，该实现方式的特点与顺序串相反。\n而从二者实际上能完成的工作来看，顺序串或许在拼接两个字符串以及在字符串中插入另一个字符串等类似操作上有一定的缺陷，但总体的优越性比链式串要好。字符串的特点是一个位置只放一个字符，如果使用链式串一个结点只放一个字符，则会造成很大的空间浪费，这一点可以通过一个结点多放几个字符来解决。\n顺序串的大小固定的缺点可以通过动态分配内存来解决，但使用这种方法就需要添加更多完善的API函数来支撑。\n"},"数据结构/串/顺序串/顺序串.html":{"url":"数据结构/串/顺序串/顺序串.html","title":"顺序串","keywords":"","body":"一. 定义\n顺序串即用数组实现的字符串.\n"},"数据结构/串/顺序串/代码实现/代码实现.html":{"url":"数据结构/串/顺序串/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"#define INITSIZE 20\ntypedef char *String;\n\n"},"数据结构/串/顺序串/难点操作/难点操作.html":{"url":"数据结构/串/顺序串/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 朴素的模式匹配算法\n1. 伪码描述\n\n首先创建两个变量，一个变量指向指定的主串开始查找的位置，另一个变量指向子串的起始位置\n用循环逐个对比两个位置上的字符是否相等，若相等则将两个变量加1，若不相等则将第二个变量退回到第一个字符的位置，第二个变量退回到之前的开始位置的后一个位置，然后继续开始查找\n当某个字符串遍历完成之后，退出循环\n若第二个字符串遍历完成，返回此次循环主串开始的位置\n若第一个字符串遍历完成，说明无匹配子串，返回0\n\n2. C代码\n假设主串S和要匹配的子串T的长度存在S[0]与T[0]中：\nint Index(String S, String T, int pos)\n{\n    int i = pos;\n    int j = 1;\n    while (i  T[0])\n    {\n        return i - T[0];\n    } else {\n        return 0;\n    }\n}\n\n二. KMP模式匹配算法\n1. 分析\n在朴素的模式匹配算法中，每一次开始匹配，都会将i退回到上一次循环的后一个位置，j被退回到第一个字符的位置。\n但实际情况是，在朴素的模式匹配算法中，包含了许多无用的操作。如abcdefgab和abcdex这个例子，前面五个字符都匹配，直到第六个字符时不匹配。按照朴素的模式匹配算法，主串将从b开始，子串将从a开始，而主串中第一个字符a和后面的字符都不相同，而刚刚前五个字符都已经和主串比较过是相同的，也就是说，子串的第一个字符肯定和主串的第2-5个字符是不同的，所以在朴素的模式匹配算法中会存在很多的多余操作。在此可以得到一个结论，就是每一次循环j可以不一定从1开始，主串指针i也不一定需要回退。\n在初步的推导中，主串指针i是不需要回退的，所以我们直接考虑每一次模式匹配，j需要怎么进行回溯。\n2. 数学模型\nj的值可以通过下面这个数学模型进行推导：\nnext[j]={0j=1Max{k∣(1kj)&&(P1...Pk−1=Pj−k+1...Pj−1)}{k}≠∅1Others\nnext[j]=\\begin{cases}\n0 & j=1\\\\\nMax\\{ k|(1next[j]=​⎩​⎪​⎨​⎪​⎧​​​0​Max{k∣(1kj)&&(P​1​​...P​k−1​​=P​j−k+1​​...P​j−1​​)}​1​​​j=1​{k}≠∅​Others​​\n\n  其中，next[j]是一个数组，下标代表子串的字符位序，其中保存的元素表示当此次匹配在某个位序处失败后，下一次匹配从数组中此位序元素值所显示的位序开始匹配。\n  P1...Pk−1P_1...P_{k-1}P​1​​...P​k−1​​和Pj−k+1...Pj−1P_{j-k+1}...P_{j-1}P​j−k+1​​...P​j−1​​是两个字符串，P1...PjP_1...P_jP​1​​...P​j​​是这个需要匹配的子串\n  {k}≠∅\\{ k\\}\\neq \\varnothing{k}≠∅表示前面的K集合不是空集。\n\n3. C代码\n\n根据子串内容写入next数组\nvoid get_next(String T, int *next)\n{\n    int i, k;\n    i = 1;\n    k = 0;\n    next[1] = 0;\n    while (i \n\n匹配部分\nint Index_KMP(String S, String T, int pos)\n{\n    int i = pos;\n    int j = 1;\n    int next[255];\n    get_next(T, next);\n    while (i  T[0])\n        return i - T[0];\n    else\n        return 0;\n}\n\n\n\n三. KMP模式匹配算法的改进\n1. 分析\n上述的KMP算法仍然存在一定缺陷。比如有以下两个字符串：aaaabcde和aaaaax，在子串和主串的指针都移动到5时，二者产生差异，此时按照上述的KMP模式匹配算法，i依旧指向5，j移动到4，然后开始匹配，结果依旧不匹配，j又移动到3。然而由于子串中前5个字符都是a，所以第五个字符与主串的第五个字符不匹配，那么说明子串的前面四个字符也都和主串的第五个字符不匹配，所以按照之前的KMP算法，依然会有一些多余操作存在。\n2. C代码\n以下是改进之后的写入next数组的函数：\nvoid get_nextval(String T, int *nextval)\n{\n    int i, k;\n    i = 1;\n    k = 0;\n    nextval[1] = 0;\n    while (i \n"},"数据结构/链表/链表.html":{"url":"数据结构/链表/链表.html","title":"链表","keywords":"","body":"一. 分类\n\n单链表\n静态链表\n循环链表\n双向链表\n双向循环链表\n\n二. 抽象数据类型\n\nADT 链表(LinkList)\nData\n线性表的数据对象集合为(a1 a_1 a​1​​, a2 a_2 a​2​​, ···, an a_n a​n​​), 每个元素的类型均为DataType. 其中, 除第一个元素a1 a_1 a​1​​外, 每一个元素有且只有一个直接前驱元素, 除了最后一个元素an a_n a​n​​外, 每一个元素有且只有一个直接后继元素. 数据元素之间的关系是一对一的关系\nOperation\nInitList(*L): 初始化操作, 建立一个空的链表L\nListEmpty(L): 若链表为空, 返回true, 否则返回false\nClearList(*L): 将链表清空\nGetElem(L, i, *e): 将链表L中的第i个位置元素值返回给e\nLocateElem(L, e): 在链表L中查找与给定值e相等的元素, 如果查找成功, 返回该元素在表中序号表示成功; 否则, 返回0表示失败\nListInsert(*L, i, e): 在链表L中的第i个位置插入新元素e\nListDelete(*L, i, *e): 删除链表L中第i个位置元素, 并用e返回其值\nListLength(L): 返回链表L的元素个数\n\n\n\n\nendADT\n\n三. 关键概念\n若将链表记为 (a1 a_1 a​1​​, ···, ai−1 a_{i-1} a​i−1​​, ai a_i a​i​​, ai+1 a_{i+1} a​i+1​​, ···, an a_n a​n​​) \n\n直接前驱元素：如ai−1 a_{i-1} a​i−1​​是ai a_i a​i​​的直接前驱元素\n直接后继元素：如ai+1 a_{i+1} a​i+1​​是ai a_i a​i​​的直接后继元素\n线性表的长度：所有链表元素的个数n(n⩾0) n(n\\geqslant0) n(n⩾0)\n空表：当n=0 n=0 n=0时，称为空表\n位序：ai a_i a​i​​是第i i i个数据元素，称i i i为数据元素ai a_i a​i​​`在链表中的位序\n头指针: 链表中的第一个结点的存储位置\n头结点: 在链表的第一个结点前附设的一个结点\n\n"},"数据结构/链表/单链表/单链表.html":{"url":"数据结构/链表/单链表/单链表.html","title":"单链表","keywords":"","body":"一. 定义\nn个结点(ai a_i a​i​​的存储映像)链结成一个链表, 即为线性表(a1 a_1 a​1​​, a2 a_2 a​2​​, ..., an a_n a​n​​)的链式存储结构\n二. 特点\n\n优点\n插入和删除操作时间复杂度小\n不需要分配存储空间, 元素个数不受限制, 也不会浪费多余的空间\n\n\n缺点\n查找操作的时间复杂度高\n\n\n\n"},"数据结构/链表/单链表/代码实现/代码实现.html":{"url":"数据结构/链表/单链表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"typedef int ElemType;      // 一个数据元素\nstruct node\n{\n    ElemType data;\n    struct Node *next;\n}\ntypedef struct node Node;  // 一个结点\ntypedef Node *PNode;       // 一个指向结点的指针\ntypedef Node *LinkList;    // 头指针兼链表\n\n"},"数据结构/链表/单链表/难点操作/难点操作.html":{"url":"数据结构/链表/单链表/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 读取\n\n声明一个指针p指向链表第一个结点, 初始化j从1开始\n当j \n若到链表末尾p为空, 则说明第i个结点不存在\n否则查找成功, 返回结点p的数据\n\n二. 插入\n\n声明一指针p指向链表头结点, 初始化j从1开始\n当j \n若到链表末尾p为空, 则说明第i个结点不存在\n否则查找成功, 在系统中生成一个空结点s\n将数据元素e赋值给s->data\n单链表的插入标准语句s->next=p->next; p->next=s;\n返回成功\n\n三. 删除\n\n声明一个指针p指向链表头结点, 初始化j从1开始\n当j \n若到链表末尾p为空, 则说明第i个结点不存在\n否则查找成功, 将欲删除的结点p->next赋值给q\n单链表的删除标准语句p->next=q->next;\n将q结点中的数据赋值给e, 作为返回\n释放q结点\n返回成功\n\n四. 整表创建\n1. 头插法\n\n声明一指针p和计数器变量i\n初始化一空链表L\n让L的头结点的指针指向NULL, 即建立一个带头结点的单链表\n循环\n生成一新结点赋值给p\n随机生成一数字赋值给p的数据域p->data\n将p插入到头结点与前一新结点之间\n\n\n\n五. 整表删除\n\n声明一指针p和q\n将第一个结点赋值给p\n循环\n将下一结点赋值给q\n释放p\n将q赋值给p\n\n\n\n"},"数据结构/链表/静态链表/静态链表.html":{"url":"数据结构/链表/静态链表/静态链表.html","title":"静态链表","keywords":"","body":"一. 定义\n一种用数组描述的链表\n二. 特点\n\n优点：在插入和删除操作时，只需要修改游标，不需要移动元素，从而改进了在顺序存储结构中插入和删除操作需要移动大量元素的缺点\n缺点：没有解决连续存储分配带来的表长难以确定的问题；失去了顺序存储结随机存储的特性\n\n"},"数据结构/链表/静态链表/代码实现/代码实现.html":{"url":"数据结构/链表/静态链表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"#define MAXSIZE 1000                    /* 存储空间初始分配量 */\n\ntypedef int ElemType;                   /* 数据元素类型 */\n\nstruct component\n{\n    ElemType data;\n    int cur;                            /* 相当于链表的链 */\n};                                      /* 相当于链表的结点 */\n\ntypedef struct component Component;     /* 结点类型 */\ntypedef Component StaticList[MAXSIZE];  /* 静态链表类型 */\n\n\n为了方便插入数据，通常会把数组建立得大一些，以便有一些空闲空间可以便于插入时不至于溢出\n初始化后的数组元素如下：\n\n  \n      下标\n      0\n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      ...\n      999\n  \n  \n      data\n                \n  \n  \n      cur\n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      ...\n      0\n  \n\n\n另外对数组的第一个和最后一个元素作为特殊元素处理，不存数据。通常把未被使用的数组元素称为备用链表。而数组第一个元素，即下标为0的元素的cur就存放备用链表的第一个结点的下标，并充当NULL指针，让已使用的数组元素的最后一个元素的cur设置为0。而数组的最后一个元素的cur则存放第一个有数值的元素的下标，相当于单链表中的头节点的作用，当整个链表为空时，则为0。\n\n\n"},"数据结构/链表/静态链表/难点操作/难点操作.html":{"url":"数据结构/链表/静态链表/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 初始化\nStatus InitList(StaticLinkList space)\n{\n    int i;\n    for (i=0; i\n\n将数组每一个元素的cur设置为下一个数组元素的下标，最后一个数组元素的cur设置为0\n\n二. 模拟malloc函数\nint Malloc_SSL(StaticLinkList space)\n{\n    int i = space[0].cur;\n\n    if(space[0].cur) {\n        space[0].cur = space[i].cur;\n    }\n\n    return i;\n}\n\n\n返回被申请的内存(数组元素的下标)，同时让space[0]的cur指向现在的备用链表的第一个元素的下标\n静态链表已满的标志是space[0]的cur是最后一个数组元素的下标，应该在申请内存之前进行检验\n\n三. 插入操作\nStatus ListInsert(StaticLinkList L, int i, ElemType e)\n{\n    int j, k, l;\n    k = MAXSIZE - 1;\n    if (i  ListLength(L) + 1)\n        return ERROR;\n    j = Malloc_SSL(L);\n    if (j) {\n        L(j).data = e;\n        for(l = 1; l \n\n首先申请一个内存，L[0]的cur被指向备用链表的第一个元素的下标。\n将新申请的内存的cur指向原来的待插入元素位序上的值\n然后将待插入位序的前一个元素的cur指向现在申请的元素的下标\n给新申请的内存的data赋值\n\n四. 模拟free函数\nvoid Free_SSL(StaticLinkList space, int k)\n{\n    space[k].cur = space[0].cur;\n    space[0].cur = k;\n}\n\n\n将被释放的内存的cur设置为原来的备用链表的第一个元素的下标\n将space[0]的cur设置为新的备用链表的第一个元素的下标\n\n五. 删除元素\nStatus ListDelete(StaticLinkList L, int i)\n{\n    int j, k;\n    if(i  ListLength(L)) {\n        return ERROR;\n    }\n    k = MAXSIZE - 1;\n    for (j = 1; j \n\n首先遍历静态链表找到位序待删除位序的元素下标\n让待删除的元素的前一个元素的cur指向待删除元素的后一个元素的下标\n然后释放内存。\n\n"},"数据结构/链表/循环链表/循环链表.html":{"url":"数据结构/链表/循环链表/循环链表.html","title":"循环链表","keywords":"","body":"在单链表的基础上将链表的终端结点的指针由空指针改为指向头节点。\n当链表为空时，头节点的指针指向其本身。\n可以通过再设立一个尾指针来指向链表的尾端，以此来简化一些操作。\n"},"数据结构/链表/循环链表/代码实现/代码实现.html":{"url":"数据结构/链表/循环链表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;                                // 数据项1类型\n    int y;                                // 数据项2类型\n};\ntypedef struct items ElemType;            // 数据元素类型\nstruct node\n{\n    ElemType data;\n    struct node *next;\n};\ntypedef struct node Node;                 // 数据对象类型\ntypedef Node *PNode;\nstruct list\n{\n    PNode head;\n    PNode last;\n    int length;\n};\ntypedef struct list CycleList;            // 循环链表类型\n\n"},"数据结构/链表/双向链表/双向链表.html":{"url":"数据结构/链表/双向链表/双向链表.html","title":"双向链表","keywords":"","body":"双向链表即在每个结点多增设一个结点，用于指向前一个结点。\n可以让第一个结点的前指针和终端结点的后指针指向NULL。\n"},"数据结构/链表/双向链表/代码实现/代码实现.html":{"url":"数据结构/链表/双向链表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;                        // 数据项1类型\n    int y;                        // 数据项2类型\n};\ntypedef struct items ElemType;    // 数据元素类型\nstruct node\n{\n    ElemType data;\n    struct node *pre;\n    struct node *next;\n};\ntypedef struct node Node;         // 数据对象类型\ntypedef Node *PNode;\nstruct list\n{\n    PNode start;\n    int length;\n};\ntypedef struct list DoubleList;   // 双向链表类型\n\n"},"数据结构/链表/双向循环链表/双向循环链表.html":{"url":"数据结构/链表/双向循环链表/双向循环链表.html","title":"双向循环链表","keywords":"","body":"即在双向链表的基础上，让第一个结点（可能是头结点）的前指针指向最后一个结点，让最后一个结点的后指针指向第一个结点即可。\n"},"数据结构/链表/双向循环链表/代码实现/代码实现.html":{"url":"数据结构/链表/双向循环链表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;                        // 数据项1类型\n    int y;                        // 数据项2类型\n};\ntypedef struct items ElemType;    // 数据元素类型\nstruct node\n{\n    ElemType data;\n    struct node *next;\n    struct node *pre;\n};\ntypedef struct node Node;         // 数据对象类型\ntypedef Node *PNode;\nstruct list\n{\n    PNode start;\n    int length;\n};\ntypedef struct list DulCycleList; // 双向循环链表类型\n\n"},"数据结构/跳表/跳表.html":{"url":"数据结构/跳表/跳表.html","title":"跳表","keywords":"","body":"跳表\n"},"数据结构/散列表/散列表.html":{"url":"数据结构/散列表/散列表.html","title":"散列表","keywords":"","body":"一. 定义\n散列表(Hash Table)是采用散列技术将记录存储在一块连续的存储空间中，这块连续存储空间成为散列表或哈希表。\n散列技术是在记录的存储位置和它的关键字之间建立一个确定的对应关系fff，使得每个关键字keykeykey对应一个存储位置f(key)f(key)f(key)。\n散列函数(Hash)，也叫哈希函数，即散列技术定义中所说的那个对应关系。\n二. 特点\n散列表中关键字地址的特点是与关键字内容直接相关，只要关键字不同，则其通过哈希函数求得的哈希值一般也不同，而只要有这个哈希函数，那么我们就可以根据给定的关键字直接找到它在表中的记录，这就是哈希表的用法。\n而哈希表的建立过程不一定那么顺利，很有可能两个不同的关键字通过同一个哈希函数得到的哈希值是相同的，怎么办，当然不可能将两个值保存到同一个位置，所以我们就通过一些方法需要处理这个叫做散列冲突的问题。\n所以通过关键字直接找到其位置的方法不单单只使用哈希函数，而是哈希函数+散列冲突的解决方法。这样我们每拿到一个关键字，就可以直接得到它的位置，对其的查找就快多了。\n"},"数据结构/散列表/构造方法/构造方法.html":{"url":"数据结构/散列表/构造方法/构造方法.html","title":"构造方法","keywords":"","body":"一. 原则\n对于一个好的散列函数，那么应该有下面两个原则：\n\n计算简单：如果设计一个算法可以保证所有的关键字都不会产生冲突，但是这个算法需要很复杂的计算，会耗费很多时间，这对于频繁地查找来说，就会大大降低查找的效率了。因此散列函数的计算时间不应该超过其他查找技术与关键字比较的时间。\n散列地址分布均匀：尽可能让散列地址均匀分布也可以降低冲突的概率，并且可以保证存储空间的有效利用。\n\n二. 散列函数构造方法\n1. 直接定址法\n即直接用关键字来作为地址，先来看两个例子吧：\n\n如果关键字是年龄，假定所有人的年龄都低于150岁的话，那么就用一个容量为150的数组，0岁人数的保存在下标为0的位置，10岁的人数保存在下标为10的人数，以此类推。即f(key)=keyf(key)=keyf(key)=key\n如果关键字是出生年份，假定所有统计的人的出生年份都在1980年之后的话，那么1980年的人数就保存在下标为1980−1980=01980-1980=01980−1980=0的位置，1982的人数就保存在下标为2的位置，以此类推。即f(key)=key−1980f(key)=key-1980f(key)=key−1980\n\n总结以上两个例子，我们可以取关键字的某个线性函数值为散列地址，即：\nf(key)=a×key+b\nf(key)=a\\times key+b\nf(key)=a×key+b\n优点：简单、均匀，且不会产生冲突\n缺点：需要事先直到关键字的分布情况\n适用：查找表较小且连续的情况\n2. 数字分析法\n当关键字是位数较多的数字，如手机号码时，一般前7位数字是重复概率较高的，所以我们可以选择后4位来得到一个哈希值。\n可以直接将后四位作为地址，也可以将这四位数字进行一些处理，如反转数字、右环位移、左环位移甚至前两数与后两数叠加等方法，无论什么方法，只要能够合理地将关键字分配到散列表的各位置。\n这种方法的核心在于前面首先对关键字进行了处理，抽取了一部分数字，实际上不仅可以抽取连续的数字，也可以抽取不连续的数字。\n适用：处理关键字位数比较多的情况，如果实现直到关键字的分布且关键字的若干位分布较均匀，就可以考虑用这个方法\n3. 平方取中法\n这个方法很简单，就是对关键字先取平方，然后抽取中间的几位数字即可。\n适用：不知道关键字的分布，而位数又不是很多的情况。\n4. 折叠法\n折叠法是将关键字先分成几部分，然后将这几部分的数字求和所得的数字再进行抽取，最终所得的数字就作为地址。\n适用：折叠法事先不需要知道关键字的分布，适合关键字位数较多的情况。\n5. 除留余数法\n该方法为最常用的构造散列函数的方法，对于散列表长为mmm的散列函数公式为：\nf(key)=key % p (p⩽m)\nf(key)=key\\ \\% \\ p \\ (p\\leqslant m)\nf(key)=key % p (p⩽m)\n事实上，这方法不仅可以对关键字直接取模，也可在折叠、平方取中后再取模。\n本方法的关键在于选择合适的ppp，ppp如果选得不好，就可能产生同义词。\n根据经验：若散列表表长为mmm，通常ppp为小于或等于表长（最好接近mmm）的最小质数或不包含小于20质因子的合数\n6. 随机数法\n通过一个随机函数来得到关键字的随机值，然后将该随机值作为散列值即可。即f(key)=random(key)f(key)=random(key)f(key)=random(key)。这里randomrandomrandom是随机函数。当关键字的长度不等时，采用这个方法构造散列函数是比较合适的\n三. 决策\n如何选择哪种散列函数可以通过以下因素来判断：\n\n计算散列地址所需的时间\n关键字的长度\n散列表的大小\n关键字的分布情况\n记录查找的频率\n\n"},"数据结构/散列表/处理冲突/处理冲突.html":{"url":"数据结构/散列表/处理冲突/处理冲突.html","title":"处理冲突","keywords":"","body":"一. 简介\n在通过哈希函数求关键字的哈希值的时候，经常会遇到两个关键字key1≠key2key_1\\neq key_2key​1​​≠key​2​​，但是却有f(key1)=f(key2)f(key_1)=f(key_2)f(key​1​​)=f(key​2​​)，这种现象我们称为冲突（collision），并把key1key_1key​1​​和key2key_2key​2​​称为这个散列函数的同义词（synonym）。\n解决散列冲突有以下几种方法。\n二. 处理散列冲突的方法\n1. 开放定址法\n即一旦发生了冲突，就去寻找下一个空的散列地址，只要散列表足够大，空的散列地址总能找到，并将记录存入。\n它的公式是：\nfi(key)=(f(key)+di) % m\nf_i(key)=(f(key)+d_i)\\ \\% \\ m\nf​i​​(key)=(f(key)+d​i​​) % m\n其中di=1d_i=1d​i​​=1，222，333，...，m−1m-1m−1\n这种解决冲突的开放定址法称为线性探测法，其问题是有些本来都不是同义词却需要争夺一个地址的情况，这种现象称为堆积，由于堆积现象的出现，使得我们需要不断处理冲突，无论是存入还是查找效率都会大大降低。\n改善这种堆积现象有一些方法：\n\n将每次的位移量变成平方：fi(key)=(f(key)+di) % mf_i(key)=(f(key)+d_i)\\ \\% \\ mf​i​​(key)=(f(key)+d​i​​) % m，其中di=12d_i=1^2d​i​​=1​2​​，−12-1^2−1​2​​，222^22​2​​，−22-2^2−2​2​​，...，q2q^2q​2​​，−q2-q^2−q​2​​(q⩽m/2)(q\\leqslant m/2)(q⩽m/2)，这种方法称为二次探测法，这种方法的目的是为了不让关键字都聚集在某一块区域。\n用随机函数得到每次的位移量：fi(key)=(f(key)+random(i)) % mf_i(key)=(f(key)+random(i))\\ \\% \\ mf​i​​(key)=(f(key)+random(i)) % m，这种方法称之为随机探测法。\n\n2. 再散列函数法\n对于我们的散列表来说，我们可以事先准备多个散列函数，按照顺序使用，若第一个散列函数发生了冲突，则对该关键字使用第二个散列函数，当不再冲突时，就将数据存储即可。\n这种方法能够使得关键字不产生聚集，但是也相应地增加了计算的时间。\n3. 链地址法\n即在原来的哈希表结点中添加一个指向哈希值等于该地址的链表头指针，不管是否发生冲突，总之哈希值为多少，就将对应的关键字放到对应地址后的链表中。\n此方法的好处是，对于可能会造成很多冲突的散列函数来说，提供了绝不会出现找不到地址的保障，但是也带来了查找时需要遍历单链表的性能损耗。\n4. 公共溢出区法\n即在哈希表之外，再建立一个溢出表，当关键字产生冲突时，就将关键字保存到溢出表，查找时，先通过散列函数计算出散列值在散列表中进行查找，如果没找到，再到溢出表中进行顺序查找。\n在有冲突的数据很少的情况下，公共溢出区的结构对查找性能来说还是非常高的。\n"},"数据结构/栈/栈.html":{"url":"数据结构/栈/栈.html","title":"栈","keywords":"","body":"一. 分类\n\n顺序栈\n两栈共享空间\n链栈\n\n二. 定义\n栈 ( stack ) 是限定仅在表尾进行插入和删除操作的线性表\n三. 关键概念\n\n栈顶：允许插入和删除的一端称为栈顶（top）\n栈底：与栈顶相对的另一端称为栈底（bottom）\n空栈：不含任何数据元素的栈称为空栈\nLIFO结构：即后进先出的结构（Last In First Out）\n进栈、压栈、入栈：即栈的插入操作\n出栈、弹栈：即栈的删除操作\n\n四. 栈的抽象数据类型\n\nADT 栈(stack)\nData\n同线性表。元素具有相同的类型，相邻元素具有前驱和后继关系\n\n\nOperation\nInitStack(*S)：初始化操作，建立一个空栈\nDestroyStack(*S)：若栈存在，则销毁它\nClearStack(*S)：将栈清空\nStackEmpty(S)：若栈为空，返回true，否则返回false\nGetTop(S, *e)：若栈存在且非空，用e返回S的栈顶元素\nPush(*S, e)：若栈S存在，插入新元素e到栈S中并成为栈顶元素\nPop(*S, *e)：删除栈S中栈顶元素，并用e返回其值\nStackLength(S)：返回栈S的元素个数\n\n\nendADT\n\n五. 栈的应用\n栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题核心。\n1. 递归\n1） 定义\n一个直接调用自己或通过一系列的调用语句间接地调用自己的函数，称作递归函数。\n2） 条件\n每个递归定义必须至少有一个条件，满足时递归不再进行，即不再引用自身而是返回值退出。\n3） 斐波那契数列\n引例：如果兔子在出生两个月后，就有繁殖能力，一对兔子每个月能生出一对小兔子来。假设所有兔子都不死，那么一年以后可以繁殖多少对兔子呢？\n分析：经过的月数和兔子的总数可以列出下表：\n\n\n\n经过的月数\n兔子对数\n\n\n\n\n1\n1\n\n\n2\n1\n\n\n3\n2\n\n\n4\n3\n\n\n5\n5\n\n\n6\n8\n\n\n7\n13\n\n\n8\n21\n\n\n9\n34\n\n\n10\n55\n\n\n11\n89\n\n\n12\n144\n\n\n\n建模：根据上表我们可以写出以下数学模型\nF(n)={0n=01n=1F(n−1)+F(n−2)n>1\nF(n)=\\begin{cases}\n0 & n=0\t\\\\\n1 & n=1\t\\\\\nF(n-1)+F(n-2) & n>1\n\\end{cases}\nF(n)=​⎩​⎪​⎨​⎪​⎧​​​0​1​F(n−1)+F(n−2)​​​n=0​n=1​n>1​​\n代码：\n\n常规迭代方法\n\nint main()\n{\n    int i;\n    int a[40];\n    a[0] = 0;\n    a[1] = 1;\n    printf(\"%d \", a[0]);\n    printf(\"%d \", a[1]);\n    for(i = 2; i \n\n递归方法\n\nint Fbi(int i)\n{\n    if(i \n2. 四则运算表达式求值——后缀表示法\n1） 定义\n后缀表示法是一种不需要括号的运算表达式的书写方法，也叫作逆波兰表示。表达式中所有的符号都是在要运算数字的后面出现。\n2） 转换为后缀表达式\n规则：\n\n从左到右遍历中缀表达式的每个数字和符号\n若是数字就输出到后缀表达式中\n若是符号，则判断其与栈顶符号的优先级\n若是左括号，则进栈\n若是右括号，将栈顶元素依次出栈，直到遇到左括号（左括号需要出栈，两个括号不用写到后缀表达式中）\n若是优先级不高于栈顶符号的符号，则将栈顶符号出栈并输出，然后与下一个栈顶符号比较\n若是优先级高于栈顶符号，将该符号入栈\n\n\n当中缀表达式遍历完后，将栈顶元素依次出栈并输出\n\n例：将表达式9+(3−1)×3+10÷29+(3-1)\\times 3+10\\div 29+(3−1)×3+10÷2转换为后缀表达式\n\n数字999，输出。\n表达式：999\n栈(从栈底开始)：空\n\n\n符号+++，入栈。\n表达式：999\n栈：+++\n\n\n符号(((，入栈。\n表达式：999\n栈：+++、(((\n\n\n数字333，输出。\n表达式：999、333\n栈：+++、(((\n\n\n符号−-−，入栈。\n表达式：999、333\n栈：+++、(((、−-−\n\n\n数字111，输出。\n表达式：999、333、111\n栈：+++、(((、−-−\n\n\n符号)))，栈顶元素依次出栈并输出，直到遇到(((\n表达式：999、333、111、−-−\n栈：+++\n\n\n符号×\\times×，入栈\n表达式：999、333、111、−-−\n栈：+++、×\\times×\n\n\n数字333，输出\n表达式：999、333、111、−-−、333\n栈：+++、×\\times×\n\n\n符号+++，优先级低于×\\times×，输出×\\times×；优先级不高于+++，输出+++；入栈\n表达式：999、333、111、−-−、333、×\\times×、+++\n栈：+++\n\n\n数字101010，输出。\n表达式：999、333、111、−-−、333、×\\times×、+++、101010\n栈：+++\n\n\n符号÷\\div÷，入栈。\n表达式：999、333、111、−-−、333、×\\times×、+++、101010\n栈：+++、÷\\div÷\n\n\n数字2，输出。\n表达式：999、333、111、−-−、333、×\\times×、+++、101010、222\n栈：+++、÷\\div÷\n\n\n遍历完成，输出栈顶元素\n表达式：999、333、111、−-−、333、×\\times×、+++、101010、222、÷\\div÷、+++\n栈：空\n\n\n后缀表达式为：999 333 111 −-− 333 ×\\times× +++ 101010 222 ÷\\div÷ +++\n\n3） 后缀表达式的计算\n规则：\n\n从左到右遍历后缀表达式的每个数字和符号\n若是数字，则进栈\n若是符号，则将栈顶两个数字出栈进行运算，然后将运算结果进栈\n先出栈的数字作为运算符的右侧运算对象\n后出栈的数字作为运算符的左侧运算对象\n\n\n表达式遍历完成后，将最后的结果数字出栈\n\n例：计算后缀表达式：999 333 111 −-− 333 ×\\times× +++ 101010 222 ÷\\div÷ +++\n\n数字999、333、111先入栈。栈(从栈底开始)：999、333、111\n符号−-−，取出111、333进行运算，结果222入栈。栈：999、222\n数字333，入栈。栈：999、222、333\n符号×\\times×，取出333、222进行运算，结果6入栈。栈：999、666\n符号+++，取出666、999进行运算，结果151515入栈。栈：151515\n数字101010、222入栈。栈：151515、101010、222\n符号÷\\div÷，取出222、101010进行运算，结果555入栈。栈：151515、555\n符号+++，取出555、151515进行运算，结果202020入栈。栈：202020\n遍历完成，取出结果202020。栈：空\n\n"},"数据结构/栈/顺序栈/顺序栈.html":{"url":"数据结构/栈/顺序栈/顺序栈.html","title":"顺序栈","keywords":"","body":"一. 定义\n顺序栈即顺序线性表的简化，将下标为0的一端作为栈底，另外一端作为栈顶。用一个top变量保存栈顶元素在数组中的位置\n二. 概念实现\n\n栈底：数组下标为0的一端\n栈顶：栈顶元素所在的一端\n元素个数：若top指示的是下标，则为top+1；若top指示的是元素相对位置，则为top\n空栈：若top指示的是下标，则为-1时为空；若top指示的是元素相对位置，则为0时为空\n栈满：若top指示的是下标，则为MAXSIZE-1时栈满；若top指示的是元素相对位置，则为MAXSIZE时栈满\n\n"},"数据结构/栈/顺序栈/代码实现/代码实现.html":{"url":"数据结构/栈/顺序栈/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};                                    // 数据项结构\ntypedef struct items ElemType;        // 数据元素类型定义\n\n#define MAXSIZE 20\nstruct stack\n{\n    ElemType data[MAXSIZE];\n    int top;\n};\ntypedef struct stack SqStack;        // 顺序栈定义\n\n"},"数据结构/栈/顺序栈/难点操作/难点操作.html":{"url":"数据结构/栈/顺序栈/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 进栈操作\nStatus Push(SqStack *S, SElemType e)\n{\n    if(S->top == MAXSIZE - 1) {\n        return ERROR;\n    }\n    S->top++;\n    S->data[S->top] = e;\n    return OK;\n}\n\n二. 出栈操作\nStatus Pop(SqStack *S, SElemType *e)\n{\n    if(S->top == -1) {\n        return ERROR;\n    }\n    *e = S->data[S->top];\n    S->top--;\n    return OK;\n}\n\n"},"数据结构/栈/两栈共享空间/两栈共享空间.html":{"url":"数据结构/栈/两栈共享空间/两栈共享空间.html","title":"两栈共享空间","keywords":"","body":"一. 定义\n两栈共享空间一般通过数组的方式实现，即通过两个栈顶指针将一个数组划分为两个顺序栈，其栈底分别在下标为0和下标为MAXSIZE-1的位置。\n二. 概念实现\n\n空栈：栈1的top为-1时栈1为空栈；栈2的top为MAXSIZE时栈2为空栈\n栈满：当top1+1=top2时，栈满\n元素个数：栈1的元素个数即top1+1，栈2的元素个数为MAXSIZE-top2\n\n三. 使用注意\n\n使用该数据结构时，通常都是当两个栈的空间需求有相反关系时，即一个栈增长时另一个栈在缩短的情况。\n且该数据结构只使用于两个栈数据类型相同的情况\n\n"},"数据结构/栈/两栈共享空间/代码实现/代码实现.html":{"url":"数据结构/栈/两栈共享空间/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;\n\n#define MAXSIZE 40\nstruct stack\n{\n    ElemType data[MAXSIZE];\n    int top1;\n    int top2;\n};\ntypedef struct stack SqDulStack;\n\n"},"数据结构/栈/两栈共享空间/难点操作/难点操作.html":{"url":"数据结构/栈/两栈共享空间/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 插入\nStatus Push(SqDoubleStack *S, SElemType e, int stackNumber)\n{\n    if(S->top1+1==S->top2)\n        return ERROR;\n    if(stackNumber==1)\n        S->data[++S->top1]=e;\n    else if(stackNumber==2)\n        S->data[--S->top2]=e;\n    return OK;\n}\n\n二. 删除\nStatus Pop(SqDoubleStack *S, SElemType *e, int stackNumber)\n{\n    if(stackNumber==1){\n        if(S->top1==-1)\n            return ERROR;\n        *e=S->data[S->top1--];\n    }\n    else if(stackNumber==2){\n        if(S->top2==MAXSIZE)\n            return ERROR;\n        *e=S->data[S->top2++];\n    }\n    return OK;\n}\n\n"},"数据结构/栈/链栈/链栈.html":{"url":"数据结构/栈/链栈/链栈.html","title":"链栈","keywords":"","body":"一. 定义\n链栈即栈的链式存储结构\n二. 使用注意\n顺序栈与链栈它们在时间复杂度上是一样的, 均为O(1)O(1)O(1)。对于空间性能，顺序栈需要事先确定一个固定的长度，可能会存在空间浪费的问题，但它的优势是存取时定位很方便，而链栈则要求每个元素都有指针域，这同时也增加了一些内存的开销，但对于栈的长度无限制。\n如果栈的使用过程中元素变化不可预料，有时很小，有时非常大，那么最好是用链栈，反之，如果它的变化在可控范围内，建议使用顺序栈会更好一点。\n"},"数据结构/栈/链栈/代码实现/代码实现.html":{"url":"数据结构/栈/链栈/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"由于对栈的操作总是对栈顶元素的操作，所以为了方便起见，我们需要在栈顶设置一个栈顶指针，而更好的办法是：把头指针作为栈顶指针，具体结构定义如下：\nstruct item\n{\n    int x;\n    int y;\n};                                // 数据项结构\ntypedef struct item ElemType;    // 数据元素类型\n\nstruct node\n{\n    ElemType data;                // 数据域\n       struct node *next;            // 指针域\n};\ntypedef struct node Node;        // 结点类型\ntypedef Node* PNode;            // 结点指针\n\nstruct stack\n{\n    PNode top;                    // 头指针, 指向栈顶结点\n    int length;                    // 栈的长度\n};\ntypedef struct stack LinkStack;    // 链栈类型\n\n"},"数据结构/栈/链栈/难点操作/难点操作.html":{"url":"数据结构/栈/链栈/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 进栈操作\nStatus Push(LinkStack *S, SElemType e)\n{\n    LinkStackPtr s = (LinkStackPtr)malloc(sizeof(StackNode));\n    s->data=e;\n    s->next=S->top;\n    S->top=s;\n    S->count++;\n    return OK;\n}\n\n二. 出栈操作\nStatus Pop(LinkStack *S, SElemType *e)\n{\n    LinkStackPtr p;\n    if(StackEmpty(*S))\n        return ERROR;\n    *e=S->top->data;\n    p=S->top;\n    S->top=S->top->next;\n    free(p);\n    S->count--;\n    return OK;\n}\n\n"},"数据结构/队列/队列.html":{"url":"数据结构/队列/队列.html","title":"队列","keywords":"","body":"一. 分类\n\n顺序队列\n循环队列\n链队列\n\n二. 定义\n队列(queue)是只允许在一端进行插入操作,而在另一端进行删除操作的线性表.\n三. 关键概念\n\nFIFO：First In First Out，先进先出\n\n队尾：允许插入的一端\n\n队头：允许删除的一端\n\n入队列：插入元素到队尾\n出队列：删除队头元素\n\n四. 队列的抽象数据类型\n\nADT 队列(Queue)\nData\n同线性表。元素具有相同的类型，相邻元素具有前驱和后继关系。\n\n\nOperation\nInitQueue(*Q)：初始化操作，建立一个空队列Q。\nDestroyQueue(*Q)：若队列Q存在，则销毁它。\nClearQueue(*Q)：将队列Q清空。\nQueueEmpty(Q)：若队列Q为空，返回true，否则返回false。\nQueueLength(Q)：返回队列Q的元素个数。\nEnQueue(*Q, e)：若队列Q存在，插入新元素e到队列Q中并成为队尾元素。\nDeQueue(*Q, *e)：删除队列Q中队头元素，并用e返回其值。\nGetHead(Q, *e)：若队列Q存在且非空，用e返回队列Q的队头元素。\n\n\nendADT\n\n"},"数据结构/队列/循环队列/循环队列.html":{"url":"数据结构/队列/循环队列/循环队列.html","title":"循环队列","keywords":"","body":"一. 循环队列的定义\n首先介绍顺序队列，即使用顺序存储实现的队列，有一个固定的空间，顺序队列相比于顺序栈更多了一个缺点，顺序队列保存的元素不断在数组后面堆积，前面的元素一个个减少，到最后数组在逻辑上无法存放更多的元素，但实际上数组在前面部分还留有之前的队头元素出队列剩下的空位，而这显然有一个浪费，这也就是为什么顺序栈可行而顺序队列不可行的原因，因为顺序栈栈底部分一直在数组的最前端不会改变。\n所以我们需要优化顺序队列的逻辑，于是有了循环队列。\n循环队列：即队列的头尾相接的顺序存储结构。当队尾已经存到数组最后一个元素后，下一个元素从数组头部开始存储\n二. 关键概念\n首先需要一个队头指针(front)和一个指向队尾元素后一个位置的指针(rear)\n1. 队列空或队列满的判断\n1) 完全存满数组\n第一种情况是完全将数组存满的情况，那么不论是队列为空还是队列已满，二者的状态都是相同的，即都是两个指针指向同一个元素。\n解决办法是：设置一个标志变量flag，当front == rear && flag == 0时，队列为空；当front == rear && flag == 1时队列为满。\n当情况是移动front使得两个指针相等时，flag设置为0；若是移动rear使得两个指针相等时，flag设置为1。\n2) 保留一个空位\n第二种办法是将队列空和队列满区别开。\n即队列为空时front == rear，队列满时front + 1 == rear（此处的+1指一个逻辑循环数组的下一个元素，若front为数组最后一个元素，则front+1为数组第一个元素）。\n若队列的最大尺寸为MAXSIZE，那么队列满的条件是：(rear + 1) % MAXSIZE == front\n2. 队列长度\n可以知道的是：当rear>front和rear时，二者的具体情况是不同的。当rear>front时，队列的长度为rear-front；当rear时，队列的长度为rear-front+MAXSIZE。\n从上述可以推导出求队列长度的通用公式：(rear - front + MAXSIZE) % MAXSIZE。\n"},"数据结构/队列/循环队列/代码实现/代码实现.html":{"url":"数据结构/队列/循环队列/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"#define MAXSIZE 20\nstruct items\n{\n    int x;\n    int y;\n};                                // 数据项定义\ntypedef struct items ElemType;    // 数据元素类型\n\nstruct queue\n{\n    ElemType data[MAXSIZE];\n    int front;\n    int rear;\n};                                // 数据类型定义\ntypedef struct queue Queue;        // 队列类型\n\n"},"数据结构/队列/循环队列/难点操作/难点操作.html":{"url":"数据结构/队列/循环队列/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 入队列\nStatus EnQueue(SqQueue *Q, QElemType e)\n{\n    if((Q->rear+1)%MAXSIZE==Q->front)\n    {\n        return ERROR;\n    }\n    Q->data[Q->rear]=e;\n    Q->rear=(Q->rear+1)%MAXSIZE;\n\n    return OK;\n}\n\n二. 出队列\nStatus DeQueue(SqQueue *Q, QElemType *e)\n{\n    if(Q->front==Q->rear)\n    {\n        return ERROR;\n    }\n    *e=Q->data[Q->front];\n    Q->front=(Q->front+1)%MAXSIZE;\n\n    return OK;\n}\n\n"},"数据结构/队列/链队列/链队列.html":{"url":"数据结构/队列/链队列/链队列.html","title":"链队列","keywords":"","body":"一. 定义\n队列的链式存储结构，即线性表的单链表，只不过只能尾进头出，简称为链队列。\n二. 关键概念\n1. 空队列\n可以设置一个头结点，当两个指针都指向头结点时，即为空队列。\n或不设置头结点，当两个指针都为NULL时，即为空队列。\n"},"数据结构/队列/链队列/代码实现/代码实现.html":{"url":"数据结构/队列/链队列/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};                                    // 数据项定义\ntypedef struct items ElemType;        // 数据元素类型\n\nstruct node\n{\n    ElemType data;                    // 数据域\n    struct node *next;                // 指针域\n};                                    // 结点定义\ntypedef struct node Node;            // 结点类型\n\ntypedef Node *PNode;                // 结点指针类型\n\nstruct queue\n{\n    PNode front;\n    PNode rear;\n};                                    // 链队列结构定义\ntypedef struct queue LinkQueue;        // 链队列类型\n\n"},"数据结构/队列/链队列/难点操作/难点操作.html":{"url":"数据结构/队列/链队列/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 入队操作\nStatus EnQueue(LinkQueue *Q, ElemType e)\n{\n    QueuePtr s=(QueuePtr)malloc(sizeof(QNode));\n    if(!s)\n    {\n        exit(OVERFLOW);\n    }\n    s->data=e;\n    s->next=NULL;\n    Q->rear->next=s;\n    Q->rear=s;\n    return OK;\n}\n\n二. 出队操作\nStatus DeQueue(LinkQueue *Q, ElemType *e)\n{\n    QueuePtr p;\n    if(Q->front==Q->rear)\n    {\n        return ERROR;\n    }\n    p=Q->front->next;\n    *e=p->data;\n    Q->front->next=p->next;\n    if(Q->rear==p)\n        Q->rear=Q->front;\n    free(p);\n    return OK;\n}\n\n"},"数据结构/树/树.html":{"url":"数据结构/树/树.html","title":"树","keywords":"","body":"一. 定义\n树(Tree)是n(n⩾0)n(n\\geqslant 0)n(n⩾0)个结点的有限集。\nn=0n=0n=0时称为空树。在任意一棵非空树中：\n\n有且仅有一个特定的称为根(Root)的结点；\n当n>1n>1n>1时，其余结点可分为m(m>0)m(m>0)m(m>0)个互不相交的有限集：T1T_1T​1​​、T2T_2T​2​​、...、TmT_mT​m​​，其中每一个集合本身又是一棵树，并且称为根的子树(SubTree)。\n\n二. 关键概念\n1. 空树\n不包含任何结点或只包含头结点的树\n2. 根节点\n树最顶端的结点\n3. 结点的度\n结点拥有的子树个数称为结点的度\n4. 树的度\n树内各结点的度的最大值\n5. 结点\n1）定义\n树的结点包含一个数据元素及若干指向其子树的分支。\n2）分类\n\n叶结点/终端结点：度为0的结点\n分支结点/非终端结点：度不为0的结点。除根节点外的分支结点也称作内部节点\n\n3）关系\n\n结点的孩子：结点的子树的根\n结点的双亲：结点的根\n结点的兄弟：同一个双亲的孩子\n结点的祖先：从该结点的根到该结点所经分支上的所有结点\n结点的子孙：以该结点为根的子树中的任一结点\n\n4）其他概念\n\n结点的层次：从根开始定义起，根为第一层，根的孩子为第二层，以此类推。\n堂兄弟：两个结点的双亲结点在同一层则该两个结点互为堂兄弟\n树的深度/高度：树中结点的最大层次\n有序树：如果能将树中结点的各子树看成从左至右是有次序的，不能互换的，则称该树为有序树\n无序树：与有序树相反\n森林：是m(m⩾0)m(m\\geqslant 0)m(m⩾0)棵互不相交的树的集合\n\n三. 抽象数据类型\n\nADT 树(tree)\nData\n树是由一个根节点和若干棵子树构成的。树中结点具有相同数据类型及层次关系。\n\n\nOperation\nInitTree(*T)：构造空树T。\nDestroyTree(*T)：销毁树T。\nCreateTree(*T, definition)：按definition给出的定义来构造树。\nClearTree(*T)：若树T存在，则将树T清为空树。\nTreeEmpty(T)：若T为空树，返回true，否则返回false。\nTreeDepth(T)：返回树T的深度。\nRoot(T)：返回T的根节点。\nValue(T, cur_e)：cur_e是树T中的一个结点，返回此结点的值。\nAssign(T, cur_e, value)：给树T的结点cur_e赋值为value。\nParent(T, cur_e)：若cur_e是树T的非根结点，则返回它的双亲结点，否则返回空。\nLeftChild(T, cur_e)：若cur_e是树T的非叶结点，则返回它的最左孩子，否则返回空。\nRightSibling(T, cur_e)：若cur_e有右兄弟，则返回它的右兄弟，否则返回空。\nInsertChild(*T, *p, i, c)：其中p指向树T的某个结点，i为所指结点p的度加上1，非空树c与T不相交，操作结果为插入c为树T中p所指结点的第i棵子树。\nDeleteChile(*T, *p, i)：其中p指向树T的某个结点，i为所指结点p的度，操作结果为删除T中p所指结点的第i棵子树。\n\n\nendADT\n\n四. 树、森林和二叉树的转化\n1. 树转化为二叉树\n\n将每一层的所有兄弟相连\n将每个结点的长子之外的其他孩子结点全部断开\n\n2. 森林转化为二叉树\n\n先将每一个树转化为二叉树\n以第一个树为根，将第二棵树的根结点接在第一棵二叉树的右孩子结点处\n然后将第三棵树的根结点接在第二棵二叉树的右孩子结点处\n以此类推\n\n3. 二叉树转化为树\n原则：\n\n二叉树中每个结点的左孩子结点都是原树的长子结点\n二叉树中每个结点的右孩子结点都是原树该结点的右兄弟结点\n\n方法：\n\n加线：若某结点的左孩子结点存在，则将这个左孩子结点的右孩子结点，右孩子结点的右孩子结点，右孩子结点的右孩子结点的右孩子结点……，将所有这些结点与该结点连接起来\n去线：删除原二叉树中所有结点与其右孩子结点的连线\n\n4. 二叉树转化为森林\n\n判断二叉树是否能分成森林：看其根结点有无右孩子，有就是森林，没有就是一棵树\n若能转化为森林，则从根结点开始，若右孩子存在，则断开与右孩子结点的连线。\n接着查看分离后的右子树，按照上述的方法将其右子树断开\n以此类推\n\n五. 树与森林的遍历\n1. 树的遍历\n1）先根遍历\n先访问树的根结点，然后依次先根遍历根的每棵子树\n2）后根遍历\n先依次后根遍历每棵子树，再访问根节点。\n2. 森林的遍历\n1）前序遍历\n先访问森林中第一棵树的根结点，然后再依次先根遍历根的每棵子树，再依次用同样方式遍历剩余树\n2）后序遍历\n先访问森林中第一棵树，后根遍历该树的每棵子树，然后再访问根结点，再依次用同样方式遍历剩余树。\n"},"数据结构/树/普通树/普通树.html":{"url":"数据结构/树/普通树/普通树.html","title":"普通树","keywords":"","body":"主要讨论树的存储方式。\n双亲表示法：讨论用数组这种数据结构怎样表示一个树的数据结构。\n孩子表示法：讨论用单链表如何实现树的数据结构。\n孩子兄弟表示法：引入二叉树的表示方法。\n"},"数据结构/树/普通树/代码实现/代码实现.html":{"url":"数据结构/树/普通树/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 双亲表示法\n1. 分析\n如果用数组来存储树这种结构，按照树的定义，一般需要能够找到双亲，孩子，以及兄弟。\n那么如何找到双亲呢？只需要在数组的每个结点添加一个指向双亲的指针域就可以了，特殊的，我们可以将根节点的双亲指针设置为-1。\n接下来讨论如何找到孩子。如果只有双亲指针那么查找孩子结点就得需要遍历整个结构，所以我们可以再添加一个指向其长子（最左边的孩子）的指针，特殊的，我们将没有孩子的结点的长子域设置为-1。\n再然后，如果只有上述两个指针，查找兄弟依然是一个困难的事情。我们可以再给每个结点添加一个右兄弟指针，特殊的，如果没有右兄弟，那么将右兄弟指针设置为-1。\n2. 代码实现\n#define MAXSIZE 100\nstruct items\n{\n    int x;\n    int y;\n};                                    // 数据项定义\ntypedef struct items ElemType;        // 数据元素类型\n\nstruct node\n{\n    ElemType data;\n    int parent;\n    int lchild;\n    int rbrother;\n};                                    // 结点定义\ntypedef struct node Node;            // 结点类型\n\nstruct tree\n{\n    Node nodes[MAXSIZE];            // 结点数组\n    int root;                        // 根结点的位置\n    int length;                        // 结点的数量\n};                                    // 双亲表示法的树类型定义\ntypedef struct tree Tree;            // 双亲表示法的树类型\n\n二. 孩子表示法\n1. 分析\n如果我们有一个根节点的指针，那么我们只要知道每一个结点的所有子树的根节点就可以遍历整个树。\n我们可以暂时使用链表来存储，每个结点包括数据域和多个指针域用于指向所有的子树的根结点。该方法的问题是，指针域的个数如何确定？有两种方法，一是将所有结点的指针域的个数设置为树的度，即所有结点的度的最大值。该方法在树中各结点度相差不大时很好用，但是在各结点度相差很大时，就会明显地浪费空间；第二种方法就是在每一个结点设置一个度域，用以保存该结点的度，然后将结点的子域个数设置为度的值，该方法可以有效的减少空间浪费，但是由于每个结点都是不相同的结构，并且还要维护结点的度的数值，在运算上会带来时间上的损耗。\n因此，我们可以将每个结点的孩子结点排列起来，以单链表作存储结构。然后将n个头指针组成一个线性表，采用顺序存储结构，放进一个一维数组中。\n当然，如果只有每个结点的孩子结点，那么当查询双亲结点时就比较复杂，所以可以在每个头结点中添加一个双亲指针，特殊的，将根节点的双亲指针设置为-1。\n2. 代码实现\n#define MAXSIZE 100\nstruct items\n{\n    int x;\n    int y;\n};                                    // 数据项\ntypedef struct items ElemType;        // 数据元素类型\n\nstruct node\n{\n    int child;                        // 保存孩子的位置\n    struct node *next;                // 下一个孩子链表的孩子结点\n};                                    // 结点定义\ntypedef struct node Node;            // 结点类型\ntypedef Node *PNode;                // 结点指针\n\nstruct box\n{\n    ElemType data;                    // 数据域\n    int parent;                        // 双亲指针\n    PNode firstchild;                // 孩子指针\n};\ntypedef struct box Box;                // 数组元素类型\n\nstruct tree\n{\n    Box nodes[MAXSIZE];                // 数据\n    int root;                        // 根结点的位置\n    int length;                        // 结点的个数\n}\n\n三. 孩子兄弟表示法\n1. 分析\n对于任何一棵树，它的结点的第一个孩子如果存在那么其孩子结点一定是唯一的，如果它的右兄弟存在，那么其右兄弟结点也一定是唯一的。\n所以我们可以给每一个结点添加两个指针，一个指向孩子结点，一个指向右兄弟结点。每一个结点只包含两个指针，这也就是二叉树。\n当然，和前两种表示方法类似，要查找结点的双亲依旧需要设置一个双亲指针。\n2. 代码实现\nstruct items\n{\n    int x;\n    int y;\n};                                    // 数据项\ntypedef struct items ElemType;        // 数据元素\n\nstruct node\n{\n    ElemType data;\n    struct node *firstchild;\n    struct node *rightsib;\n};                                    // 结点定义\ntypedef struct node Node;            // 结点类型\ntypedef Node *PNode;                // 结点指针\n\nstruct tree\n{\n    PNode root;\n    int length;\n};                                    // 树类型定义\ntypedef struct tree Tree;            // 树类型\n\n"},"数据结构/树/二叉树/二叉树.html":{"url":"数据结构/树/二叉树/二叉树.html","title":"二叉树","keywords":"","body":"一. 定义\n二叉树（Binary Tree）是n(n⩾0)n(n\\geqslant 0)n(n⩾0)个结点的有限集合，该集合或者为空集（称为空二叉树），或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右子树的二叉树组成。一般用链式存储结构实现。\n二. 特点\n\n每个结点最多有两棵子树，所以二叉树中不存在度大于2的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。\n左子树和右子树是有顺序的，次序不能任意颠倒。\n即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。\n\n根据上述特点，可以总结出以下五种二叉树的形态：\n\n空二叉树\n只有一个根节点\n根结点只有左子树\n根结点只有右子树\n根结点既有左子树又有右子树\n\n三. 特殊二叉树\n1. 斜树\n所有结点都只有左子树或右子树的二叉树称为斜树。所有结点都只有左子树的二叉树叫做左斜树；所有结点都只有右子树的二叉树叫做右斜树。\n2. 满二叉树\n在一棵二叉树中，除了叶结点之外，所有结点都存在左子树和右子树，并且所有的叶结点都在同一层上，这样的二叉树称为满二叉树。\n特点：\n\n叶子只能出现在最下一层\n非叶子节点的度一定是2\n在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多\n\n3. 完全二叉树\n对一棵具有nnn个结点的二叉树按层序编号，如果编号为i(1⩽i⩽n)i(1\\leqslant i\\leqslant n)i(1⩽i⩽n)的结点与同样深度的满二叉树中编号为iii的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。\n特点：\n\n叶子结点只能出现在最下两层\n最下层的叶子一定集中在左部连续位置\n倒数第二层，若有叶子结点，一定都在右部连续位置\n如果结点度为1，则该结点只有左孩子，即不存在只有右子树的情况。\n同样结点的二叉树，完全二叉树的深度最小。\n\n四. 二叉树的性质\n\n在二叉树的第iii层至多有2i−12^{i-1}2​i−1​​个结点（i⩾1i\\geqslant 1i⩾1）\n深度为kkk的二叉树至多有2k−12^k-12​k​​−1个结点（k⩾1k\\geqslant 1k⩾1）\n对任何一棵二叉树T，如果其终端结点数为n0n_0n​0​​，度为2的结点数为n2n_2n​2​​，则n0=n2+1n_0=n_2+1n​0​​=n​2​​+1\n具有nnn个结点的完全二叉树的深度为[log2n]+1[log_2 n]+1[log​2​​n]+1 ( [x][x][x]表示不大于xxx的最大整数 )\n如果对一棵有nnn个结点的完全二叉树（其深度为[log2n]+1[log_2 n]+1[log​2​​n]+1）的结点按层序编号（从第1层到第[log2n]+1[log_2 n]+1[log​2​​n]+1层，每层从左到右），对任意节点i(1⩽i⩽n)i(1\\leqslant i \\leqslant n)i(1⩽i⩽n)有：\n如果i=1i=1i=1，则结点iii是二叉树的根，无双亲；如果i>1i>1i>1，则其双亲是结点[i/2][i/2][i/2]\n如果2i>n2i>n2i>n，则结点iii无左孩子（结点iii为叶子结点）；否则其左孩子是结点2i2i2i\n如果2i+1>n2i+1>n2i+1>n，则结点iii，无右孩子；否则其右孩子是结点2i+12i+12i+1\n\n\n\n"},"数据结构/树/二叉树/代码实现/代码实现.html":{"url":"数据结构/树/二叉树/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;\n\nstruct position\n{\n    int level;                        // 深度\n    int order;                        // 当前深度的位序\n};                                    // 定位类型\ntypedef struct position Pos;        // 用于定位\n\nstruct status\n{\n    ElemType elem;\n    POS position;\n};                                    // 保存当前结点所有信息\ntypedef struct status Status;        // 状态元素类型\n\nstruct node\n{\n    Status data;                    // 包含状态的数据域\n    struct node *leftchild;            // 左孩子\n    struct node *rightchild;        // 右孩子\n    struct node *parent;            // 双亲\n    struct node *rightbrother;        // 右兄弟\n};\ntypedef struct node Node;            // 结点类型\ntypedef Node *PNode;                // 结点指针\n\nstruct tree\n{\n    PNode root;                        // 头指针\n    int length;                        // 当前树的结点个数\n};\ntypedef struct tree BiTree;            // 链式二叉树\ntypedef BiTree PtrBiTree;            // 链式二叉树指针\n\n"},"数据结构/树/二叉树/难点操作/难点操作.html":{"url":"数据结构/树/二叉树/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 遍历\n1. 定义\n二叉树的遍历是指从根结点出发，按照某种次序依次访问二叉树中的所有结点，使得每个结点被访问一次且仅被访问一次。\n2. 算法\n1) 前序遍历\n规则：若二叉树为空，则空操作返回，否则先访问根节点，然后前序遍历左子树，再前序遍历右子树。\n算法：通过递归的方法进行前序遍历\nvoid PreOrderTraverse(BiTree T)\n{\n    if(T==NULL)\n        return;\n    printf(\"%c\",T->data);\n    PreOrderTraverse(T->lchild);\n    PreOrderTraverse(T->rchild);\n}\n\n2) 中序遍历\n规则：若树为空，则空操作返回，否则从根结点开始（注意并不是先访问根结点），中序遍历根结点的左子树，然后是访问根结点，最后中序遍历右子树。\n算法：同样用递归的方法解决，其于前序遍历的区别在于递归函数调用的顺序不同\nvoid InOrderTraverse(BiTree T)\n{\n    if(T==NULL)\n        return;\n    InOrderTraverse(T->lchild);\n    printf(\"%c\",T->data);\n    InOrderTraverse(T->rchild);\n}\n\n3) 后序遍历\n规则：若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。\n算法：同样使用递归的方法解决，同时改变部分调用顺序\nvoid PostOrderTraverse(BiTree T)\n{\n    if(T==NULL)\n        return;\n    PostOrderTraverse(T->lchild);\n    PostOrderTraverse(T->rchild);\n    printf(\"%c\",T->data);\n}\n\n4) 层序遍历\n规则：若树为空，则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。\n3. 遍历结果的推导\n即根据某一棵树，通过其按照某两种遍历方法得到的遍历顺序推断其原本的结构或推断用另外一种方法对其进行推导的结果。\n原则：\n\n已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树。\n已知后续遍历序列和中序遍历序列，可以唯一确定一棵二叉树。\n\n注意：已知前序和后序遍历，是不能确定一棵二叉树的。\n"},"数据结构/树/堆/堆.html":{"url":"数据结构/树/堆/堆.html","title":"堆","keywords":"","body":"一. 定义\n即用数组存储的二叉树结构。同时数组的下标要能够体现结点之间的逻辑关系，比如双亲与孩子的关系，左右兄弟的关系等。\n其具有以下某种性质：\n\n每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆\n每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆\n\n二. 关键概念\n\n序号：即数组下标，按照完全二叉树的顺序进行编号，如果中间某个序号的元素不存在，则该下标不保存值。\n左孩子：即实际树的长子结点，当二叉树对应的完全二叉树的结点数为nnn时，对于任一结点iii，其左孩子为结点2i2i2i。当2i>n2i>n2i>n时，则结点iii无左孩子。\n右孩子：即实际树的右兄弟结点，当二叉树对应的完全二叉树的结点数为nnn时，对于任一结点iii，其右孩子为结点2i+12i+12i+1。当2i+1>n2i+1>n2i+1>n时，则结点iii无右孩子。\n双亲：若有结点iii，则其双亲结点为i/2i/2i/2\n右兄弟：若有结点iii，且i+1i+1i+1结点存在，则i+1i+1i+1结点即为该结点的右兄弟结点\n\n三. 缺陷\n如果有这样一种极端情况，一棵深度为kkk的右斜树，它只有kkk个结点，但是所需要分配的存储单元空间却有2k−12^k-12​k​​−1个。\n此时会造成大量的空间浪费。\n"},"数据结构/树/堆/代码实现/代码实现.html":{"url":"数据结构/树/堆/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;            // 数据元素类型\n\nstruct node\n{\n    ElemType data;\n    int flag;                            // 当前结点的状态，1为有值，0为无值\n};\ntypedef struct node Node;                // 数组元素的类型\ntypedef Node *PNode;                    // 元素指针\n\nstruct tree\n{\n    PNode SqBiTree;                        // 保存树的数组\n    int length;                            // 树的总结点个数，包括未被使用的结点\n};\ntypedef struct tree Tree;                // 顺序二叉树类型\n\nstruct position\n{\n    int level;                            // 结点所在层号\n    int order;                            // 所在层的序号\n};                                        // 位置类型定义，按满二叉树编号\ntypedef struct position Pos;            // 位置类型，用于指定插入、删除或查询的位置\n\n"},"数据结构/树/线索二叉树/线索二叉树.html":{"url":"数据结构/树/线索二叉树/线索二叉树.html","title":"线索二叉树","keywords":"","body":"一. 前言\n对于普通的二叉树而言，每创建一个结点都会有一个指针域，在这个指针域中，并非所有指针都能用上。如果一个结点的指针域只包含左孩子指针和右孩子指针，那么对于一个有n个结点的二叉链表而言，将会存在2n−(n−1)=n+12n-(n-1)=n+12n−(n−1)=n+1个空指针，如果这个n值很大，那么其将会浪费大量的内存。\n二. 定义\n如果将二叉链表进行中序遍历，将会得到一个序列，对序列中某个元素而言，紧靠在该元素前的元素称为这个元素的前驱，而紧靠在该元素后的元素称为这个元素的后继。\n如果将所有空指针域中指向左孩子的指针指向其前驱；所有空指针域中指向右孩子的指针指向其后继；既是空指针，也没有前驱或者后继的，将该指针设为空。\n按照上述规则构成的二叉链表就是一个线索二叉树。\n三. 扩展\n1. 遍历方法\n二叉链表不一定按照中序遍历，按照其他方法进行遍历也可以，只要将遍历所得的序列作为标准定义前驱和后继即可。\n2. 问题\n如果按照以上的方法构建了一个线索二叉树，存在一个问题是：树中的指针域可能指向它的孩子，也可能指向它的前驱后继，如果只凭借两个指针，是无法对其属性进行判断的。\n方法是再建立两个标志，分别指示两个指针的状态。一般设置为当标志为0时，该指针指向该结点的孩子，为1时指向该结点的前驱或后继。\n四. 用途\n如果所用的二叉树需要经常遍历或查找结点时需要某种遍历序列中的前驱和后继，那么采用线索二叉链表的存储结构就是非常不错的选择。\n"},"数据结构/树/线索二叉树/代码实现/代码实现.html":{"url":"数据结构/树/线索二叉树/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;\n\nstruct pos\n{\n    int level;\n    int order;\n};\ntypedef struct pos Pos;\n\nstruct data\n{\n    ElemType elem;\n    Pos position;\n};\ntypedef struct data Data;\n\nstruct node\n{\n    Data data;\n    struct node *lchild;\n    struct node *rchild;\n    int lflag;\n    int rflag;\n};\ntypedef struct node Node;\ntypedef Node *PNode;\n\nstruct tree\n{\n    PNode root;\n    int length;\n};\ntypedef struct tree BiThrNode;\ntypedef BiThrNode *PtrBiThrNode;\n\n"},"数据结构/树/线索二叉树/难点操作/难点操作.html":{"url":"数据结构/树/线索二叉树/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 构造线索二叉树\n二. 线索二叉树的遍历\n"},"数据结构/树/哈夫曼树/哈夫曼树.html":{"url":"数据结构/树/哈夫曼树/哈夫曼树.html","title":"哈夫曼树","keywords":"","body":"一. 引例\n想象一个场景，如果把学生考试的分数转换成对应的等级，加入满分为100分，等级按照十分一个档次，90分以上为A，80分以上为B，70分以上为C，60分以上为D，60分以下为E。\n假设现在有一个分数a，这个场景可以转换为一个二叉树：\n\n根结点判断：a\n若成立，则进入其左孩子，即E等级；若不成立，则进入其右孩子，即判断a\n若成立，进入其左孩子，即D等级；若不成立，则进入其右孩子，即判断a\n以此类推，直到获得叶子结点上的等级然后退出\n\n其形式如下:\n\n在实际的学习过程中，学生的成绩一般如下分布：\n\n\n\n分数\n占比\n\n\n\n\n0~59\n5%\n\n\n60~69\n15%\n\n\n70~79\n40%\n\n\n80~89\n30%\n\n\n90~100\n10%\n\n\n\n在上述的图结构中，要判断70分以上的等级都需要经过3次以上的判断才可以得到结果，这显然不合理。\n先说结论，可以按照以下结构构造这个树结构：\n\n二. 定义\n首先将二叉树简化成叶子结点带权的二叉树，如下图所示：\n\n1. 关键概念\n\n路径：从树中一个结点到另一个结点之间的分支构成两个结点之间的路径\n路径长度：路径上的分支数目即为路径长度\n树的路径长度：从树根到每一结点的路径长度之和\n带权路径长度：从该结点到根结点之间的路径长度与结点上权的乘积。\n树的带权路径长度：树中所有叶子结点的带权路径长度之和\n\n2. 定义\n假设有nnn个权值{ w1w_1w​1​​， w2w_2w​2​​， ···， wnw_nw​n​​ }，构造一棵有nnn个叶子结点的二叉树，每个叶子结点带权wkw_kw​k​​，每个叶子结点的路径长度为lkl_kl​k​​，则其中带权路径长度WPL最小的二叉树称为哈夫曼树。\n三. 原理\n\n首先把有权值的叶子结点按照从小到大的顺序排列成一个有序序列，即A5A5A5，E10E10E10，B15B15B15，D30D30D30，C40C40C40\n\n取两个最小权值的结点作为一个新结点N1N_1N​1​​的两个子结点，较小的是左孩子，如下图：\n\n\n然后将N1N_1N​1​​看成一个整体，其权值为两个子结点权值之和，此时序列为：N115N_115N​1​​15，B15B15B15，D30D30D30，C40C40C40\n\n再从中取两个最小权值的结点作为一个新结点N2N_2N​2​​的两个子结点，如下图：\n\n\n重复操作，最终可以得到下面这个树结构：\n\n\n\n规则\n\n根据给定的nnn个权值{ w1w_1w​1​​， w2w_2w​2​​， ···， wnw_nw​n​​ }构成nnn棵二叉树的集合F=F=F= { T1T_1T​1​​， T2T_2T​2​​， ···， TnT_nT​n​​ }，其中每棵二叉树TiT_iT​i​​中只有一个带权为wiw_iw​i​​的根结点，其左右子树均为空。\n在FFF中选取两棵根结点的权值最小的树作为左右子树构造一棵新的二叉树，且置新的二叉树的根结点的权值为其左右子树上根结点的权值之和。\n在FFF中删除这两棵树，同时将新得到的二叉树加入FFF中。\n重复步骤2和3，直到FFF只含一棵树为止。这就是哈夫曼树\n\n四. 应用：哈夫曼编码\n1. 引入\n如果要将一串文字\"BADCADFEED\"通过网络传输给别人，假设英文字符总共只有以下六个，并且有以下频率关系：\n\n\n\nA\nB\nC\nD\nE\nF\n\n\n\n\n27\n8\n15\n15\n30\n5\n\n\n\n如果按照完整数据传输的方式，即按照对应的二进制字符进行传输，假设对应的二进制编码为：\n\n\n\nA\nB\nC\nD\nE\nF\n\n\n\n\n000\n001\n010\n011\n100\n101\n\n\n\n那么需要传输的数据为：\n001 000 011 010 000 011 101 100 100 011\n一共30个字符\n2. 哈夫曼编码\n将这六个字符按照权重先构造出相应的哈夫曼树：\n\n然后将每个结点到其左子树的分支设置为0，结点到其右子树的分支设置为1，如下图所示：\n\n从该树中，可以得到新的字符编码：\n\n\n\nA\nB\nC\nD\nE\nF\n\n\n\n\n01\n1001\n101\n00\n11\n1000\n\n\n\n此时需要传输的数据为：\n1001 01 00 101 01 00 1000 11 11 00\n一共25个字符。\n3. 总结\n哈夫曼编码即将原有的字符按照出现频率对其进行重排，此时出现越频繁的字符，其编码就越短，成功达到了压缩的目的。\n4. 注意\n\n若要设计长短不等的编码，则必须是任一自负的编码都不是另一个字符的编码的前缀，这种编码称为前缀编码。\n对于哈夫曼编码，发送方和接收方必须使用同样的哈夫曼编码规则进行编解码才行\n\n"},"数据结构/图/图.html":{"url":"数据结构/图/图.html","title":"图","keywords":"","body":"一. 定义\n图(Graph)是由顶点的有穷非空集合和顶点之间边的集合组成的，通常表示为G（V，E），其中，G表示一个图，V是图G中顶点的集合，E是图G中边的集合。\n二. 关键概念\n1. 基础概念\n\n顶点：即数据元素。线性表中数据元素叫元素，树中数据元素叫结点，在图中数据元素称为顶点（Vertex）\n边：在图中，任意两个顶点之间的关系用边来表示，边集可为空。在线性表中，相邻数据元素之间具有线性关系，在树结构中，相邻两层的结点具有层次关系。\n子图：假设有两个图，其中一个图的顶点集和边集都完全包含于另一个图，则称该图是另一个图的子图（Subgraph）。\n\n2. 无向图\n\n无向边：图中两个顶点（viv_iv​i​​， vjv_jv​j​​)之间的边没有方向，则称这条边为无向边（Edge），用无序偶对(viv_iv​i​​, vjv_jv​j​​)表示，(vjv_jv​j​​, viv_iv​i​​)与其相同\n无向图：图中任意两个顶点之间的边都是无向边，则称该图为无向图（undirected graphs)。\n\n3. 有向图\n\n有向边：若从顶点viv_iv​i​​到vjv_jv​j​​的边有方向，则称这条边为有向边，也称为弧（Arc），用有序偶\\viv_iv​i​​, vjv_jv​j​​>表示。有序偶有方向，\\vjv_jv​j​​, viv_iv​i​​>与其不相同。\n弧尾：在上例中，viv_iv​i​​称为弧尾（Tail）\n弧头：在上例中，vjv_jv​j​​称为弧头（Head）\n有向图：如果图中任意两个顶点之间的边都是有向边，则称该图为有向图（directed graphs）\n\n4. 分类\n\n简单图：在图中，若不存在顶点到其自身的边，且同一条边不重复出现，则称这样的图为简单图。\n\n无向完全图：在无向图中，如果任意两个顶点之间都存在边，则称该图为无向完全图。\n\n性质：含有nnn个顶点的无向完全图有n×(n−1)2{n\\times (n-1)}\\over 2​2​​n×(n−1)​​条边。\n\n\n有向完全图：在有向图中，如果任意两个顶点之间都存在方向相反的两条弧，则称该图为有向完全图。\n\n性质：含有nnn个顶点的有向完全图有n×(n−1)n\\times (n-1)n×(n−1)条边\n\n\n\n\n边数：对于具有nnn个顶点和eee条边的图\n\n无向图：0⩽e⩽n(n−1)/20\\leqslant e\\leqslant n(n-1)/20⩽e⩽n(n−1)/2\n有向图：0⩽e⩽n(n−1)0\\leqslant e\\leqslant n(n-1)0⩽e⩽n(n−1)\n\n\n\n稀疏图：有很少条边或弧的图称为稀疏图\n稠密图：与稀疏图相反的称为稠密图\n\n5. 网\n\n权：有些图的边或弧具有与它相关的数字，这种与图的边或弧相关的数叫做权（Weight）\n网：带权的图通常称为网（Network）\n\n6. 顶点与边的关系\n\n邻接点\n无向图：对于无向图，如果两个顶点可以构成的无向边属于该图的边集中，则称这两个顶点互为邻接点（Adjacent）。\n有向图：对于有向图，如果两个顶点vvv和v′v'v​′​​构成的一条弧\\vvv, v′v'v​′​​>属于该图的边集，则称顶点vvv邻接到顶点v′v'v​′​​，顶点v′v'v​′​​邻接自顶点vvv。\n\n\n相关联\n无向图：对于某边(viv_iv​i​​, vjv_jv​j​​)，其依附（incident）于顶点viv_iv​i​​和vjv_jv​j​​，或者说：(viv_iv​i​​, vjv_jv​j​​)与顶点viv_iv​i​​和vjv_jv​j​​相关联。\n有向图：对于弧\\vvv, v′v'v​′​​>，可以说弧\\vvv, v′v'v​′​​>和顶点vvv，v′v'v​′​​相关联。\n\n\n顶点的度\n无向图：与某个顶点相关联的边的数目称为度（Degree），记为TD(v)TD(v)TD(v)。\n有向图：顶点vvv的度为：TD(v)=ID(v)+OD(v)TD(v)=ID(v)+OD(v)TD(v)=ID(v)+OD(v)。\n入度：以顶点vvv为头的弧的数目称为vvv的入度（InDegree），记为ID(v)ID(v)ID(v)。\n出度：以顶点vvv为尾的弧的数目称为vvv的出度（OutDegree），记为OD(v)OD(v)OD(v)。\n\n\n\n\n边数\n无向图：无向图其值为各顶点度数和的一半，简记为：e=12∑i=1nTD(vi)e= {1\\over 2}\\sum_{i=1}^nTD(v_i)e=​2​​1​​∑​i=1​n​​TD(v​i​​)\n有向图：e=∑i=1nID(vi)=∑i=1nOD(vi)e=\\sum_{i=1}^nID(v_i)=\\sum_{i=1}^nOD(v_i)e=∑​i=1​n​​ID(v​i​​)=∑​i=1​n​​OD(v​i​​)\n\n\n路径\n无向图：对于无向图G=(V,{E})G=(V,\\{E\\})G=(V,{E})中从顶点vvv到顶点v′v'v​′​​的路径（Path）是一个顶点序列：(v=vi0v=v_{i_0}v=v​i​0​​​​, vi1v_{i_1}v​i​1​​​​, ···, vim=v′v_{i_m}=v'v​i​m​​​​=v​′​​)，其中任意相邻的两个顶点构成的边都属于无向图GGG的边集。该序列的整体前后顺序可以颠倒。\n有向图：如果GGG是有向图，那么顶点vvv到v′v'v​′​​的路径仍然类似于上述的顶点序列，但是该序列的整体前后顺序不能颠倒，且任意前后相邻的两个顶点构成的弧都属于有向图GGG的边集，注意这两个顶点在序列中排在前的作为弧尾，排在后的作为弧头。\n\n\n路径的长度：即路径上的边或弧的数目。\n回路（环）：第一个顶点和最后一个顶点相同的路径称为回路或环（Cycle）。\n简单路径：序列中顶点不重复出现的路径称为简单路径\n简单回路（环）：除了第一个顶点和最后一个顶点之外，其余顶点不重复出现的回路，称为简单回路或简单环\n\n7. 连通图\n\n连通：在无向图GGG中，如果从顶点vvv到顶点v′v'v​′​​有路径，则称vvv和v′v'v​′​​是连通的。\n连通图：对于图中顶点集中存在的任意两个顶点都是连通的，则称GGG是连通图（Connected Graph）\n连通分量：无向图中的极大连通子图称为连通分量。\n注意1：要是子图\n注意2：子图要是连通的\n注意3：连通子图含有极大顶点数\n注意4：具有极大顶点数的连通子图包含依附于这些顶点的所有边\n\n\n强连通图：在有向图GGG中，如果对于每一对viv_iv​i​​、vj∈Vv_j\\in Vv​j​​∈V、vi≠vjv_i\\neq v_jv​i​​≠v​j​​，从viv_iv​i​​到vjv_jv​j​​和从vjv_jv​j​​到viv_iv​i​​都存在路径，则称GGG是强连通图\n注意：强连通图不一定每两个顶点之间都有两条方向相反的弧，因为在定义中强调是存在两个点之间的路径即可，如果图中所有顶点之间可以构成单向闭环，那么此时也是强连通图。\n\n\n强连通分量：有向图中的极大强连通子图称做有向图的强连通分量\n生成树：一个连通图的生成树是一个极小的连通子图，它含有图中全部的nnn个顶点，但只有足以构成一棵树的n−1n-1n−1条边\n有向树：如果一个有向图恰有一个顶点的入度为0，其余顶点的入度均为1，则是一个有向树\n生成森林：一个有向图的生成森林由若干棵有向树组成，含有图中全部顶点，但只有足以构成若干棵不相交的有向树的弧\n\n三. 图的抽象数据类型\n\nADT 图(Graph)\nData\n顶点的有穷非空集合和边的集合\n\n\nOperation\nCreateGraph(*G, V, VR)：按照顶点集V和边弧集VR的定义构造图\nDestroyGraph(*G)：若图G存在则销毁\nLocateVex(G, u)：若图G中存在顶点u，则返回图中的位置\nGetVex(G, v)：返回图G中顶点v的值\nPutVex(G, v, value)：将图G中顶点v赋值value\nFirstAdjVex(G, *v)：返回顶点v的一个邻接顶点，若顶点在G中无邻接顶点返回空\nNextAdjVex(G, v, *w)：返回顶点v相对于顶点w的下一个邻接顶点，若w是v的最后一个邻接点则返回空\nInsertVex(*G, v)：在图G中增添新顶点v\nDeleteVex(*G, v)：删除图G中顶点v及其相关的弧\nInsertArc(*G, v, w)：在图G中增添弧\\，若G是无向图，还需要增添对称弧\\\nDeleteArc(*G, v, w)：在图G中删除弧\\，若G是无向图，还需要删除对称弧\\\nDFSTraverse(G)：对图G中进行深度优先遍历，在遍历过程中对每个顶点调用\nHFSTraverse(G)：对图G中进行广度优先遍历，在遍历过程中对每个顶点调用\n\n\nendADT\n\n"},"数据结构/图/邻接矩阵/邻接矩阵.html":{"url":"数据结构/图/邻接矩阵/邻接矩阵.html","title":"邻接矩阵","keywords":"","body":"一. 引入\n由于图是由顶点和边或弧两部分组成。合在一起比较困难，很容易想到使用两个结构来分别存储。\n顶点不分大小、主次，用一个一维数组来存储是很不错的选择。\n而边或弧由于是顶点和顶点之间的关系，一维搞不定，所以考虑用一个二维数组来存储。\n二. 定义\n图的邻接矩阵（Adjacency Matrix）存储方式是用两个数组来表示图。一个一维数组存储图中顶点信息，一个二维数组（称为邻接矩阵）存储图中的边或弧的信息。\n1. 无向图\n设图GGG有nnn个顶点，则邻接矩阵是一个n×nn\\times nn×n的方阵，当任意两个顶点之间的边或弧属于图的边集，则将该阵点设置为1，否则设置为0，即形成一个由0和1组成的矩阵。\n对于下图：\n\n可以表示成如下的矩阵：\n[0111101011011010]\n\\left[\n\\begin{matrix}\n0&1&1&1\\\\\n1&0&1&0\\\\\n1&1&0&1\\\\\n1&0&1&0\n\\end{matrix}\n\\right]\n​⎣​⎢​⎢​⎡​​​0​1​1​1​​​1​0​1​0​​​1​1​0​1​​​1​0​1​0​​​⎦​⎥​⎥​⎤​​\n（0,0）元素表示v0v_0v​0​​与v0v_0v​0​​的关系，以此类推。\n2. 有向图\n与无向图的主要区别是，有向图的阵点值将不再对称。\n由于有向图的弧是有方向的，所以定义邻接矩阵的行数为弧尾，列数为弧头。\n对于下面的图：\n\n可以表示成以下的矩阵：\n[0001101011000000]\n\\left[\n\\begin{matrix}\n0&0&0&1\\\\\n1&0&1&0\\\\\n1&1&0&0\\\\\n0&0&0&0\n\\end{matrix}\n\\right]\n​⎣​⎢​⎢​⎡​​​0​1​1​0​​​0​0​1​0​​​0​1​0​0​​​1​0​0​0​​​⎦​⎥​⎥​⎤​​\n3. 网\n对于网这种图，由于它的边或弧上带有权值，所以需要将这些权值保存下来。其方法就是将原本的邻接矩阵的0,1值用权值代替，具体规则如下：\n\n对于存在的边或弧，将该阵点的值设置为对应的权值\n对于不存在的边或弧，将其权值设置为无穷大。之所以是无穷大，是因为权值既可能取正，也可以取负，也可以取0，所以需要一个相对不可能的数值来代表不存在。\n\n对于如下的图：\n\n可以表示成如下的矩阵：\n[∞∞∞∞69∞3∞∞2∞∞5∞∞∞∞∞1∞∞∞∞∞]\n\\left[\n\\begin{matrix}\n\\infty &\\infty &\\infty &\\infty &6\\\\\n9&\\infty &3&\\infty &\\infty \\\\\n2&\\infty &\\infty &5&\\infty \\\\\n\\infty &\\infty &\\infty &\\infty &1\\\\\n\\infty &\\infty &\\infty &\\infty &\\infty\n\\end{matrix}\n\\right]\n​⎣​⎢​⎢​⎢​⎢​⎡​​​∞​9​2​∞​∞​​​∞​∞​∞​∞​∞​​​∞​3​∞​∞​∞​​​∞​∞​5​∞​∞​​​6​∞​∞​1​∞​​​⎦​⎥​⎥​⎥​⎥​⎤​​\n三. 性质\n1. 无向图\n\n对于无向图形成的邻接矩阵，是一个对称矩阵，对称线为左上到右下的斜线，即(v0v_0v​0​​, v0v_0v​0​​)，(v1v_1v​1​​, v1v_1v​1​​)，(v2v_2v​2​​, v2v_2v​2​​), (v3v_3v​3​​, v3v_3v​3​​)这四个阵点形成的线\n根据邻接矩阵中的阵点值即可知道任意两顶点之间是否有边\n要求顶点viv_iv​i​​的度，其值为这个顶点在邻接矩阵中第iii行（或第iii列）的元素之和。比如顶点v1v_1v​1​​的度就是2\n求顶点viv_iv​i​​的所有邻接点，即在第iii行中，值为1的元素对应的列就是邻接点\n\n2. 有向图\n\n有向图某顶点的入度即为该顶点对应的列的数值之和\n有向图某顶点的出度即为该顶点对应的行的数值之和\n判断从某个顶点到另外一个顶点是否有弧，则按照对应的行和列查找值，若为1，则有弧，为0则无弧。\n\n"},"数据结构/图/邻接矩阵/代码实现/代码实现.html":{"url":"数据结构/图/邻接矩阵/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;            // 顶点\n\ntypedef int EdgeType;                    // 边\n\n#define MAXVEX 100;                        // 最大顶点数\n#define INFTY 65535;                    // 充当无穷大\n\nstruct graph\n{\n    ElemType vexs[MAXVEX];                // 顶点集\n    EdgeType arc[MAXVEX][MAXVEX];        // 边集\n    int VexLength;\n    int ArcLength;\n};\ntypedef struct graph AdjMatrix;            // 邻接矩阵\n\n"},"数据结构/图/邻接矩阵/难点操作/难点操作.html":{"url":"数据结构/图/邻接矩阵/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 无向网图的建立\nvoid CreatMGraph(MGraph *G)\n{\n    int i, j, k, w;\n    printf(\"输入顶点数和边数：\\n\");\n    scanf(\"%d, %d\", &G->numNodes, &G->numEdges);\n    // 读入对应个数的顶点\n    for(i = 0; i numNodes; i++)\n    {\n        scanf(&G->vexs[i]);\n    }\n    // 先将所有边设置为无穷\n    for(i = 0; i numNodes; i++)\n    {\n        for(j = 0; j numNodes; j++)\n        {\n            G->arc[i][j] = INFTY;\n        }\n    }\n    // 给存在的边设置权值，并进行对称操作\n    for(k = 0; k numEdges; k++)\n    {\n        printf(\"输入边(vi, vj)上的下标i， 下标j和权w:\\n\");\n        scanf(\"%d, %d, %d\", &i, &j, &w);\n        G->arc[i][j] = w;\n        G->arc[j][i] = G->arc[i][j];\n    }\n}\n\n"},"数据结构/图/邻接表/邻接表.html":{"url":"数据结构/图/邻接表/邻接表.html","title":"邻接表","keywords":"","body":"一. 引入\n当图中顶点之间的边或弧足够多的时候，使用邻接链表可以充分的利用分配的空间，但是如果是这种情况呢：顶点集内元素足够多，但边弧集却只有一两个元素，可以明显地看出这将造成大量的空间浪费。\n几乎所有的顺序存储结构都有这样的特点，此时我们可以考虑使用链式存储结构来解决。\n二. 定义\n可以使用树中孩子表示法的方法进行存储，即使用数组存储所有的顶点，用多个链表表示与顶点相关的边。\n这种数组与链表相结合的存储方法称为邻接表（Adjacency List）。\n\n图中顶点用一个一维数组存储，当然，顶点也可以用单链表来存储，不过数组可以较容易地读取顶点信息，更加方便。另外，对于顶点数组中，每个元素还需要存储指向第一个邻接点的指针，以便于查找该顶点的边信息。\n图中每个顶点viv_iv​i​​的所有邻接点构成一个线性表，由于邻接点的个数不定，所以用单链表存储，无向图称为顶点viv_iv​i​​的边表，有向图则称为顶点viv_iv​i​​作为弧尾的出边表。\n对于有向图来说，如果重点想要知道以顶点为弧头的弧集，可以建立一个以顶点为弧头的逆邻接表。如果二者都很重要，那么可以让数组中每个元素都连接两个链表。\n\n三. 基本方法\n\n如果想知道某个顶点的度，就等于这个顶点的边表中结点的个数。对于有向图来说，需要分入度和出度。\n若要判断顶点viv_iv​i​​和vjv_jv​j​​之间是否存在边，只需要去搜索这两个顶点任意一个顶点的边表中是否存在另一个顶点的下标。对于有向图来说，需要分弧头和弧尾。\n若求顶点的所有邻接点，就对此顶点的边表进行遍历，遍历出的所有下标对应的顶点即为该顶点的所有邻接点；对于有向图来说，需要分弧的方向。\n\n"},"数据结构/图/邻接表/代码实现/代码实现.html":{"url":"数据结构/图/邻接表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"// 数据元素\nstruct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;\n// 弧结点\nstruct arc\n{\n    int arc;                    // 与顶点构成弧的另一个顶点下标\n    int weight;                    // 该弧的权重\n    struct arc *next;            // 指针域\n};\ntypedef struct arc Arc;\ntypedef Arc *PArc;\n// 顶点结点\nstruct vertex\n{\n    ElemType data;                // 数据域\n    PArc tail;                    // 以该顶点为弧尾的出边表\n    PArc head;                    // 以该顶点为弧头的入边表\n};\ntypedef struct vertex Vertex;\n// 邻接表类型\n#define MAXVEX 100                // 最大顶点数\nstruct algraph\n{\n    Vertex vertex[MAXVEX];        // 顶点数组\n    int verlen;                    // 当前顶点个数\n    int arclen;                    // 弧的数量\n};\ntypedef struct algraph ALGraph;    // 邻接表类型\ntypedef ALGraph *PtrALGraph;    // 邻接表指针\n\n"},"数据结构/图/邻接表/难点操作/难点操作.html":{"url":"数据结构/图/邻接表/难点操作/难点操作.html","title":"2. 难点操作","keywords":"","body":"一. 邻接表的创建\n"},"数据结构/图/十字链表/十字链表.html":{"url":"数据结构/图/十字链表/十字链表.html","title":"十字链表","keywords":"","body":"一. 引入\n在邻接表中可以很好地实现无向图，但是对于有向图，就只能特化地实现存储出边表或入边表，想要根据一个邻接表同时方便的查找一个顶点的出边和入边也可以实现，即按照我实现的邻接表一样，在每个顶点结点中设置两条链表，一条出边表，一条入边表。但是其缺陷也是明显的，因为在出边表中，存储了所有以该表头为顶点的出边，每一条边涉及到两个对象，一个弧头，一个弧尾，很明显，对于某个结点的出边也是其对应的另一个结点的入边，可是在邻接表的实现中，每个顶点都设立了两个链表来分别存储，很显然这是很浪费空间的。\n二. 定义\n首先还是先考虑一个邻接表：首先是一个顶点数组，用以保存所有的顶点，在顶点中有一个出边表头，用于连接一个出边表。\n出边表链表中每个结点有两个元素，一个数据域用于保存以表头为弧尾的弧的弧头的下标，然后一个指针域作为链连接下一个以表头为弧尾的弧的弧头的结点。\n有了这样一个邻接表，再思考这样一个问题，一条弧对于其所关联的两个顶点而言，对弧尾来说是出边，对弧头来说则是入边，刚刚实现的邻接表是一个出边表，其后续跟的每一个结点对于当前链来说是出边，对于出边表中所保存的下标来说都是一条入边，其弧尾即为链表头的顶点。\n所以如下来实现：首先在顶点元素中再添加一个指针域作为入边表的头，然后同样连接一个链表，每个结点保存以表头为弧头的所有弧的弧尾的顶点对应的下标。那么怎么将这个入边表链起来呢？可以跟邻接表的实现一样，添加一条新的入边表，但上面说过了浪费空间。\n刚刚说过了，在出边表中，一条弧对于其表头是出边，对于结点中保存的下标对应的顶点来说是入边，所以每一个顶点的入边表的表头只需要将所有出边是该顶点的所有结点连接起来就行了。\n还有一个问题，如何根据这个入边表找到所有的弧尾？每一个结点都只保存了以表头为顶点的所有出边的弧头，却不知道弧的弧尾，除非做一个双向链表逆遍历。当然更简单的方式是在每一个结点中添加一个数据域，保存弧的弧尾的下标即可。可以想象，对于每一个结点的出边表来说，每一个结点的弧尾都应该是当前表头的下标。\n三. 主要操作\n其他的操作都与邻接表差不多，主要需要注意的一点是：在添加一条弧时，不仅需要添加为一个结点的出边，也需要添加为一个结点的入边。\n其操作过程大概如下：\n\n首先新建一个结点，设置好它的两个数据域，即弧尾和弧头的下标。\n然后找到弧尾下标的元素，以头插法将该结点插入该出边表。\n然后找到弧头下标的元素，同样以头插法将该结点插入该入边表。\n\n"},"数据结构/图/十字链表/代码实现/代码实现.html":{"url":"数据结构/图/十字链表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;            // 数据元素\n\nstruct arc\n{\n    int tail;                            // 保存弧的弧尾\n    int head;                            // 保存弧的弧头\n    struct arc *next_in;                 // 入边表的链\n    struct arc *next_out;                 // 出边表的链\n};\ntypedef struct arc Arc;                    // 弧或边类型\ntypedef Arc *PtrArc;                    // 弧或边指针类型\n\nstruct vertex\n{\n    ElemType data;                        // 数据域\n    PtrArc firstin;                        // 入边表的链\n    PtrArc firstout;                    // 出边表的链\n};\ntypedef struct vertex Vertex;            // 顶点类型\n\n#define MAXVEX 100\nstruct orthlist\n{\n    Vertex vertex[MAXVEX];                // 顶点集\n    int vernums;                        // 顶点数\n    int arcnums;                        // 弧边数\n};\ntypedef struct orthlist OrthList;        // 十字链表类型\ntypedef OrthList *PtrOrthList;            // 十字链表指针\n\n"},"数据结构/图/邻接多重表/邻接多重表.html":{"url":"数据结构/图/邻接多重表/邻接多重表.html","title":"邻接多重表","keywords":"","body":"一. 引入\n十字链表是对于有向图而言在邻接表的基础上所做的优化，那么无向图需不需要优化呢？\n在邻接表中，无向图的每一条边都保存在两个结点的边表中，浪费空间是其一，其二是添加时需要新建两个结点，删除时需要在两个顶点的链表中进行查找。\n其优化方法与十字链表类似，不过有一点点区别。\n二. 定义\n首先顶点数组的内容不用修改，仍然是一个顶点数据和一个边表指针。\n需要修改的是边结点，原本的边结点只有一个数据域和一个指针域，数据域用于保存和顶点关联的边的另一个顶点的下标，指针域用来连接下一个边。\n而现在我们需要两个数据域和两个指针域。\n首先说数据域：两个数据域分别保存与边相关的两个顶点的下标\n然后是指针域：其中一个指针指向依附于某个顶点的下一条边，另一个指针指向依附于另一个顶点的下一条边\n三. 主要操作\n1. 添加边\n\n创建边结点，并初始化其两个数据域\n使用头插法将该结点插入与之相关的某个顶点的边表中\n使用头插法将该结点插入与之相关的另一个顶点的边表中\n\n"},"数据结构/图/邻接多重表/代码实现/代码实现.html":{"url":"数据结构/图/邻接多重表/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;                // 数据元素\n\nstruct edge\n{\n    int ivex;                                // 该边的某一个顶点下标\n    int jvex;                                // 改变的另一个顶点下标\n    struct edge *ilink;                        // 与第一个顶点相关的下一条边的指针\n    struct edge *jlink;                        // 与第二个顶点相关的下一条边的指针\n};\ntypedef struct edge Edge;                    // 边结点类型\ntypedef Edge *PtrEdge;                        // 边指针\n\nstruct vertex\n{\n    ElemType data;                            // 顶点数据元素\n    PtrEdge firstedge;                        // 边表指针\n};\ntypedef struct vertex Vertex;                // 顶点类型\n\n#define MAXVEX 100\nstruct multialgraph\n{\n    Vertex[MAXVEX] graph;\n    int vernums;\n    int edgenums;\n};\ntypedef struct multialgraph MultiALGraph;    // 邻接多重表类型\ntypedef MultiALGraph *PtrMultiALGraph;        // 邻接多重表指针\n\n"},"数据结构/图/边集数组/边集数组.html":{"url":"数据结构/图/边集数组/边集数组.html","title":"边集数组","keywords":"","body":"一. 定义\n边集数组是由两个一维数组构成的。一个是存储顶点的信息；另一个是存储边的信息，这个边数组每个数据元素由一条边的起点下标、终点下标和权组成。\n二. 用途\n边集数组关注的是边的集合，在边集数组中要查找一个顶点的度需要扫描整个边数组，效率并不高。因此它更适合对边依次进行处理的操作，而不适合对顶点相关的操作。\n"},"数据结构/图/边集数组/代码实现/代码实现.html":{"url":"数据结构/图/边集数组/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"struct items\n{\n    int x;\n    int y;\n};\ntypedef struct items ElemType;                // 数据元素\n\n#define MAXVEX 100\ntypedef ElemType Vertex[MAXVEX];            // 顶点集\n\n#define MAXARC 200\nstruct arc\n{\n    int begin;                                // 起点下标\n    int end;                                // 终点下标\n    int weight;                                // 权\n};\ntypedef struct arc Arc;                        // 边类型\ntypedef Arc Edge[MAXARC];                    // 边集\n\nstruct graph\n{\n    Vertex verts;\n    Edge edges;\n    int vertnums;\n    int edgenums;\n};\ntypedef struct graph Graph;\ntypedef Graph *PtrGraph;\n\n"},"算法/算法.html":{"url":"算法/算法.html","title":"算法","keywords":"","body":""},"算法/查找/查找.html":{"url":"算法/查找/查找.html","title":"查找","keywords":"","body":"一. 基本概念\n\n查找表(Search Table)：由同一类型的数据元素（或记录）构成的集合。\n关键字(Key)：数据元素中某个数据项的值\n关键码：用于标志一个记录的某个数据项（字段）的关键字\n主关键字(Primary Key)：若一个关键字可以唯一地标志一个记录，则称此关键字为主关键字\n次关键字(Secondary Key)：可以识别多个数据元素（或记录）的关键字，称为次关键字\n\n二. 定义\n查找就是根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。\n三. 分类\n1. 静态查找表\n静态查找表(Static Search Table)：只作查找操作的查找表，它的主要操作有：\n\n查询某个“特定的”数据元素是否在查找表中。\n检索某个“特定的”数据元素和各种属性。\n\n2. 动态查找表\n动态查找表(Dynamic Search Table)：在查找过程中同时插入查找表中不存在的数据元素，或者从查找表中删除已经存在的某个数据元素，它的主要操作有：\n\n查找时插入数据元素\n查找时删除数据元素\n\n四. 特点\n\n静态查找\n\n对于静态查找来说，一般用线性表来进行查找，如果是无序表，一般就只能用遍历的方法来实现，如果是有序表，就可以使用二分查找等方法来进行高效的查找。\n\n动态查找\n\n对于动态查找来说，可以考虑二叉排序树来进行查找，对于二叉排序树还可以进行一系列优化。\n"},"算法/查找/顺序表查找/顺序表查找.html":{"url":"算法/查找/顺序表查找/顺序表查找.html","title":"顺序表查找","keywords":"","body":"一. 定义\n顺序查找(Sequential Search)又叫线性查找，是最基本的查找技术，它的查找过程是：从表中第一个（或最后一个）记录开始，逐个进行记录的关键字和给定值比较，若某个记录的关键字和给定值相等，则查找成功，找到所查的记录；如果直到最后一个（或第一个）记录，其关键字和给定值比较都不等时，则表中没有所查的记录，查找不成功。\n顺序查找首先是对于静态查找表进行查找，因为主要只针对线性表进行查找操作，其次顺序查找一般用于无序表，在有序表中，有比顺序查找更优秀的算法。\n"},"算法/查找/顺序表查找/顺序表查找算法/顺序表查找算法.html":{"url":"算法/查找/顺序表查找/顺序表查找算法/顺序表查找算法.html","title":"顺序表查找算法","keywords":"","body":"顺序表查找算法主要思路就是：从表的一端开始，逐个往后遍历，如果找到指定值，则返回值的位置，否则返回未找到的信息。\n"},"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html":{"url":"算法/查找/顺序表查找/顺序表查找算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"// 顺序查找，a为数组，n为要查找的数组的元素个数，key为要查找的关键字\nint Sequential_Search(int *a, int n, int key)\n{\n    int i;\n    for(i = 0; i \n"},"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html":{"url":"算法/查找/顺序表查找/顺序表查找优化/顺序表查找优化.html","title":"顺序表查找优化","keywords":"","body":"在顺序表查找算法中，每一次迭代都会进行判断当前循环控制变量是否越界，这个操作看似是必要的，然而实际上完全可以消除这一步操作。\n具体的做法一般是将数组第一个元素的值设置为要查找的值，然后从数组尾部开始遍历，然后开始循环，如果数组值与查找值相等时，就返回当前下标。这样做返回的下标有两种可能，一是在遍历中途，查找到了待查值，然后返回下标；二是遍历到数组第一个元素，因为提前设置为了待查值，所以返回下标0。\n这个方法叫做设置哨兵，利用哨兵，完美地消除了在每一次迭代中都要判断循环控制变量是否越界的操作。\n在较小的顺序表中，该方法对效率没有太大影响，但如果n值以万记时，该方法就能省下上万次操作。\n需要注意的是：如果要使用该方法，顺序表的第一个元素不能用来保存值。\n"},"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html":{"url":"算法/查找/顺序表查找/顺序表查找优化/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"int Sequential_Search2(int *a, int n, int key)\n{\n    int i;\n    a[0] = key;\n    i = n;\n    while(a[i] != key) {\n        i--;\n    }\n    return i;\n}\n\n"},"算法/查找/有序表查找/有序表查找.html":{"url":"算法/查找/有序表查找/有序表查找.html","title":"有序表查找","keywords":"","body":"有序表查找是针对有序表进行的查找操作，对于有序表，与无序表不同，它有很多优秀的算法可以进行查找操作，如二分查找，插值查找和斐波那契查找等等。\n"},"算法/查找/有序表查找/二分查找/二分查找.html":{"url":"算法/查找/有序表查找/二分查找/二分查找.html","title":"二分查找","keywords":"","body":"一. 定义\n二分查找(Binary Search)也叫折半查找，它的前提是线性表中需要用于查找的关键码有序（通常从小到大有序），线性表必须采用顺序存储。折半查找的基本思想是：在有序表中，取中间记录作为比较对象，若给定值与中间记录的关键字相等，则查找成功；若给定值小于中间记录的关键字，则在中间记录的左半区继续查找；若给定值大于中间记录的关键字，则在中间记录的右半区继续查找。不断重复上述过程，直到查找成功，或所有查找区域无记录，查找失败为止。\n二. 注意\n二分查找的原理应该还是很好理解的，唯一需要注意的是整数除法的问题。\n"},"算法/查找/有序表查找/二分查找/代码实现/代码实现.html":{"url":"算法/查找/有序表查找/二分查找/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"int Binary_Search(int *a, int n, int key)\n{\n    int low, high, mid;\n    low = 1;\n    high = n;\n    while(low  a[mid])\n            low = mid + 1;\n        else\n            return mid;\n    }\n    return 0;\n}\n\n"},"算法/查找/有序表查找/插值查找/插值查找.html":{"url":"算法/查找/有序表查找/插值查找/插值查找.html","title":"插值查找","keywords":"","body":"一. 引入\n首先先来分析一下二分查找的缺陷吧。\n当需要查找的数据量不大时，二分查找完全是够用的，但如果需要查找的数据量巨大呢，特别是当需要查找的值还在表的两端时，甚至还不如顺序查找算法，当然这只是极端情况，平均时间复杂度还是比顺序查找低的。\n既然发现了这个问题，那么有没有解决方法呢？答案是肯定的。\n刚才的极端情况是当数据量巨大时，需要查找的值还在表的某一端，仔细思考这个情况就会发现，由于我们现在是在一个有序表里进行查找，那么如果待查值在表的某一端只意味着一件事，那就是这个待查值特别大或特别小，那我们何不直接从这个表的后半部分或者前半部分开始查找呢？再推广到一般情况，我们能否根据待查值的大小来确定我们开始查找的位置呢？这个答案就是插值查找。\n二. 定义\n插值查找(Interpolation Search)是根据要查找的关键字key与查找表中最大最小记录的关键字比较后的查找方法，其核心就在于插值的计算公式：\nkey−a[low]a[high]−a[low]\n{key-a[low]}\\over {a[high]-a[low]}\n​a[high]−a[low]​​key−a[low]​​\n三. 原理\n插值查找的基本方法还是二分查找，只是改变了查找的起始位置以及每次更新中间位置的方法。\n原本的中间位置更新方法如下：\nmid=low+high2=low+12(high−low)\nmid= {low+high\\over 2}=low+{1\\over 2}(high-low)\nmid=​2​​low+high​​=low+​2​​1​​(high−low)\n而修改之后的位置更新方法如下：\nmid=low+key−a[low]a[high]−a[low](high−low)\nmid=low+{key-a[low]\\over {a[high]-a[low]}}(high-low)\nmid=low+​a[high]−a[low]​​key−a[low]​​(high−low)\n即将121\\over 2​2​​1​​替换为了key−a[low]a[high]−a[low]key-a[low]\\over {a[high]-a[low]}​a[high]−a[low]​​key−a[low]​​。\n之所以这样替换是因为后者计算出的位置比直接的121\\over 2​2​​1​​更接近待查值，具体原理暂时不清楚，但通过例证确实如此。\n四. 特点\n对于表长较大，且关键字分布比较均匀的查找表来说，插值查找算法的平均性能比二分查找要好得多。但是对于数据极端不均匀的数据，用插值查找未必是很合适的选择。\n"},"算法/查找/有序表查找/插值查找/代码实现/代码实现.html":{"url":"算法/查找/有序表查找/插值查找/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"int Interpolation_Search(int *a, int n, int key)\n{\n    int low, high, mid;\n    low = 1;\n    high = n;\n    while(low  a[mid])\n            low = mid + 1;\n        else\n            return mid;\n    }\n    return 0;\n}\n\n"},"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html":{"url":"算法/查找/有序表查找/斐波那契查找/斐波那契查找.html","title":"斐波那契查找","keywords":"","body":"一. 引入\n对于二分查找，一种优化方法是插值查找，而另一种优化方法则是斐波那契查找，与插值查找相同，斐波那契查找也是改变查找开始的位置以及每次更新的位置。\n二. 定义\n斐波那契查找(Fibonacci Search)，是利用黄金分割原理来实现的一种类似于二分查找的查找方式\n三. 原理\n要实现斐波那契查找，首先需要创建一个斐波那契数列的数组，斐波那契数列就不再多介绍了，其数组大致如下：\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...]\n首先以要查找的表的元素个数为下标找到斐波那契数列中改下标对应的元素值，如果该元素值大于待查表的元素个数时，将待查表扩展到斐波那契数列的查出值的个数，后续元素的值都用待查表的最后一个元素值来填充。\n然后使用mid=low+F[k−1]−1mid=low+F[k-1]-1mid=low+F[k−1]−1的公式来每次更新mid的位置，且每次迭代如果不匹配，还需要修改k的值。具体实现见斐波那契查找的代码实现。\n斐波那契查找算法的核心在于：\n\n当key=a[mid]key=a[mid]key=a[mid]时，查找成功。\n当keya[mid]keykeya[mid]时，新范围是第lowlowlow个到第mid−1mid-1mid−1个，此时范围个数为F[k−1]−1F[k-1]-1F[k−1]−1个。\n当key>a[mid]key>a[mid]key>a[mid]时，新范围是第m+1m + 1m+1个到底highhighhigh个，此时范围个数为F[k−2]−1F[k-2]-1F[k−2]−1个。\n\n"},"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html":{"url":"算法/查找/有序表查找/斐波那契查找/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"// 斐波那契数列的创建不进行表示\nint Fibonacci_Search(int *a, int n, int key)\n{\n    int low, high, mid, i, k;\n    low = 1;\n    high = n;\n    k = 0;\n    while(n > F[k] - 1)\n        k++;\n    for(i = n; i  a[mid]) {\n            low = mid + 1;\n            k -= 2;\n        } else {\n            if(mid \n"},"算法/查找/线性索引查找/线性索引查找.html":{"url":"算法/查找/线性索引查找/线性索引查找.html","title":"线性索引查找","keywords":"","body":"一. 引入\n对于无序表来说，对它进行查找只有顺序表查找一种方法，当表长很大时毫无疑问会花费大量的时间。反观有序表，有二分查找、插值查找和斐波那契查找等能够大大减少时间消耗的算法可以优化查找效率。那么，有没有方法可以让无序表也能像有序表那样使用这些好用的算法呢？答案就是索引查找。\n二. 定义\n索引就是把一个关键字与它对应的记录相关联的过程，一个索引由若干个索引项构成，每个索引项至少应包含关键字和其对应的记录在存储器中的位置等信息。\n索引按照结构可以分为线性索引、树形索引和多级索引，此总结就只介绍线性索引技术。\n线性索引就是将索引项集合组织为线性结构，也称为索引表。主要包括三种线性索引：稠密索引、分块索引和倒排索引。\n"},"算法/查找/线性索引查找/稠密索引/稠密索引.html":{"url":"算法/查找/线性索引查找/稠密索引/稠密索引.html","title":"稠密索引","keywords":"","body":"一. 定义\n稠密索引是指在线性索引中，将数据集中的每个记录对应一个索引项，其中索引项一定是按照关键码有序排列的。\n二. 原理\n加入我们要建立索引的是一个无序表，每个数据元素包含任意项，其中有一个主关键字，假设是一串数字编号。\n那么我们需要建立的索引表的每一个数据元素就应该包括与该无序表相同的主关键字以及一个指向无序表中数据元素的指针用于指向与主关键字对应的数据元素的地址。\n索引表的建立过程一般是先遍历需要建立索引的无序表，每遇到一条记录，就将该记录的主关键字按顺序保存到索引表中，并将对应的指针指向该记录。\n三. 特点\n索引项有序意味着，我们要查找关键字时，可以用到二分、插值、斐波那契等有序查找算法，大大提高了效率。\n但对于数据集非常大，如上亿的数据集，那也就是意味着索引也得有同样的数据集长度规模，对于内存有限的计算机来说，可能就需要反复去访问磁盘，查找性能反而大大下降了。\n"},"算法/查找/线性索引查找/分块索引/分块索引.html":{"url":"算法/查找/线性索引查找/分块索引/分块索引.html","title":"分块索引","keywords":"","body":"一. 定义\n针对与稠密索引的缺点，一种补足方式就是使用分块索引。\n分块索引，即先对数据集进行分块，每一块保存当前块的最大值和块中的数据长度，以及一个指向该块的块首指针。\n分块索引需要满足两个条件：\n\n块内无序：即每一块内的记录不要求有序。如果对块内的记录也要求有序那就需要付出大量时间和空间的代价。\n块间有序：即每一块索引的最大值记录要按顺序排列。\n\n二. 原理\n对于分块索引的每一个索引项而言，包含三个数据项：\n\n最大关键码：它存储每一块中的最大关键字，这样的好处就是可以使得在它之后的下一块中的最小关键字也能比这一块的最大的关键字要大\n块中的记录个数：以便于循环时利用\n指向块首数据元素的指针：便于开始对这一块中的记录进行遍历。\n\n在分块索引表中查找，就是分以下两步进行：\n\n在分块索引表中查找要查关键字所在的块。由于分块索引表是块间有序的，因此很容易利用二分、插值等算法得到结果。\n根据块首指针找到相应的块，并在块中顺序查找关键码。\n\n三. 注意\n需要注意的是：块内无序虽然是说块内值按序排列，但是要求整个块的所有数据都要比上一个块中最大数据大。\n"},"算法/查找/线性索引查找/倒排索引/倒排索引.html":{"url":"算法/查找/线性索引查找/倒排索引/倒排索引.html","title":"倒排索引","keywords":"","body":"一. 定义\n倒排索引与其他索引表不同的地方是：其他索引表还是通过主关键字来查找记录的位置，而倒排索引是通过次关键字来查找所有有这个次关键字属性的记录。\n二. 原理\n倒排索引的通用结构是：\n\n次关键码\n记录号表：存储具有相同次关键字的所有记录的记录号（可以是指向记录的指针或者是该记录的主关键字）。\n\n这也是基础的搜索引擎的搜索方法，每个网页都是独一无二的，其网址就是主关键码，而不同的文章中都会包含一些关键词，这些关键词都是有可能重复的，所以是次关键码。而用户搜索一般是通过关键词去找到想要的网页，也就是通过次关键码搜索出所有相关的记录。\n"},"算法/查找/二叉排序树/二叉排序树.html":{"url":"算法/查找/二叉排序树/二叉排序树.html","title":"二叉排序树","keywords":"","body":"一. 引入\n顺序表查找、有序表查找（二分、插值、斐波那契）以及线性索引查找（稠密、分块、倒排）都是对于静态查找表而言的算法，可以很好地解决查找操作的需求，但是对于动态查找表来说，其性能就不见得有那么好了。\n由于它们几乎都是由线性表来实现的，如果是顺序表，由于它不要求顺序，所以它的插入删除操作都还好，但是它的查找性能一般；而对于有序表和索引表，由于其有序的特点，所以在插入时就涉及到大块数据的移动，如果是链表还好，但链表又会影响查找算法的实现。\n那对于动态查找表来说，有没有一种兼顾查找、插入、删除的方法呢？答案是肯定的。\n二. 定义\n可以看到，针对与静态查找表的所有实现几乎都是以线性表的形式实现的。由于线性表无法完美地实现动态查找表的算法，那自然可以想到还有树和图的实现方法。\n而我们要使用的就是一种树的实现方法。\n二叉排序树(Binary Sort Tree)，又称为二叉查找树。它或者是一棵空树，或者是具有下列性质的二叉树：\n\n若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值。\n若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值。\n它的左、右子树也分别为二叉排序树。\n\n三. 构造方法\n首先提供一个任意顺序的序列，然后依次添加到二叉排序树中，第一个存在根结点，然后从第二个开始就进行判断，若比根结点小，则进入左子树，反之进入右子树。若进入的子树根结点为空，则在该位置上保存值，否则继续判断与该根结点的大小关系。\n很明显可以看出，这就是一个递归的过程，而对这个构造好的二叉排序树进行中序遍历将会得到一个从小到大有序排列的序列。\n四. 特点\n构造一棵二叉排序树的目的并非为了排序，而是为了提高查找和插入删除关键字的速度。\n首先二叉排序树的排列方式与二分查找很像（但不同），当比结点小时就进入左子树，比结点大就进入右子树，如果树的构建均匀的话（平衡二叉树），那么每次判断都会筛选掉一半的内容，直到最后找到待查的内容。可以看出这个查找速率还是很好的。\n又因为二叉排序树采用链式结构，所以在插入删除操作上也是很快的。\n"},"算法/查找/二叉排序树/查找操作/查找操作.html":{"url":"算法/查找/二叉排序树/查找操作/查找操作.html","title":"查找操作","keywords":"","body":"一. 准备\n首先当然需要一个二叉树的结构，假设这个结构如下：\ntypedef struct BiTNode\n{\n    int data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *BiTree;\n\n二. 原理\n\n我们首先进入二叉树的根结点开始查找\n若待查值小于当前结点值就进入左子树继续查找，若大于当前结点值就进入右子树继续查找\n当当前结点的值与待查值相同时就返回true或者返回查找到的位置\n若查找到最后，当前指针指向空时都未找到待查值就返回false或者返回空指针\n\n"},"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html":{"url":"算法/查找/二叉排序树/查找操作/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"Status SearchBST(BiTree T, int key, BiTree f, BiTree *p)\n{\n    if (!T) {\n        *p = f;\n        return false;\n    } else if (key == T->data) {\n        *p = T;\n        return true;\n    } else if (key data)\n        return SearchBST(T->lchild, key, T, p);\n    else\n        return SearchBST(T->rchild, key, T, p);\n}\n\n"},"算法/查找/二叉排序树/插入操作/插入操作.html":{"url":"算法/查找/二叉排序树/插入操作/插入操作.html","title":"插入操作","keywords":"","body":"一. 原理\n二叉排序树的插入操作也是构建二叉排序树的基础，其主要方法如下：\n\n以根结点为起始点，首先进行查找，看待插值是否已存在，若已存在则跳过插入该值并返回false，若不存在则进行下一步\n若根结点为空则在此处插入一个值，否则进行比较\n若待插值小于根结点的值，则进入左子树重复操作2，否则进入右子树重复操作2\n\n"},"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html":{"url":"算法/查找/二叉排序树/插入操作/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 插入\nStatus InsertBST(BiTree *T, int key)\n{\n    BiTree p, s;\n    if (!SearchBST(*T, key, NULL, &p)) {\n        s = (BiTree)malloc(sizeof(BiTNode));\n        s->data = key;\n        s->lchild = s->rchild = NULL;\n        if (!p)\n            *T = s;\n        else if (key data)\n            p->lchild = s;\n        else\n            p->rchild = s;\n        return true;\n    }\n    else\n        return false\n}\n\n二. 构造\nint i;\nint a[10] = { 62, 88, 58, 47, 35, 73, 51, 99, 37, 93 };\nBiTree T = NULL;\nfor (i = 0; i \n"},"算法/查找/二叉排序树/删除操作/删除操作.html":{"url":"算法/查找/二叉排序树/删除操作/删除操作.html","title":"删除操作","keywords":"","body":"一. 引入\n说到二叉排序树的删除操作，说到底是一个断链然后重接的过程，看上去并不复杂，但有一个问题，那就是在删除了某个结点后，有可能会导致删除后的二叉树不再是二叉排序树。\n针对这个问题，可以将删除结点分为三种情况：\n\n删除结点为叶子结点\n删除结点仅有左子树或右子树\n删除结点既有左子树也有右子树。\n\n其中前两种删除情况都很简单，但是第三种情况则是导致问题的主要因素。\n二. 原理\n1. 情况一\n对于要删除的结点为叶子结点的情况来说，直接简单的将该结点内存释放随后修改其双亲的孩子指针即可。\n2. 情况二\n对于要删除的结点只有左子树或只有右子树的情况来说，若该结点为其双亲结点的左孩子，则将该结点删除之后，将其子树直接接到该结点的双亲的左孩子链上（不管该结点的子树是左子树还是右子树）；若该结点为其双亲节点的右孩子，则将该结点删除之后，将其子树直接接到该结点的双亲的右孩子链上即可。\n3. 情况三\n对于要删除的结点既有左子树又有右子树的情况来说，情况就比较复杂了。\n第一种方法如下：由于对于单子树的情况很好解决，所以可以先用单子树的方法来思考这种情况：当删除结点后，将该结点的某个子树按照情况二的方法进行连接，唯一的问题是剩下一棵子树应该怎么接上去，最简单的方法是将这棵子树的所有结点重新插入到二叉排序树中，可是当子树的结点数量过大时，很明显这种方法的效率是很低的。\n第二种方法如下：为了不大幅度移动这两棵子树的相对位置，我们可以找出这两棵子树中删除结点的直接前驱或直接后继，让这个结点来替代被删除的结点，然后将两棵子树接在这个结点上。用于替换的结点如果不是叶子结点和单子树结点，那么就需要按照相同的方法来对这个用于替换的结点进行删除。\n"},"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html":{"url":"算法/查找/二叉排序树/删除操作/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 查找并删除\nStatus Delete(BiTree *T, int key)\n{\n    if (!*T)\n        return false;\n    else {\n        if (key == (*T)->data)\n            return Delete(T);\n        else if (key data)\n            return DeleteBST(&(*T)->lchild, key);\n        else\n            return DeleteBST(&(*T)->rchild, key);\n    }\n}\n\n二. 删除\nStatus Delete(BiTree *p)\n{\n    BiTree q, s;\n    if((*p)->rchild == NULL) {\n        q = *p;\n        *p = (*p)->lchild;\n        free(q);\n    } else if ((*p)->lchild == NULL) {\n        q = *p;\n        *p = (*p)->rchild;\n        free(q);\n    } else {\n        q = *p;\n        s = (*p)->lchild;\n        while(s->rchild) {\n            q = s;\n            s = s->rchild;\n        }\n        (*p)->data = s->data;\n        if (q != *p)\n            q->rchild = s->lchild;\n        else\n            q->lchild = s->lchild;\n        free(s);\n    }\n    return true;\n}\n\n"},"算法/查找/平衡二叉树/平衡二叉树.html":{"url":"算法/查找/平衡二叉树/平衡二叉树.html","title":"平衡二叉树(AVL树)","keywords":"","body":"一. 引入\n对于二叉排序树来说，如果其构造足够均匀，那么其效率是很不错的，但是考虑一种极端情况，如果用于构造二叉排序树的序列原本就是有序的话，那么可想而知，由此序列构造出的二叉排序树将是一棵斜树，其查找过程与顺序查找差不多，每次判断就只筛选掉了子树的根结点这一个元素，这当然不是我们希望的。\n那么有什么方法可以将所有给出的序列都能构造得均匀一点吗？这就是平衡二叉树的构造方法了。\n二. 定义\n平衡二叉树(Self-Balancing Binary Search Tree或Height-Balanced Binary Search Tree)，是一种二叉排序树，其中每一个结点的左子树和右子树的高度差至多等于1。\n平衡二叉树也叫AVL树，主要是根据其发明者名字命名的（G.M.Adelson-Velskii和E.M.Landis）。\n平衡二叉树是一种高度（深度）平衡的二叉树，二叉树上结点的左子树高度减去右子树高度得到的值称为平衡因子BF(Balance Factor)，由定义可知平衡因子可正可负，所以平衡二叉树要求二叉排序树每个结点的平衡因子的绝对值的最大值最多为1，否则称该树不平衡。\n距离插入结点最近的平衡因子绝对值大于1的结点为根的子树称为最小不平衡子树。\n"},"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html":{"url":"算法/查找/平衡二叉树/AVL树的实现/AVL树的实现.html","title":"AVL树的实现","keywords":"","body":"一. 基本思想\n平衡二叉树构建的基本思想就是在构建二叉排序树的过程中，每当插入一个结点时，先检查是否因为插入而破坏了树的平衡性。若是，则找出最小不平衡子树，在保持二叉排序树特性的前提下，调整最小不平衡子树中各结点之间的连接关系，进行相应的旋转，使之成为新的平衡子树。\n旋转方向根据最小不平衡子树的根结点的平衡因子BF的值决定，若为正，则进行右旋，若为负，则进行左旋。\n二. 数据结构\ntypedef struct BiTNode\n{\n    int data;\n    int bf;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *BiTree;\n\n"},"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html":{"url":"算法/查找/平衡二叉树/AVL树的实现/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 右旋操作\nvoid R_Rotate(BiTree *p)\n{\n    BiTree L;\n    L = (*p)->lchild;\n    (*p)->lchild = L->rchild;\n    L->rchild = (*p);\n    *p = L;\n}\n\n二. 左旋操作\nvoid L_Rotate(BiTree *p)\n{\n    BiTree R;\n    R = (*p)->rchild;\n    (*p)->rchild = R->lchild;\n    R->lchild = (*p);\n    *p = R;\n}\n\n三. 左平衡旋转处理\n#define LH +1\n#define EH 0\n#define RH -1\n\nvoid LeftBalance(BiTree *T)\n{\n    BiTree L, Lr;\n    L = (*T)->lchild;\n    switch(L->bf) {\n        case LH:\n            (*T)->bf = L->bf = EH;\n            R_Rotate(T);\n            break;\n        case RH:\n            Lr = L->rchild;\n            switch(Lr->bf) {\n                case LH:\n                    (*T)->bf = RH;\n                    break;\n                case EH:\n                    (*T)->bf = L->bf = EH;\n                    break;\n                case RH:\n                    (*T)->bf = EH;\n                    L->bf = LH;\n                    break;\n            }\n            Lr->bf = EH;\n            L_Rotate(&(*T)->lchild);\n            R_Rotate(T);\n    }\n}\n\n四. 右平衡旋转处理\nvoid RightBalance(BiTree *T)\n{\n    BiTree R, Rl;\n    R = (*T)->rchild;\n    switch (R->bf) {\n        case RH:\n            (*T)->bf = R->bf = EH;\n            L_Rotate(T);\n            break;\n        case LH:\n            Rl = R->lchild;\n            switch (Rl->bf) {\n                case RH:\n                    (*T)->bf = LH;\n                    R->bf = EH;\n                    break;\n                case EH:\n                    (*T)->bf = R->bf = EH;\n                    break;\n                case LH:\n                    (*T)->bf = EH;\n                    R->bf = RH;\n                    break;\n            }\n            Rl->bf = EH;\n            R_Rotate(&(*T)->rchild);\n            L_Rotate(T);\n    }\n}\n\n五. 插入结点\nStatus InsertAVL(BiTree *T, int e, Status *taller)\n{\n    if (!*T) {\n        *T = (BiTree)malloc(sizeof(BiTNode));\n        (*T)->data = e;\n        (*T)->lchild = (*T)->rchild = NULL;\n        (*T)->bf = EH;\n        *taller = true;\n    } else {\n        if (e == (*T)->data) {\n            *taller = false;\n            return false;\n        }\n        if (e data) {\n            if (!InsertAVL(&(*T)->lchild, e, taller))\n                return false;\n            if (*taller) {\n                switch ((*T)->bf) {\n                    case LH:\n                        LeftBalance(T);\n                        *taller = false;\n                        break;\n                    case EH:\n                        (*T)->bf = LH;\n                        *taller = true;\n                        break;\n                    case RH:\n                        (*T)->bf = EH;\n                        *taller = false;\n                        break;\n                }\n            }\n        } else {\n            if (!InsertAVL(&(*T)->rchild, e, taller))\n                return false;\n            if (*taller) {\n                switch ((*T)->bf) {\n                    case LH:\n                        (*T)->bf = EH;\n                        *taller = false;\n                        break;\n                    case EH:\n                        (*T)->bf = RH;\n                        *taller = true;\n                        break;\n                    case RH:\n                        RightBalance(T);\n                        *taller = false;\n                        break;\n                }\n            }\n        }\n    }\n    return true;\n}\n\n六. 构建平衡二叉树\nint i;\nint a[10] = { 3, 2, 1, 4, 5, 6, 7, 10, 9, 8 };\nBiTree T = NULL;\nStatus taller;\nfor (i = 0; i \n"},"算法/查找/多路查找树/多路查找树.html":{"url":"算法/查找/多路查找树/多路查找树.html","title":"多路查找树(B树)","keywords":"","body":"一. 引入\n由于计算机在进行运算之前需要不断地从外存将数据读入到内存中，如果我们保持一个结点只保存一个元素值，那么整个树的规模就会非常大，那么计算机进行读取操作的次数也会相应地变多。\n如果我们想要减少计算机进行读取操作的次数，那么我们就需要让每个结点不止保存一个元素值。\n二. 定义\n多路查找树(Multi-Way Search Tree)，其每一个结点的孩子数可以多于两个，且每一个结点处可以存储多个元素。\n"},"算法/查找/多路查找树/2-3树/2-3树.html":{"url":"算法/查找/多路查找树/2-3树/2-3树.html","title":"2-3树","keywords":"","body":"一. 定义\n2-3树是这样的一棵多路查找树：其中的每一个结点都具有两个孩子（我们称它为2结点）或三个孩子（我们称它为3结点）。\n一个2结点包含一个元素和两个孩子（或没有孩子）；\n一个3结点包含一大一小两个元素和三个孩子（或没有孩子）。\n注意：\n\n2-3树中的结点如果包含孩子，那么其孩子个数一定与其结点前缀数相同，否则就不能有孩子。\n对于2结点，其左子树中所有结点都比该2结点中元素小，其右子树中所有结点都比该2结点中元素大。\n对于3结点，其左子树中所有结点都比该3结点中较小元素小，其中子树中所有结点都在该3结点中两元素之间，其右子树中所有结点都比该3结点中较大元素大。\n\n二. 主要操作\n1. 插入\n对于2-3树的插入来说，与二叉排序树相同，插入操作一定是发生在叶子结点上。与二叉排序树不同的是，2-3树插入一个元素的过程有可能会对该树的其余结构产生连锁反应。\n2-3树插入可分为以下三种情况：\n\n若插入结点为空，插入一个2结点即可\n若插入结点是一个2结点的叶子，则将2结点升级为3结点，然后根据插入元素与原2结点中的元素大小关系进行保存。\n若插入结点是一个3结点的叶子，由于3结点本身已经是2-3树的结点最大容量，因此就需要将其拆分，然后在原3结点中两个元素以及插入元素这三个元素中选择其一向上移动一层，若上一层也已经是3结点，则继续对其进行拆分，直到遇到某个2结点或根结点被拆分\n\n2. 删除\n对于2-3树的删除操作，也分为三种情况：\n\n所删除的元素位于一个3结点的叶子结点上，只需要在该结点处删除该元素即可，不会影响到整棵树的其他结点结构。\n所删除的元素位于一个2结点的叶子结点上，由于2结点只包含一个元素，删除之后，该结点将不存在，那么其双亲结点将不满足2结点或3结点的定义，所以应该分以下四种情形来处理：\n被删除结点的双亲结点也是2结点，且拥有一个3结点的右孩子，这种情况下，将该2结点删除，然后将其双亲结点为根的这棵子树进行左旋即可。如果删除的是右孩子，其左孩子是一个3结点，则进行右旋。\n被删除结点的双亲结点是2结点，其另外一个孩子也是2结点，此时找到一个这另外一个孩子的元素的直接后继，让这个2结点变成3结点，然后用这个直接后继的直接后继去替代这个直接后继，以此类推。替换完成之后，就可以按照第1中方法进行旋转了。\n被删除结点的双亲是一个3结点，那么将该3结点拆分为两个2结点，然后其中一个2结点与其子树中的一个2结点合并为3结点，需要注意的是要保持树的顺序。\n当前树是一个满二叉树，此时就需要减少该满二叉树的层数，将一些结点合并为3结点。\n\n\n所删除的元素位于非叶子的分支结点，此时我们需要用该树中序遍历得到的一个序列来找到被删除结点的直接前驱或直接后继，考虑让它们来补位即可。\n\n"},"算法/查找/多路查找树/2-3-4树/2-3-4树.html":{"url":"算法/查找/多路查找树/2-3-4树/2-3-4树.html","title":"2-3-4树","keywords":"","body":"一. 定义\n2-3-4树就是2-3树的扩展，2-3树中只有2结点和3结点，而2-3-4树添加了一个4结点：包含3个元素和四个孩子（或没有孩子）。其元素顺序与2-3树类似，对于4结点而言，第一子树中所有元素小于4结点中三个元素中最小的元素；第二子树中所有元素在4结点的最小元素和第二小元素之间；第三子树中所有元素在4结点的第二小元素和第三小元素之间；第四子树中所有元素都比4结点最大元素大。\n"},"算法/查找/多路查找树/B树/B树.html":{"url":"算法/查找/多路查找树/B树/B树.html","title":"B树","keywords":"","body":"一. 定义\nB树(B-Tree)是一种平衡的多路查找树，2-3树和2-3-4树都是B树的特例。\n结点最大的孩子数目称为B树的阶(order)，即2-3树是3阶B树，2-3-4树是4阶B树。\n二. 属性\n一个mmm阶的B树具有如下属性：\n\n如果根结点不是叶结点，则其至少有两棵子树。\n每一个非根的分支结点都有k−1k-1k−1个元素和kkk个孩子，其中[m/2]⩽k⩽m[m/2]\\leqslant k\\leqslant m[m/2]⩽k⩽m，其中[m/2][m/2][m/2]表示不小于m/2m/2m/2的最小整数。每一个叶子结点nnn都有k−1k-1k−1个元素，其中[m/2]⩽k⩽m[m/2]\\leqslant k\\leqslant m[m/2]⩽k⩽m。\n所有叶子结点都位于同一层次\n所有分支结点包含下列信息数据(nnn，A0A_0A​0​​，K1K_1K​1​​，A1A_1A​1​​，K2K_2K​2​​，A2A_2A​2​​，...，KnK_nK​n​​，AnA_nA​n​​)，其中：Ki(i=1K_i(i=1K​i​​(i=1，222，...，n)n)n)为关键字，且KiKi+1(i=1K_iK​i​​K​i+1​​(i=1，222，...，n−1)n-1)n−1)；Ai(i=0A_i(i=0A​i​​(i=0，222，...，n)n)n)为指向子树根结点的指针，且指针Ai−1A_{i-1}A​i−1​​所指子树中所有结点的关键字均小于KiK_iK​i​​，n([m/2]−1⩽n⩽m−1)n([m/2]-1\\leqslant n\\leqslant m-1)n([m/2]−1⩽n⩽m−1)为关键字的个数（或n+1n+1n+1为子树的个数）。\n\n三. 对效率的提升\n我们的外存（如硬盘），是将所有的信息分割成相等大小的页面，每次硬盘读写的都是一个或多个完整的页面，对于一个硬盘来说，一页的长度可能是21~214B。\n在一个典型的B树应用中，要处理的硬盘数据量很大，因此无法一次全部装入内存，所以我们对B树进行调整，使得B树的阶数（或结点的元素）与硬盘存储的页面大小相匹配。比如说一棵B树的阶为1001（即1个结点包含1000个关键字），高度为2，它就可以存储超过10亿个关键字，我们只要让根结点持久地保留在内存中，那么在这棵树上，寻找某一个关键字至多需要两次硬盘的读取即可。\n对于nnn个关键字的mmm阶B树，最多需要查找的次数是：\nk⩽log[m2](n+12)+1\nk\\leqslant log_{[{m\\over 2}]} ({n+1\\over 2})+1\nk⩽log​[​2​​m​​]​​(​2​​n+1​​)+1\n"},"算法/查找/多路查找树/B+树/B+树.html":{"url":"算法/查找/多路查找树/B+树/B+树.html","title":"B+树","keywords":"","body":"一. 引入\nB树也有缺点，在B树结构中，我们需要往返于每个结点之间进行多次查找，也就是说，我们必须得在硬盘的页面之间进行多次访问。如中序遍历时，我们先去第一子树，然后回根结点，然后遍历根结点，到第二子树的入口，然后遍历第二子树，然后回到根结点，又重新遍历，以此类推。\n而B+树就是解决这个问题的方法。\n二. 定义\nB+树是应文件系统所需而出的一种B树的变形树。在B+树中，出现在分支节点中的元素会被当做它们在该分支节点位置的中序后继者（叶子结点）中再次列出。另外，每一个叶子结点都会保存一个指向后一叶子结点的指针。\n一棵mmm阶的B+树和mmm阶的B树的差异在于：\n\n有nnn棵子树的结点中包含有nnn个关键字\n所有的叶子结点包含全部关键字的信息，及指向含这些关键字记录的指针，叶子结点本身依关键字的大小自小而大顺序链接。\n所有分支结点可以看成是索引，结点中仅含有其子树中的最大（或最小）关键字。\n\n"},"算法/查找/散列表查找/散列表查找.html":{"url":"算法/查找/散列表查找/散列表查找.html","title":"散列表(哈希表)查找","keywords":"","body":"一. 定义\n散列表查找即通过建立散列表时使用的散列函数以及处理散列冲突的方法来对需要查询的关键字求散列值，然后直接以散列值为地址直接定位到该位置即可，若不存在则说明该记录不存在。\n二. 特点\n散列技术既是一种存储方法，也是一种查找方法，它与线性表、树、图等结构不同的是，散列技术的记录之间不存在什么逻辑关系，它只与关键字有关联，因此散列主要是面向查找的存储结构。\n散列技术最适合的求解问题是查找与给定值相等的记录。对于查找来说，简化了比较过程，效率就会大大提高。但散列技术不具备很多常规数据结构的能力。一般只能通过主关键字来进行查找。\n"},"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html":{"url":"算法/查找/散列表查找/散列表查找算法/散列表查找算法.html","title":"散列表查找算法","keywords":"","body":"一. 原理\n散列表的查找与散列函数和处理散列冲突的方法直接相关，其过程主要如下：\n\n根据哈希函数得到散列值\n将散列值作为地址查找值\n若找到则返回true\n若未找到则根据处理散列冲突的方法继续更新散列值，若找到最后还是未找到，则返回false\n\n二. 性能分析\n如果没有冲突，那么散列表查找的性能是非常好的，它的时间复杂度为O(1)O(1)O(1)，但由于冲突的存在，散列表的性能是会受影响的，影响散列表查找性能的主要有以下几个方面：\n\n散列函数是否均匀\n处理冲突的方法\n散列表的装填因子：所谓装填因子(α\\alphaα)，其值等于填入表中的记录个数 / 散列表长度。装填因子越大，那么产生冲突的可能性就越大，所以如果我们降低装填因子，也就是增大散列表的长度，就能让散列查找的时间复杂度往O(1)O(1)O(1)靠近。\n\n"},"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html":{"url":"算法/查找/散列表查找/散列表查找算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 数据结构\n#define SUCCESS 1\n#define UNSUCCESS 0\n#define HASHSIZE 12\n#define NULLKEY -32768\n\ntypedef struct\n{\n    int *elem;                // 动态数组\n    int count;                // 当前元素个数\n}HashTable;\n\nint m = 0;                    // 散列表表长\n\n二. 初始化散列表\nStatus InitHashTable(HashTable *H)\n{\n    int i;\n    m = HASHSIZE;\n    H->count = m;\n    H->elem = (int *)malloc(m * sizeof(int));\n    for (i = 0; i elem[i] = NULLKEY;\n    }\n    return OK;\n}\n\n三. 散列函数\nint Hash(int key)\n{\n    return key % m;                // 使用除留余数法\n}\n\n四. 构造哈希表\nvoid InsertHash(HashTable *H, int key)\n{\n    int addr = Hash(key);\n    while (H->elem[addr] != NULLKEY) {\n        addr = (addr + 1) % m;\n    }\n    H->elem[addr] = key;\n}\n\n五. 散列表查找\nStatus SearchHash(HashTable H, int key, int *addr)\n{\n    *addr = Hash(key);\n    while (H.elem[*addr] != key) {\n        *addr = (*addr + 1) % m;\n        if (H.elem[*addr] == NULLKEY || *addr == Hash(key))\n            return UNSUCCESS;\n    }\n    return SUCCESS;\n}\n\n"},"算法/排序/排序.html":{"url":"算法/排序/排序.html","title":"排序","keywords":"","body":"一. 定义\n假设含有nnn个记录的序列为{ r1r_1r​1​​，r2r_2r​2​​，...，rnr_nr​n​​ }，其相应的关键字分别为{ k1k_1k​1​​，k2k_2k​2​​，...，knk_nk​n​​ }，需确定111，222，...，nnn的一种排列p1p_1p​1​​，p2p_2p​2​​，...，pnp_np​n​​，使其相应的关键字满足kp1⩽kp2⩽k_{p_1}\\leqslant k_{p_2}\\leqslantk​p​1​​​​⩽k​p​2​​​​⩽ ... ⩽kpn\\leqslant k_{p_n}⩽k​p​n​​​​非递减（或非递增）关系，即使得序列成为一个按关键字有序的序列{ rp1r_{p_1}r​p​1​​​​，rp2r_{p_2}r​p​2​​​​，...，rpnr_{p_n}r​p​n​​​​ }，这样的操作就称为排序。\n对于多个关键字的排序，一种解决方法是将这几个关键字按优先顺序排列好，然后组成一个字符串，对其进行字符串比较即可，需要注意的是字符串的位数需要对齐。由于多关键字也可以转换为单关键字进行解决，所以本总结只总结单关键字排序方法。\n二. 概念\n1. 排序的稳定性\n假设ki=kj(1⩽i⩽nk_i=k_j(1\\leqslant i\\leqslant nk​i​​=k​j​​(1⩽i⩽n，1⩽j⩽n1\\leqslant j\\leqslant n1⩽j⩽n，i≠j)i\\neq j)i≠j)，且在排序前的序列中rir_ir​i​​领先于rjr_jr​j​​（即ijiij）。如果排序后rir_ir​i​​仍领先于rjr_jr​j​​，则称所用的排序方法是稳定的；反之，若可能使得排序后的序列中rjr_jr​j​​领先于rir_ir​i​​，则称所用的排序方法是不稳定的。\n用通俗的话说，就是两个关键字相同的记录，在排序前是什么位序关系，排序后也不会改变这个位序关系，这就是稳定的排序方法，而只要有可能改变这个位序关系，那么就是不稳定的。\n2. 内排序与外排序\n内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。外排序是由于排序的记录个数太多，不能同时放置在内存中，整个排序过程需要在内外存之间多次交换数据才能进行。\n对于内排序来说，排序算法的性能主要受三个方面的影响：\n\n时间性能\n辅助空间\n算法的复杂性\n\n3. 排序用到的结构与函数\n排序一般是对于顺序表结构而言的，假设后续的所有用于排序的结构都如下：\n#define MAXSIZE 10000\ntypedef struct\n{\n    int r[MAXSIZE + 1];            // 第一个元素用作哨兵或临时变量\n    int length;\n}SqList;\n\n另外，对于排序而言，最常用的操作是数组两个元素的交换，所以先定义一个交换数据的函数：\nvoid swap(SqList *L, int i, int j)\n{\n    int temp = L->r[i];\n    L->r[i] = L->r[j];\n    L->r[j] = temp;\n}\n\n三. 总结\n\n\n\n排序方法\n平均情况\n最好情况\n最坏情况\n辅助空间\n稳定性\n\n\n\n\n冒泡排序\nO(n2)O(n^2)O(n​2​​)\nO(n)O(n)O(n)\nO(n2)O(n^2)O(n​2​​)\nO(1)O(1)O(1)\n稳定\n\n\n简单选择排序\nO(n2)O(n^2)O(n​2​​)\nO(n2)O(n^2)O(n​2​​)\nO(n2)O(n^2)O(n​2​​)\nO(1)O(1)O(1)\n稳定\n\n\n直接插入排序\nO(n2)O(n^2)O(n​2​​)\nO(n)O(n)O(n)\nO(n2)O(n^2)O(n​2​​)\nO(1)O(1)O(1)\n稳定\n\n\n希尔排序\nO(nlogn)O(nlogn)O(nlogn)~O(n2)O(n^2)O(n​2​​)\nO(n3/2)O(n^{3/2})O(n​3/2​​)\nO(n2)O(n^2)O(n​2​​)\nO(1)O(1)O(1)\n不稳定\n\n\n堆排序\nO(nlogn)O(nlogn)O(nlogn)\nO(nlogn)O(nlogn)O(nlogn)\nO(nlogn)O(nlogn)O(nlogn)\nO(1)O(1)O(1)\n不稳定\n\n\n归并排序\nO(nlogn)O(nlogn)O(nlogn)\nO(nlogn)O(nlogn)O(nlogn)\nO(nlogn)O(nlogn)O(nlogn)\nO(n)O(n)O(n)\n稳定\n\n\n快速排序\nO(nlogn)O(nlogn)O(nlogn)\nO(nlogn)O(nlogn)O(nlogn)\nO(n2)O(n^2)O(n​2​​)\nO(logn)O(logn)O(logn)~O(n)O(n)O(n)\n不稳定\n\n\n\n"},"算法/排序/冒泡排序/冒泡排序.html":{"url":"算法/排序/冒泡排序/冒泡排序.html","title":"冒泡排序","keywords":"","body":"一. 定义\n冒泡排序(Bubble Sort)是一种交换排序，它的基本思想是：两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。\n二. 复杂度分析\n对于优化后的冒泡排序法，最好的情况是要排序的表本身就是有序的，那么只需要n−1n-1n−1次比较，没有数据交换，时间复杂度为O(n)O(n)O(n)。最坏的情况是待排序表是逆序的情况，此时需要比较n×(n−1)2n\\times (n-1)\\over 2​2​​n×(n−1)​​次，并作等数量级的记录移动。因此，总的时间复杂度为O(n2)O(n^2)O(n​2​​)。\n"},"算法/排序/冒泡排序/最简排序法/最简排序法.html":{"url":"算法/排序/冒泡排序/最简排序法/最简排序法.html","title":"最简排序法","keywords":"","body":"介绍冒泡排序之前，先介绍一种最简单的排序算法，其基本思想如下：\n\n首先让变量i在第一个元素的位置，然后用变量j遍历整个数组，遇到比i位置元素小的就进行交换，最终可以把整个数组最小的元素放在数组第一个位置\n然后让变量i站在第二个元素的位置，变量j从第二个元素开始往后遍历整个数组，如上，可以将整个数组第二小的元素交换到第二个位置\n以此类推，最后就能将所有元素按从小到大的顺序排好\n\n可想而知，这个算法不论什么情况都比较了n×(n−1)2n\\times (n-1)\\over 2​2​​n×(n−1)​​次，也就是说，对于任何数组，它光是进行比较的时间消耗就是O(n2)O(n^2)O(n​2​​)，还得加上那些需要交换的消耗。\n"},"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html":{"url":"算法/排序/冒泡排序/最简排序法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void BubbleSort0(SqList *L)\n{\n    int i, j;\n    for (i = 1; i length; i++) {\n        for (j = i + 1; j length; j++) {\n            if (L->r[i] > L->r[j]) {\n                swap(L, i, j);\n            }\n        }\n    }\n}\n\n"},"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html":{"url":"算法/排序/冒泡排序/冒泡排序算法/冒泡排序算法.html","title":"冒泡排序算法","keywords":"","body":"相比于前面的最简排序法来说，冒泡排序从它的正向比较变成了逆向比较，其基本思路如下：\n\n首先让i站在第一个元素的位置，表示现在的任务是找到所有元素中最小的元素放在i的位置\n然后让j从数组最后一个元素开始往前遍历，每次比较j和j-1的元素值，将小的替换到前面，让大的替换到后面\n每次迭代都在比较完i和i+1的元素值后停止\n\n该算法相对于最简排序法来说，每次都将部分小的元素替换到了前面，其整体有序程度是在逐渐增加的，也就是说这是一个完全熵减过程，而并不会向最简排序那样有时还会让比较小的元素跑到后面去。也就是说，实际上的交换次数比最简排序少了一些。\n但是对于比较次数来说，还是一样的n×(n−1)2n\\times (n-1)\\over 2​2​​n×(n−1)​​次，所以总体来说效率提升并不大。\n"},"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html":{"url":"算法/排序/冒泡排序/冒泡排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void BubbleSort(SqList *L)\n{\n    int i, j;\n    for (i = 1; i length; i++) {\n        for (j = L->length - 1; j >= i; j--) {\n            if (L->r[j] > L->r[j + 1]) {\n                swap(L, j, j + 1);\n            }\n        }\n    }\n}\n\n"},"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html":{"url":"算法/排序/冒泡排序/冒泡排序优化/冒泡排序优化.html","title":"冒泡排序优化","keywords":"","body":"不论是在冒泡排序还是最简排序中，其比较的次数每次都是n×(n−1)2n\\times (n-1)\\over 2​2​​n×(n−1)​​，对于最简排序来说，每次交换之后可能会把本来相对有序的元素改变，所以这么多次的比较对最简排序来说还是相对有必要的，但是冒泡排序并不会改变原本相对有序的元素关系，也就是说，只要比较过一遍，如果两个元素相对有序，那就不需要再进行比较了，也就是说在原本的冒泡排序中，实际上有很多比较操作都是浪费的。\n想法是：只要有一次迭代没有发生元素交换，那么说明数组已经排序完成，不需要再进行后续的比较了\n其解决方法就是设置一个标记变量来实现。\n"},"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html":{"url":"算法/排序/冒泡排序/冒泡排序优化/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void BubbleSort2(SqList *L)\n{\n    int i, j;\n    Status flag = true;\n    for (i = 1; i length && flag; i++) {\n        flag = false;\n        for (j = L->length - 1; j >= i; j--) {\n            if (L->r[j] > L->r[j + 1]) {\n                swap(L, j, j + 1);\n                flag = true;\n            }\n        }\n    }\n}\n\n"},"算法/排序/简单选择排序/简单选择排序.html":{"url":"算法/排序/简单选择排序/简单选择排序.html","title":"简单选择排序","keywords":"","body":"一. 定义\n选择排序的基本思想就是每一次在n−i+1n-i+1n−i+1个记录中选取关键字最小的记录作为有序序列的第iii个记录。\n简单来说，就是每次在整个数组（相对）中找到最小的那个元素，然后交换到前面去。\n二. 复杂度分析\n从简单选择排序的过程来看，它最大的特点就是交换移动数据的次数相当少，这样也就节约了相应的时间。\n对于比较的次数，不论什么情况都是n×(n−1)2n\\times (n-1)\\over 2​2​​n×(n−1)​​次。对于交换次数而言，当最好的时候，交换为0次，最差的时候，即逆序时，交换次数为n−1n-1n−1次。因此，总的时间复杂度为O(n2)O(n^2)O(n​2​​)。\n"},"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html":{"url":"算法/排序/简单选择排序/简单选择排序算法/简单选择排序算法.html","title":"简单选择排序算法","keywords":"","body":"简单选择排序法(Simple Selection Sort)就是通过n−in-in−i次关键字的比较，从n−i+1n-i+1n−i+1个记录中选出关键字最小的记录，并和第i (1⩽i⩽n)i\\ (1\\leqslant i\\leqslant n)i (1⩽i⩽n)个记录交换。\n其基本思路是：\n\n让i指向第一个元素位置，然后用j遍历从i开始的所有元素，选出其中最小的元素，让其与i位置元素交换。\n然后让i指向第二个元素位置，重复以上步骤即可。\n\n"},"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html":{"url":"算法/排序/简单选择排序/简单选择排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void SelectSort(SqList *L)\n{\n    int i, j, min;\n    for (i = 1; i length; i++) {\n        min = i;\n        for (j = i + 1; j length; j++) {\n            if (L->r[min] > L->r[j])\n                min = j;\n        }\n        if (i != min)\n            swap(L, i, min);\n    }\n}\n\n"},"算法/排序/直接插入排序/直接插入排序.html":{"url":"算法/排序/直接插入排序/直接插入排序.html","title":"直接插入排序","keywords":"","body":"一. 定义\n直接插入排序(Straight Insertion Sort)的基本操作是将一个记录插入到已经排好序的有序表中，从而得到一个新的、记录新增1的有序表。\n二. 复杂度分析\n对于最好的情况，也就是要排序的表本身就是有序的，则一共比较了n−1n-1n−1次，交换了0次，时间复杂度为O(n)O(n)O(n)；\n对于最坏的情况，也就是要排序的表是逆序的情况，此时需要比较的次数是：(n+2)(n−1)2(n+2)(n-1)\\over 2​2​​(n+2)(n−1)​​次，移动次数是：(n+4)(n−1)2(n+4)(n-1)\\over 2​2​​(n+4)(n−1)​​次。\n对于平均的情况，直接插入排序法的时间复杂度为O(n2)O(n^2)O(n​2​​)。\n"},"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html":{"url":"算法/排序/直接插入排序/直接插入排序算法/直接插入排序算法.html","title":"直接插入排序算法","keywords":"","body":"直接插入排序算法的基本思想是：设置一个辅助空间，然后借助这个辅助空间来进行移位。\n\n首先将数组的哨兵位置设置为一个标志，表示哨兵\n然后从第一个元素开始，将第一个与第二个元素进行比较\n若其相对顺序不是要求的顺序，则交换哨兵与第二个元素，然后逐个将第二个元素之前的元素往后移（即依次与哨兵交换），直到遇到比要交换的元素更小的元素或者全部元素都已经后移为止，然后再次交换哨兵与该元素交换即可\n然后比较数组的第二个与第三个元素，进行与上述操作相似的操作，直到比较完并交换完最后一个元素和倒数第二个元素。\n\n"},"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html":{"url":"算法/排序/直接插入排序/直接插入排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void InsertSort(SqList *L)\n{\n    int i, j;\n    for (i = 2; i length; i++) {\n        if (L->r[i] r[i - 1]) {\n            L->r[0] = L->r[i];\n            for (j = i - 1; L->r[j] > L->r[0]; j--)\n                L->r[j + 1] = L->r[j];\n            L->r[j + 1] = L->r[0];\n        }\n    }\n}\n\n"},"算法/排序/希尔排序/希尔排序.html":{"url":"算法/排序/希尔排序/希尔排序.html","title":"希尔排序","keywords":"","body":"一. 原理\n希尔排序(Shell Sort)是先将序列变成基本有序的序列，即小的关键字基本在前面，大的基本在后面，不大不小的基本在中间。\n其基本方法是将相距某个“增量”的记录组成一个子序列，这样才能保证在子序列内分别进行直接插入排序后得到的结果是基本有序而不是局部有序。\n二. 复杂度分析\n希尔排序的时间复杂度与“增量”的选取息息相关，大量研究表明当增量序列为dlta[k]=2t−k+1−1 (0⩽k⩽t⩽[log2(n+1)])dlta[k]=2^{t-k+1}-1\\ (0\\leqslant k\\leqslant t\\leqslant [log_2 (n+1)])dlta[k]=2​t−k+1​​−1 (0⩽k⩽t⩽[log​2​​(n+1)])时，可以获得不错的效率，其时间复杂度为O(n3/2)O(n^{3/2})O(n​3/2​​)。\n"},"算法/排序/希尔排序/希尔排序算法/希尔排序算法.html":{"url":"算法/排序/希尔排序/希尔排序算法/希尔排序算法.html","title":"希尔排序算法","keywords":"","body":""},"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html":{"url":"算法/排序/希尔排序/希尔排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void ShellSort(SqList *L)\n{\n    int i, j, k = 0;\n    int increment = L->length;\n    do {\n        increment = increment / 3 + 1;\n        for (i = increment + 1; i length; i++) {\n            if (L->r[i] r[i - increment]) {\n                L->r[0] = L->r[i];\n                for (j = i - increment; j > 0 && L->r[0] r[j]; j -= increment)\n                    L->r[j + increment] = L->r[j];\n                L->r[j + increment] = L->r[0];\n            }\n        }\n    }\n    while(increment > 1);\n}\n\n"},"算法/排序/堆排序/堆排序.html":{"url":"算法/排序/堆排序/堆排序.html","title":"堆排序","keywords":"","body":"一. 定义\n堆排序就是利用堆进行排序的方法。\n二. 复杂度分析\n堆排序对原始记录的排序状态并不敏感，因此它无论是最好、最坏和平均时间复杂度均为O(nlogn)O(nlog n)O(nlogn)。\n"},"算法/排序/堆排序/堆排序算法/堆排序算法.html":{"url":"算法/排序/堆排序/堆排序算法/堆排序算法.html","title":"堆排序算法","keywords":"","body":"堆排序的基本思想是（以大顶堆为例）：将堆排序的序列构造成一个大顶堆。此时，整个序列的最大值就是堆顶的根结点。将它移走（其实就是将其与堆数组的末尾元素交换，此时末尾元素就是最大值），然后将剩余的n−1n-1n−1个序列重新构造成一个堆，这样就会得到nnn个元素中的次大值。如此反复执行，便能得到一个有序序列了。\n其面临的主要问题有两个：\n\n如何由一个无序序列构建成一个堆\n如何在输出堆顶元素后，调整剩余元素称为一个新的堆\n\n"},"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html":{"url":"算法/排序/堆排序/堆排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 堆建立\nvoid HeapSort(SqList *L)\n{\n    int i;\n    for (i = L->length / 2; i > 0; i--)\n        HeapAdjust(L, i, L->length);\n    for (i = L->length; i > 1; i--) {\n        swap(L, 1, i);\n        HeapAdjust(L, 1, i - 1);\n    }\n}\n\n二. 堆调整\nvoid HeapAdjust(SqList *L, int s, int m)\n{\n    int temp, j;\n    temp = L->r[s];\n    for (j = 2 * s; j r[j] r[j + 1])\n            ++j;\n        if (temp >= L->r[j])\n            break;\n        L->r[s] = L->r[j];\n        s = j;\n    }\n    L->r[s] = temp;\n}\n\n三. 堆排序\nfor (i = L->length; i > 1; i--) {\n    swap(L, 1, i);\n    HeapAdjust(L, 1, i - 1);\n}\n\n"},"算法/排序/归并排序/归并排序.html":{"url":"算法/排序/归并排序/归并排序.html","title":"归并排序","keywords":"","body":"一. 定义\n归并排序(Merging Sort)就是利用归并的思想实现的排序方法。\n所谓归并，就是先从单个元素进行比较，然后将进行比较的两个元素组成一组，与另外一组元素进行比较，然后又将两组元素组成一组元素，不断像这样进行比较，最终就能得到一个有序\n二. 复杂度分析\n归并排序每次需要将记录扫描一遍，耗费O(n)O(n)O(n)时间，一共需要进行排序的次数是[log2n][log_2n][log​2​​n]次，因此总的时间复杂度是O(nlogn)O(nlog n)O(nlogn)。\n另外，归并排序的空间复杂度为O(n+logn)O(n+logn)O(n+logn).\n"},"算法/排序/归并排序/归并排序算法/归并排序算法.html":{"url":"算法/排序/归并排序/归并排序算法/归并排序算法.html","title":"归并排序算法","keywords":"","body":"归并排序的原理是：假设初始序列含有nnn个记录，则可以看成是nnn个有序的子序列，每个子序列的长度为1，然后两两归并，得到[n/2][n/2][n/2]个长度为2或1的有序子序列（其中[n/2][n/2][n/2]表示不小于n/2n/2n/2的最小整数；再两两归并，……，如此重复，直至得到一个长度为nnn的有序序列位置，这种排序方法称为2路归并排序。\n"},"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html":{"url":"算法/排序/归并排序/归并排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 归并排序\nvoid MergeSort(SqList *L)\n{\n    MSort(L->r, L->r, 1, L->length);\n}\n\n二. 递归实现\nvoid MSort(int SR[], int TR1[], int s, int t)\n{\n    int m;\n    int TR2[MAXSIZE + 1];\n    if (s == t)\n        TR1[s] = SR[s];\n    else {\n        m = (s + t) / 2;\n        MSort(SR, TR2, s, m);\n        MSort(SR, TR2, m + 1, t);\n        Merge(TR2, TR1, s, m, t);\n    }\n}\n\n三. 归并函数\nvoid Merge(int SR[], int TR[], int i, int m, int n)\n{\n    int j, k, l;\n    for (j = m + 1, k = i; i \n"},"算法/排序/归并排序/非递归归并排序/非递归归并排序.html":{"url":"算法/排序/归并排序/非递归归并排序/非递归归并排序.html","title":"非递归归并排序","keywords":"","body":"归并排序是一种比较占用内存，但却效率高且稳定的算法。\n由于归并排序使用了递归，它就会造成时间和空间上的性能损耗，如果通过非递归方法来实现归并排序的话，性能上还会进一步提高。\n总的来说，使用归并排序时，尽量考虑非递归方法。\n"},"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html":{"url":"算法/排序/归并排序/非递归归并排序/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 归并排序\nvoid MergeSort2(SqList *L)\n{\n    int *TR = (int *)malloc(L->length * sizeof(int));\n    int k = 1;\n    while (k length) {\n        MergePass(L->r, TR, k, L->length);\n        k = 2 * k;\n        MergePass(TR, L->r, k, L->length);\n        k = 2 * k;\n    }\n}\n\n二. 归并操作\nvoid MergePass(int SR[], int TR[], int s, int n)\n{\n    int i = 1;\n    int j;\n    while (i \n"},"算法/排序/快速排序/快速排序.html":{"url":"算法/排序/快速排序/快速排序.html","title":"快速排序","keywords":"","body":"一. 引入\n希尔排序相当于直接插入排序的升级，它们同属于插入排序类；堆排序相当于简单选择排序的升级，它们同属于选择排序类。而快速排序其实就是冒泡排序的升级，它们都属于交换排序类。\n而快速排序的实现，增大了记录的比较和移动的距离，将关键字较大的记录从前面直接移动到后面，关键字较小的记录从后面直接移动到前面，从而减少了比较次数和移动交换次数。\n二. 复杂度分析\n在平均情况下，快速排序的时间复杂度为O(nlogn)O(nlog n)O(nlogn)，其空间复杂度为O(logn)O(log n)O(logn)。\n"},"算法/排序/快速排序/快速排序算法/快速排序算法.html":{"url":"算法/排序/快速排序/快速排序算法/快速排序算法.html","title":"快速排序算法","keywords":"","body":"快速排序(Quick Sort)的基本思想是：通过一趟排序将待排记录分割成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，则可分别对这两部分记录继续进行排序，已达到整个序列有序的目的。\n"},"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html":{"url":"算法/排序/快速排序/快速排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 快速排序\nvoid QuickSort(SqList *L)\n{\n    QSort(L, 1, L->length);\n}\n\n二. 对子序列快排\nvoid QSort(SqList *L, int low, int high)\n{\n    int pivot;\n    if (low \n三. 移动元素到枢轴\nint Partition(SqList *L, int low, int high)\n{\n    int pivotkey;\n    pivotkey = L->r[low];\n    while (low r[high] >= pivotkey)\n            high--;\n        swap(L, low, high);\n        while (low r[low] \n"},"算法/排序/快速排序/快速排序优化/快速排序优化.html":{"url":"算法/排序/快速排序/快速排序优化/快速排序优化.html","title":"快速排序优化","keywords":"","body":"一. 优化选取枢轴\n二. 优化不必要的交换\n三. 优化小数组时的排序方案\n四. 优化递归操作\n"},"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html":{"url":"算法/排序/快速排序/快速排序优化/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 优化选取枢轴\nint Partition(SqList *L, int low, int high)\n{\n    int pivotkey;\n\n    int m = low + (high - low) / 2;\n    if (L->r[low] > L->r[high])\n        swap(L, low, high);\n    if (L->r[m] > L->r[high])\n        swap(L, high, m);\n    if (L->r[m] > L->r[low])\n        swap(L, m, low);\n\n    pivotkey = L->r[low];\n    while (low r[high] >= pivotkey)\n            high--;\n        swap(L, low, high);\n        while (low r[low] \n二. 优化不必要的交换\nint Partition(SqList *L, int low, int high)\n{\n    int pivotkey;\n\n    int m = low + (high - low) / 2;\n    if (L->r[low] > L->r[high])\n        swap(L, low, high);\n    if (L->r[m] > L->r[high])\n        swap(L, high, m);\n    if (L->r[m] > L->r[low])\n        swap(L, m, low);\n\n    pivotkey = L->r[low];\n    L->r[0] = pivotkey;\n    while (low r[high] >= pivotkey)\n            high--;\n        L->r[low] = L->r[high];\n        while (low r[low] r[high] = L->r[low];\n    }\n    L->r[low] = L->r[0];\n    return low;\n}\n\n三. 优化小数组时的排序方案\n#define MAX_LENGTH_INSERT_SORT 7\nvoid QSort1(SqList *L, int low, int high)\n{\n    int pivot;\n    if ((high - low) > MAX_LENGTH_INSERT_SORT) {\n        pivot = Partition(L, low, high);\n        QSort1(L, low, pivot - 1);\n        QSort1(L, pivot + 1, high);\n    } else\n        InsertSort(L);\n}\n\n四. 优化递归操作\nvoid QSort2(SqList *L, int low, int high)\n{\n    int pivot;\n    if ((high - low) > MAX_LENGTH_INSERT_SORT) {\n        while (low \n"},"算法/图/图.html":{"url":"算法/图/图.html","title":"图","keywords":"","body":""},"算法/图/遍历/遍历.html":{"url":"算法/图/遍历/遍历.html","title":"遍历","keywords":"","body":"一. 定义\n从图中某一顶点出发访遍途中其余顶点，且使每一个顶点仅被访问一次，这一过程就叫做图的遍历(Traversing Graph)。\n二. 特点\n图的特点是一个顶点可能有多条边，所以可能存在的一种情况是沿着某条路径搜索后，有回到原顶点，而有些顶点还没有遍历到。\n所以为了避免这种情况，最好的办法是设置一个访问数组，元素个数与顶点个数相同，在没有被访问的时候将元素设置为0，访问之后将元素设置为1\n三. DFS与BFS的对比\n首先它们在时间复杂度上是一样的，不同之处仅仅在于对顶点访问的顺序不同。可见两者在全图遍历上是没有优劣之分的，只是是不同的情况选择不同的算法。\n不过如果图顶点和边非常多，不能在短时间内遍历完成，遍历的目的是为了寻找合适的顶点，那么选择哪种遍历就要仔细斟酌了。\n\n深度优先更适合目标比较明确，以找到目标为主要目的的情况\n广度优先更适合在不断扩大遍历范围时找到相对最优解的情况\n\n"},"算法/图/遍历/深度优先遍历/深度优先遍历.html":{"url":"算法/图/遍历/深度优先遍历/深度优先遍历.html","title":"深度优先遍历","keywords":"","body":"一. 定义\n深度优先遍历(Depth First Search)，也有称为深度优先搜索，简称为DFS\n二. 遍历过程\n\n对于上图的深度优先遍历过程如下：\n\n首先确定起点为A，每走一个点就做上标记\n按照某个原则一直往前走：在没有碰到重复顶点的情况下，始终向右手边走\n所以A的下一个顶点是B，然后按照同样的原则先后遍历C、D、E、F\n到了F之后，发现最右边是A，而与A相邻的所有顶点已经遍历完了，此时选择从右数的第二条通道，到了G顶点\nG上有三条通道，发现B和D已经遍历过了，所以选择H\n而到了H之后，发现所有可以遍历的顶点都已经遍历过了，于是选择回退G\n然后已然没有未遍历的顶点，于是退回到F\n按照上述过程一直回退到D，发现还有一个I顶点没有被遍历，标记完I之后，再继续回退\n直到退回到A，此时所有顶点已经遍历完成\n\n三. 原理\n深度优先遍历其实就是一个递归的过程，它从图中某个顶点v出发，访问此顶点，然后从v的未被访问的邻接点出发深度优先遍历图，直至图中所有和v有路径相同的顶点都被访问到。\n通过此原理可以对连通图进行完全遍历，如果是非连通图，则对它的连通分量分别进行深度优先遍历，即在前一个顶点进行一次深度优先遍历后，若图中尚有顶点未被访问，则另选图中一个未曾被访问的顶点作起始点，重复上述过程，直到图中所有顶点都被访问到为止。\n"},"算法/图/遍历/深度优先遍历/代码实现/代码实现.html":{"url":"算法/图/遍历/深度优先遍历/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 邻接矩阵的DFS\n#define MAXVEX 100\nbool visited[MAXVEX];\n\nvoid DFS(MGraph G, int i)\n{\n    int j;\n    visited[i] = true;\n    printf(\"%c \", G.vexs[i]);\n    for(j = 0; j \n二. 邻接表的DFS\nvoid DFS(GraphAdjList GL, int i)\n{\n    EdgeNode *p;\n    visited[i] = true;\n    printf(\"%c \", GL->adjList[i].data);\n    p = GL->adjList[i].firstedge;\n    while(p)\n    {\n        if(!visited[p->adjvex])\n            DFS(GL, p->adjvex);\n        p = p->next;\n    }\n}\n\nvoid DFSTraverse(GraphAdjList GL)\n{\n    int i;\n    for(i = 0; i numVertexes; i++)\n        visited[i] = false;\n    for(i = 0; i numVertexes; i++)\n        if(!visited[i])\n            DFS(GL, i);\n}\n\n"},"算法/图/遍历/广度优先遍历/广度优先遍历.html":{"url":"算法/图/遍历/广度优先遍历/广度优先遍历.html","title":"广度优先遍历","keywords":"","body":"一. 定义\n广度优先遍历(Breadth First Search)，又称为广度优先搜索，简称BFS。\n二. 遍历过程\n首先给出一个图如下：\n\n选定一个顶点，假定为A，然后按照以下方法将该图按层序排好：\n\n将顶点A放置在最顶层\n与A直接相连的B和F放在第二层\n与B、F直接相连的C、I、G、E放在第三层\n以此类推……\n\n按照层序排好的图如下所示：\n\n最后按照从顶向下的顺序进行遍历，即：A、B、F、C、I、G、E、D、H\n"},"算法/图/遍历/广度优先遍历/代码实现/代码实现.html":{"url":"算法/图/遍历/广度优先遍历/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 邻接矩阵的BFS\nvoid BFSTraverse(MGraph G)\n{\n    int i, j;\n    Queue Q;\n    for(i = 0; i \n二. 邻接表的BFS\nvoid BFSTraverse(GraphAdjList GL)\n{\n    int i;\n    EdgeNode *p;\n    Queue Q;\n    for(i = 0; i numVertexes; i++)\n        visited[i] = false;\n    InitQueue(&Q);\n    for(i = 0; i numVertexes; i++)\n    {\n        if(!visited[i])\n        {\n            visited[i] = true;\n            printf(\"%c \", GL->adjList[i].data);\n            EnQueue(&Q, i);\n            while(!QueueEmpty(Q))\n            {\n                DeQueue(&Q, &i);\n                p = GL->adjList[i].firstedge;\n                while(p)\n                {\n                    if(!visited[p->adjvex])\n                    {\n                        visited[p->adjvex] = true;\n                        printf(\"%c \", GL->adjList[p->adjvex].data);\n                        EnQueue(&Q, p->adjvex);\n                    }\n                    p = p->next;\n                }\n            }\n        }\n    }\n}\n\n"},"算法/图/最小生成树/最小生成树.html":{"url":"算法/图/最小生成树/最小生成树.html","title":"最小生成树","keywords":"","body":"一. 引入\n如果有这样一个网图：\n\n其中的顶点代表九个村子，现在要将九个村子连通起来，其中的边及权表示村子之间的距离，而没有边及权则表示那两个村子因为有高山或湖泊无法连通，那么如何让九个村子用最少的路程能够连通起来呢？\n在图的定义和术语中，曾经提到过，一个连通图的生成树是一个极小的连通子图，同含有图中全部的顶点，但只有足以构成一棵树的n-1条边。\n二. 定义\n构造连通图的最小代价生成树称为最小生成树(Minimum Cost Spanning Tree)。\n找连通图的最小生成树，经典的有两种算法，普里姆算法和克鲁斯卡尔算法。\n"},"算法/图/最小生成树/普里姆算法/普里姆算法.html":{"url":"算法/图/最小生成树/普里姆算法/普里姆算法.html","title":"普里姆(Prim)算法","keywords":"","body":"一. 案例\n一个已知的网图如下：\n\n二. 解决方法\n\n首先找到任意一个顶点，如A。\n此时与它相关的两条边分别是AB和AF，选择权值更小的AB\n此时AB已连通，所以再看与两个顶点A和B相连的所有边：BC、BI、BG和AF，选择权值更小的AF\n此时端点为B和F，则看与B和F相连的所有边，以此类推，直到所有顶点都连通时结束。\n\n"},"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html":{"url":"算法/图/最小生成树/普里姆算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void MiniSpanTree_Prim(MGraph G)\n{\n    int min, i, j, k;\n    int adjvex[MAXVEX];\n    int lowcost[MAXVEX];\n    lowcost[0] = 0;\n    adjvex[0] = 0;\n    for(i = 1; i \n"},"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html":{"url":"算法/图/最小生成树/克鲁斯卡尔算法/克鲁斯卡尔算法.html","title":"克鲁斯卡尔(Kruskal)算法","keywords":"","body":"一. 定义\n普里姆算法是从任意一个点开始，逐渐完善这个生成树，而克鲁斯卡尔算法是先选出权值最低的边，然后再找出第二小的边，并判断可选还是不可选。\n实现这种方法边集数组是最好的选择。\n二. 案例\n一个已知的网图如下：\n\n三. 解决方法\n\n首先找到权值最小的边HE，其两个顶点都还未被连通，所以将其相连\n然后找到第二小的边IC，也并未相连，所以将其相连\n再逐步将AB、AF、BI、BG、HD相连\n下一个权值最小的边是17，可是此时GF已经间接连通了，所以需要跳过再找下一个\n于是选择权值为19的GH，未连通，所以将其连通，此时所有顶点已连通\n\n"},"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html":{"url":"算法/图/最小生成树/克鲁斯卡尔算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"void MiniSpanTree_Kruskal(MGraph G)\n{\n    int i, n, m;\n    Edge edges[MAXEDGE];\n    int parent[MAXVEX];\n\n    for(i = 0; i  0)\n    {\n        f = parent[f];\n    }\n    return f;\n}\n\n"},"算法/图/最短路径/最短路径.html":{"url":"算法/图/最短路径/最短路径.html","title":"最短路径","keywords":"","body":"一. 定义\n对于图来说，从一个顶点到另一个顶点一般不止一条路径，所以就有需求选出两个顶点之间最短的路径。\n对于非网图来说，所谓的最短路径就是指两定点之间经过的边数最少的路径，显然研究非网图的最短路径意义并不大；\n对于网图来说，最短路径，是指两顶点之间经过的边上权值之和最少的路径，并且我们称路径上的第一个顶点是源点，最后一个顶点是终点。\n二. 对比\n对于求顶点之间的最短路径的算法有迪杰斯特拉算法和弗洛伊德算法，二者在适用条件上有些区别。\n从时间复杂的的角度来说：\n\n迪杰斯特拉算法找到某两个点之间的最短路径的时间复杂度为O(n2)O(n^2)O(n​2​​)，但找到全部点之间的最短路径的时间复杂度为O(n3)O(n^3)O(n​3​​)\n弗洛伊德算法没有只找到某两个点之间的最短路径，它直接查找出所有点之间的最短路径，其时间复杂度为O(n3)O(n^3)O(n​3​​)\n\n所以从上面可以看出，如果只想找到某两个点之间的最短路径，且对图的最短路径查找频率并不频繁的情况下，选择迪杰斯特拉算法更适合；如果想找到所有点之间的最短路径，并且对图的最短路径查找频率很频繁的情况下，选择弗洛伊德算法明显更适合。\n"},"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html":{"url":"算法/图/最短路径/迪杰斯特拉算法/迪杰斯特拉算法.html","title":"迪杰斯特拉(Dijkstra)算法","keywords":"","body":"一. 定义\n迪杰斯特拉(Dijkstra)算法是一个按路径长度递增的次序产生最短路径的算法。\n二. 案例\n现有下面这个网图，求从V0到V8的最短路径\n\n三. 解决方法\n\n首先在V0处，选择去第二层最短的路径，即V0-V1\n然后在V1处，选择去第三层最短的路径，即V1-V2-V4\n然后在V4处，选择去第四层最短的路径，即V4-V3-V6\n最后在V6处，选择去第五层最短的路径，即V6-V7-V8\n\n"},"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html":{"url":"算法/图/最短路径/迪杰斯特拉算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"// 数据结构\n#define MAXEDGE 20\n#define MAXVEX 20\n#define INFINITY 65535\n\ntypedef struct\n{\n    int vexs[MAXVEX];\n    int arc[MAXVEX][MAXVEX];\n    int numVertexes, numEdges;\n}MGraph;\n\ntypedef int Patharc[MAXVEX];\ntypedef int ShortPathTable[MAXVEX];\n\n// 算法\nvoid ShortestPath_Dijkstra(MGraph G, int v0, Patharc *P, ShortPathTable *D)\n{\n    int v, w, k, min;\n    int final[MAXVEX];\n    for(v = 0; v \n"},"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html":{"url":"算法/图/最短路径/弗洛伊德算法/弗洛伊德算法.html","title":"弗洛伊德(Floyd)算法","keywords":"","body":"一. 定义\n首先假设有两个矩阵，表示每个点之间的边。其中一个叫做D−1D^{-1}D​−1​​，用来存储每条边的权值，其实就是邻接矩阵；另一个叫做P−1P^{-1}P​−1​​，用来存储从对应顶点的最短路径的前驱矩阵，以行标为起点，以列标为终点，先将所有从起点到终点的最短路径设置为终点的值，也就是说到每个顶点的最短路径都先设置为不经过中转直接到该终点。\n然后再遍历整个图，更新D−1D^{-1}D​−1​​为DDD，表示以行标为起点，以列标为终点的所有最短路径值；更新P−1P^{-1}P​−1​​到PPP，表示以行标为起点，以列标为终点的最短路径。\n二. 案例\n现有一个网图如下，求V0到V8的最短路径。\n\n三. 解决方法\n\n首先建立D−1D^{-1}D​−1​​和P−1P^{-1}P​−1​​两个矩阵：\nD−1=[015∞∞∞∞∞∞10375∞∞∞∞530∞17∞∞∞∞7∞02∞3∞∞∞5120369∞∞∞7∞30∞5∞∞∞∞36027∞∞∞∞∞95204∞∞∞∞∞∞740]\n   D^{-1}=\\left[\n   \\begin{matrix}\n   0&1&5&\\infty &\\infty &\\infty &\\infty &\\infty &\\infty \\\\\n   1&0&3&7&5&\\infty &\\infty &\\infty &\\infty \\\\\n   5&3&0&\\infty &1&7&\\infty &\\infty &\\infty \\\\\n   \\infty &7&\\infty &0&2&\\infty &3&\\infty &\\infty \\\\\n   \\infty &5&1&2&0&3&6&9&\\infty \\\\\n   \\infty &\\infty &7&\\infty &3&0&\\infty &5&\\infty \\\\\n   \\infty &\\infty &\\infty &3&6&0&2&7&\\infty \\\\\n   \\infty &\\infty &\\infty &\\infty &9&5&2&0&4 \\\\\n   \\infty &\\infty &\\infty &\\infty &\\infty &\\infty &7&4&0 \\\\\n   \\end{matrix}\n   \\right]\n   D​−1​​=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​1​5​∞​∞​∞​∞​∞​∞​​​​1​0​3​7​5​∞​∞​∞​∞​​​5​3​0​∞​1​7​∞​∞​∞​​​∞​7​∞​0​2​∞​3​∞​∞​​​∞​5​1​2​0​3​6​9​∞​​​∞​∞​7​∞​3​0​0​5​∞​​​∞​∞​∞​3​6​∞​2​2​7​​​∞​∞​∞​∞​9​5​7​0​4​​​∞​∞​∞​∞​∞​∞​∞​4​0​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​\nP−1=[012345678012345678012345678012345678012345678012345678012345678012345678]\n   P^{-1}=\\left[\n   \\begin{matrix}\n   0&1&2&3&4&5&6&7&8\\\\\n   0&1&2&3&4&5&6&7&8\\\\\n   0&1&2&3&4&5&6&7&8\\\\\n   0&1&2&3&4&5&6&7&8\\\\\n   0&1&2&3&4&5&6&7&8\\\\\n   0&1&2&3&4&5&6&7&8\\\\\n   0&1&2&3&4&5&6&7&8\\\\\n   0&1&2&3&4&5&6&7&8\\\\\n   \\end{matrix}\n   \\right]\n   P​−1​​=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​0​0​0​0​0​0​0​​​​1​1​1​1​1​1​1​1​​​2​2​2​2​2​2​2​2​​​3​3​3​3​3​3​3​3​​​4​4​4​4​4​4​4​4​​​5​5​5​5​5​5​5​5​​​6​6​6​6​6​6​6​6​​​7​7​7​7​7​7​7​7​​​8​8​8​8​8​8​8​8​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​\n\n然后从头开始每个点遍历，首先以V0为中转点，计算是否有最短路径的变化，其结果为否\n\n然后以V1为中转点，计算是否有最短路径的变化\n\n从V[0][0]开始一直到V[8][8]为止，以V1为中转点对矩阵进行遍历\nV0-V0、V0-V1不用说，都是没有变化的，而V0-V1-V2比V0-V2更短，所以更新D−1[V0][V2]D^{-1}[V0][V2]D​−1​​[V0][V2]为最新路径4，更新P−1[V0][V2]P^{-1}[V0][V2]P​−1​​[V0][V2]为当前中转点V1的下标1\n以相同方法遍历整个矩阵，将所有路径减小的边进行修改\n\n\n然后以V2为中转点，计算相比于以更新后的两个矩阵是否又有变化，如果有就同上进行修改\n\n重复上述操作，直到以V8为中转点将矩阵遍历完，得到以下两个新矩阵：\nD=[01475810121610364791115430314681276302535954120357118745307591096357026121185752041615129119640]\n   D=\\left[\n   \\begin{matrix}\n   0&1&4&7&5&8&10&12&16\\\\\n   1&0&3&6&4&7&9&11&15\\\\\n   4&3&0&3&1&4&6&8&12\\\\\n   7&6&3&0&2&5&3&5&9\\\\\n   5&4&1&2&0&3&5&7&11\\\\\n   8&7&4&5&3&0&7&5&9\\\\\n   10&9&6&3&5&7&0&2&6\\\\\n   12&11&8&5&7&5&2&0&4\\\\\n   16&15&12&9&11&9&6&4&0\\\\\n   \\end{matrix}\n   \\right]\n   D=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​1​4​7​5​8​10​12​16​​​​1​0​3​6​4​7​9​11​15​​​4​3​0​3​1​4​6​8​12​​​7​6​3​0​2​5​3​5​9​​​5​4​1​2​0​3​5​7​11​​​8​7​4​5​3​0​7​5​9​​​10​9​6​3​5​7​0​2​6​​​12​11​8​5​7​5​2​0​4​​​16​15​12​9​11​9​6​4​0​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​\nP=[011111111012222222112444444444344666222345333444445777333337677666665678777777778]\n   P=\\left[\n   \\begin{matrix}\n   0&1&1&1&1&1&1&1&1\\\\\n   0&1&2&2&2&2&2&2&2\\\\\n   1&1&2&4&4&4&4&4&4\\\\\n   4&4&4&3&4&4&6&6&6\\\\\n   2&2&2&3&4&5&3&3&3\\\\\n   4&4&4&4&4&5&7&7&7\\\\\n   3&3&3&3&3&7&6&7&7\\\\\n   6&6&6&6&6&5&6&7&8\\\\\n   7&7&7&7&7&7&7&7&8\\\\\n   \\end{matrix}\n   \\right]\n   P=​⎣​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎢​⎡​​​0​0​1​4​2​4​3​6​7​​​​1​1​1​4​2​4​3​6​7​​​1​2​2​4​2​4​3​6​7​​​1​2​4​3​3​4​3​6​7​​​1​2​4​4​4​4​3​6​7​​​1​2​4​4​5​5​7​5​7​​​1​2​4​6​3​7​6​6​7​​​1​2​4​6​3​7​7​7​7​​​1​2​4​6​3​7​7​8​8​​​⎦​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎥​⎤​​\n\n其中根据矩阵D可以直接找出从某点到某点的最短距离\n根据矩阵P可以找出从某点到某点的最短路径\n我们要查找从V0-V8的路径，所以我们先看P[V0][V8]P[V0][V8]P[V0][V8]，其值为1，所以第一个需要经过的中转点为V1，此时路径为V0-V1；\n然后我们让这个查找到的值取代列号，即查看P[V1][V8]P[V1][V8]P[V1][V8]，其值为2，所以此时路径为V0-V1-V2；\n然后查看P[V2][V8]P[V2][V8]P[V2][V8]，得到4，此时路径为V0-V1-V2-V4；\n然后查看P[V4][V8]P[V4][V8]P[V4][V8]，得到3，此时路径为V0-V1-V2-V4-V3；\n然后查看P[V3][V8]P[V3][V8]P[V3][V8]，得到6，此时路径为V0-V1-V2-V4-V3-V6；\n然后查看P[V6][V8]P[V6][V8]P[V6][V8]，得到7，此时路径为V0-V1-V2-V4-V3-V6-V7；\n然后查看P[V7][V8]P[V7][V8]P[V7][V8]，得到8，此时路径为V0-V1-V2-V4-V3-V6-V7-V8；\n此时已得到该最短路径，可以看到该路径与用迪杰斯特拉算法得到的相同。\n\n\n\n\n\n"},"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html":{"url":"算法/图/最短路径/弗洛伊德算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"一. 算法代码\ntypedef int Patharc[MAXVEX][MAXVEX];\ntypedef int ShortPathTable[MAXVEX][MAXVEX];\nvoid ShortestPath_Floyd(MGraph G, Patharc *P, ShortPathTable *D)\n{\n    int v, w, k;\n    for(v = 0; v  (*D)[v][w] + (*D)[k][w])\n                {\n                    (*D)[v][w] = (*D)[v][k] + (*D)[k][w];\n                    (*P)[v][w] = (*P)[v][k];\n                }\n            }\n        }\n    }\n}\n\n二. 据表查最短路径\nprintf(\"各顶点间最短路径如下:\\n\");\nfor(v = 0; v  %d\", k);\n            k = P[k][w];\n        }\n        printf(\" -> %d\\n\", w);\n    }\n    printf(\"\\n\");\n}\n\n"},"算法/图/拓扑排序/拓扑排序.html":{"url":"算法/图/拓扑排序/拓扑排序.html","title":"拓扑排序","keywords":"","body":"一. 引入\n对于这样一种过程，如施工过程、生产流程、软件开发、教学安排等都可以分为若干个“活动”的子工程。\n在这些活动之间，通常会受到一定的条件约束，如其中某些活动必须在另一些活动完成之后才能开始。就像电影制作不可能在人员到位进驻场地时，导演还没有找到，也不可能在拍摄过程中，场地都没有。\n这样的工程，一定是无环的有向图。\n二. 定义\n在一个表示工程的有向图中，用顶点表示活动，用弧表示活动之间的优先关系，这样的有向图为顶点表示活动的网，我们称为AOV网（Activity On Vertex Network）。\nAOV网中的弧表示活动之间存在的某种制约关系。比如演职人员确定了，场地也联系好了，才可以进行拍摄。另外就是AOV网中不能存在回路。\n设G=(VG=(VG=(V, E)E)E)是一个具有nnn个顶点的有向图，VVV中的顶点序列v1v_1v​1​​，v2v_2v​2​​，...，vnv_nv​n​​，满足若从顶点viv_iv​i​​到vjv_jv​j​​有一条路径，则在顶点序列中顶点viv_iv​i​​必在顶点vjv_jv​j​​之前。则我们称这样的顶点序列为一个拓扑序列\n注：如果两个点之间没有路径，那么其没有先后顺序要求\n而拓扑排序，就是对一个有向图构造拓扑序列的过程。\n构造时会有两个结果，如果此网的全部顶点都被输出，则说明它是不存在环的AOV网；如果输出顶点数少了，则说明这个网存在环，不是AOV网。\n"},"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html":{"url":"算法/图/拓扑排序/拓扑排序算法/拓扑排序算法.html","title":"拓扑排序算法","keywords":"","body":"一. 基本思路\n对AOV网进行拓扑排序的基本思路是：从AOV网中选择一个入度为0的顶点输出，然后删除此顶点，并删除以此顶点为尾的弧，继续重复此步骤，直到输出全部顶点或者AOV网中不存在入度为0的顶点为止。\n首先我们需要确定一下这个图需要使用的数据结构，由于在拓扑排序的过程中，需要删除顶点，显然使用邻接表更加方便；然后我们需要将这个序列保存下来，所以我们还需要一个栈用来存储序列。由于在算法过程中始终要查找入度为0的顶点，我们在原来顶点表结点结构中，增加一个入度域in。\n"},"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html":{"url":"算法/图/拓扑排序/拓扑排序算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"// 数据结构\ntypedef struct EdgeNode\n{\n    int adjvex;\n    int weight;\n    struct EdgeNode *next;\n}EdgeNode;\n\ntypedef struct VertexNode\n{\n    int in;\n    int data;\n    EdgeNode *firstedge;\n}VertexNode, AdjList[MAXVEX];\n\ntypedef struct\n{\n    AdjList adjList;\n    int numVertexes, numEdges;\n}graphAdjList, *GraphAdjList;\n\n// 算法\nStatus TopologicalSort(GraphAdjList GL)\n{\n    EdgeNode *e;\n    int i, k, gettop;\n    int top = 0;\n    int count = 0;\n    int *stack;\n    stack = (int *)malloc(GL->numVertexes * sizeof(int));\n    for(i = 0; i numVertexes; i++)\n        if(0 == GL->adjList[i].in)\n            stack[++top] = i;\n    while(top != 0)\n    {\n        gettop = stack[top--];\n        printf(\"%d -> \", GL->adjList[gettop].data);\n        count++;\n        for(e = GL->adjList[gettop].firstedge; e; e = e->next)\n        {\n            k = e->adjvex;\n            if(!(--GL->adjList[k].in))\n                stack[++top] = k;\n        }\n    }\n    if(count numVertexes)\n        return ERROR;\n    else\n        return OK;\n}\n\n"},"算法/图/关键路径/关键路径.html":{"url":"算法/图/关键路径/关键路径.html","title":"关键路径","keywords":"","body":"一. 引入\n拓扑排序主要是为解决一个工程能否顺序进行的问题，但有时我们还需要解决工程完成需要的最短时间问题。比如说，造一辆汽车，我们需要先造各种各样的零件、部件，最终再组装成车。\n这些零部件基本都是在流水线上同时生产的，加入造一个轮子需要0.5天，造一个发动机需要3天，造一个车底盘需要2天，造一个外壳需要2天，造其他零部件需要2天，全部零部件集中到一处需要0.5天，组装成车需要2天，那么，在汽车厂造一辆车，最短需要多少时间呢？\n很明显，造一个发动机需要的时间最长，在造发动机的这段时间里，已经造好了汽车需要的四个轮子，车底盘，外壳和其他零部件，所以最终花的时间就是：3+0.5+2=5.5天。\n在这个问题里面，需要注意的是对于造一辆汽车来说，造一个发动机是决定最短时间的关键过程，因此，如果我们要对一个流程图获得最短时间，就必须要分析它们的拓扑关系，并且找到当中最关键的流程，这个流程的时间就是最短时间。\n二. 定义\n在一个表示工程的带权有向图中，用顶点表示事件，用有向边表示活动，用边上的权值表示活动的持续时间，这种有向图的边表示活动的网，我们称之为AOE网(Activity On Edge Network)。\nAOE网中没有入边的顶点称为始点或源点；没有出边的顶点称为终点或汇点。正常情况下，AOE网只有一个源点和汇点。\nAOE网的特点有：在某定点所代表的事件发生后，从该定点出发的各活动才能开始。只有在进入顶点的各活动都已经结束，该顶点所代表的事件才能发生。\n路径上各个活动所持续的时间之和称为路径长度，从源点到汇点具有最大长度的路径叫做关键路径，在关键路径上的活动叫关键活动\n而计算关键路径的算法就是关键路径算法。\n"},"算法/图/关键路径/关键路径算法/关键路径算法.html":{"url":"算法/图/关键路径/关键路径算法/关键路径算法.html","title":"关键路径算法","keywords":"","body":"一. 定义\n对于生产过程的一个完整的时间轴，其各个项目的生产时间是固定的，而只要是整段时间都完全在工作的话，那么在每个阶段肯定是有一个过程是在完全工作的，而对于该阶段而言，该过程就是关键路径。\n首先，我们需要定义如下几个参数：\n\n事件的最早发生时间etv(earliest time of vertex)：即顶点vkv_kv​k​​的最早发生时间\n事件的最晚发生时间ltv(latest time of vertex)：即顶点vkv_kv​k​​的最晚发生时间，也就是每个顶点对应的时间最晚需要开始的时间，超出此时间将会延误整个工期。\n活动的最早开工时间ete(earliest time of edge)：即弧aka_ka​k​​的最早发生时间\n活动的最晚开工时间lte(latest time of edge)：即弧aka_ka​k​​的最晚发生时间，也就是不推迟工期的最晚开工时间\n\n我们是由1和2可以求得3和4，然后再根据ete[k]是否与lte[k]相等来判断aka_ka​k​​是否是关键活动。\n二. 算法过程\n\n求事件的最早发生时间etv的过程，就是我们从头至尾找拓扑序列的过程，因此，在求关键路径之前，需要先调用依次拓扑序列算法的代码来计算etv和拓扑序列列表\n然后求出关键路径\n\n"},"算法/图/关键路径/关键路径算法/代码实现/代码实现.html":{"url":"算法/图/关键路径/关键路径算法/代码实现/代码实现.html","title":"1. 代码实现","keywords":"","body":"int *etv, *ltv;\nint *stack2;\nint top2;\n// 改进过的求拓扑序列的算法\nStatus TopologicalSort(GraphAdjList GL)\n{\n    EdgeNode *e;\n    int i, k, gettop;\n    int top = 0;\n    int count = 0;\n    int *stack;\n    stack = (int *)malloc(GL->numVertexes *sizeof(int));\n    for(i = 0; i numVertexes; i++)\n        if(0 == GL->adjList[i].in)\n            stack[++top] = i;\n    top2 = 0;\n    etv = (int *)malloc(GL->numVertexes * sizeof(int));\n    for(i = 0; i numVertexes; i++)\n        etv[i] = 0;\n    stack2 = (int *)malloc(GL->numVertexes * sizeof(int));\n    while(top != 0)\n    {\n        gettop = stack[top--];\n        count++;\n        stack2[++top2] = gettop;\n        for(e = GL->adjList[gettop].firstedge; e; e = e->next)\n        {\n            k = e->adjvex;\n            if(!(--GL->adjList[k].in))\n                stack[++top] = k;\n            if((etv[gettop] + e->weight) > etv[k])\n                etv[k] = etv[gettop] + e->weight;\n        }\n    }\n    if(count numVertexes)\n        return ERROR;\n    else\n        return OK;\n}\n\n// 求关键路径\nvoid CriticalPath(GraphAdjList GL)\n{\n    EdgeNode *e;\n    int i, gettop, k, j;\n    int ete, lte;\n    TopologicalSort(GL);\n    ltv = (int *)malloc(GL->numVertexes * sizeof(int));\n    for(i = 0; i numVertexes; i++)\n        ltv[i] = etv[GL->numVertexes - 1];\n    while(top2 != 0)\n    {\n        gettop = stack2[top2--];\n        for(e = GL->adjList[gettop].firstedge; e; e = e->next)\n        {\n            k = e->adjvex;\n            if(ltv[k] - e->weight weight;\n        }\n    }\n    for(j = 0; j numVertexes; j++)\n    {\n        for(e = GL->adjList[j].firstedge; e; e = e->next)\n        {\n            k = e->adjvex;\n            ete = etv[j];\n            lte = ltv[k] - e->weight;\n            if(ete == lte)\n                printf(\" length: %d \\n\", GL->adjList[j].data, GL->adjList[k].data, e->weight);\n        }\n    }\n}\n\n"}}}